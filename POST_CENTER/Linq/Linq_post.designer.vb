'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FDA_DRUG_POST")>  _
Partial Public Class Linq_postDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCAPA(instance As CAPA)
    End Sub
  Partial Private Sub UpdateCAPA(instance As CAPA)
    End Sub
  Partial Private Sub DeleteCAPA(instance As CAPA)
    End Sub
  Partial Private Sub InsertTRANSACTION_UPLOAD_GMP(instance As TRANSACTION_UPLOAD_GMP)
    End Sub
  Partial Private Sub UpdateTRANSACTION_UPLOAD_GMP(instance As TRANSACTION_UPLOAD_GMP)
    End Sub
  Partial Private Sub DeleteTRANSACTION_UPLOAD_GMP(instance As TRANSACTION_UPLOAD_GMP)
    End Sub
  Partial Private Sub InsertCER_GMP(instance As CER_GMP)
    End Sub
  Partial Private Sub UpdateCER_GMP(instance As CER_GMP)
    End Sub
  Partial Private Sub DeleteCER_GMP(instance As CER_GMP)
    End Sub
  Partial Private Sub InsertCOMPAIN_XML(instance As COMPAIN_XML)
    End Sub
  Partial Private Sub UpdateCOMPAIN_XML(instance As COMPAIN_XML)
    End Sub
  Partial Private Sub DeleteCOMPAIN_XML(instance As COMPAIN_XML)
    End Sub
  Partial Private Sub InsertCOMPLAIN(instance As COMPLAIN)
    End Sub
  Partial Private Sub UpdateCOMPLAIN(instance As COMPLAIN)
    End Sub
  Partial Private Sub DeleteCOMPLAIN(instance As COMPLAIN)
    End Sub
  Partial Private Sub InsertCOMPLAIN_LOT(instance As COMPLAIN_LOT)
    End Sub
  Partial Private Sub UpdateCOMPLAIN_LOT(instance As COMPLAIN_LOT)
    End Sub
  Partial Private Sub DeleteCOMPLAIN_LOT(instance As COMPLAIN_LOT)
    End Sub
  Partial Private Sub InsertCOMPLAIN_LOT_RECHECK(instance As COMPLAIN_LOT_RECHECK)
    End Sub
  Partial Private Sub UpdateCOMPLAIN_LOT_RECHECK(instance As COMPLAIN_LOT_RECHECK)
    End Sub
  Partial Private Sub DeleteCOMPLAIN_LOT_RECHECK(instance As COMPLAIN_LOT_RECHECK)
    End Sub
  Partial Private Sub InsertCOMPLAIN_MA(instance As COMPLAIN_MA)
    End Sub
  Partial Private Sub UpdateCOMPLAIN_MA(instance As COMPLAIN_MA)
    End Sub
  Partial Private Sub DeleteCOMPLAIN_MA(instance As COMPLAIN_MA)
    End Sub
  Partial Private Sub InsertCOMPLAIN_MAS_RECHECK(instance As COMPLAIN_MAS_RECHECK)
    End Sub
  Partial Private Sub UpdateCOMPLAIN_MAS_RECHECK(instance As COMPLAIN_MAS_RECHECK)
    End Sub
  Partial Private Sub DeleteCOMPLAIN_MAS_RECHECK(instance As COMPLAIN_MAS_RECHECK)
    End Sub
  Partial Private Sub InsertCOMPLAIN_STATUS(instance As COMPLAIN_STATUS)
    End Sub
  Partial Private Sub UpdateCOMPLAIN_STATUS(instance As COMPLAIN_STATUS)
    End Sub
  Partial Private Sub DeleteCOMPLAIN_STATUS(instance As COMPLAIN_STATUS)
    End Sub
  Partial Private Sub InsertCOMPLAIN_STATUS_MA(instance As COMPLAIN_STATUS_MA)
    End Sub
  Partial Private Sub UpdateCOMPLAIN_STATUS_MA(instance As COMPLAIN_STATUS_MA)
    End Sub
  Partial Private Sub DeleteCOMPLAIN_STATUS_MA(instance As COMPLAIN_STATUS_MA)
    End Sub
  Partial Private Sub InsertDRUG_REGISTER(instance As DRUG_REGISTER)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTER(instance As DRUG_REGISTER)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTER(instance As DRUG_REGISTER)
    End Sub
  Partial Private Sub InsertEvent(instance As [Event])
    End Sub
  Partial Private Sub UpdateEvent(instance As [Event])
    End Sub
  Partial Private Sub DeleteEvent(instance As [Event])
    End Sub
  Partial Private Sub InsertEX_DRUG_RESULT(instance As EX_DRUG_RESULT)
    End Sub
  Partial Private Sub UpdateEX_DRUG_RESULT(instance As EX_DRUG_RESULT)
    End Sub
  Partial Private Sub DeleteEX_DRUG_RESULT(instance As EX_DRUG_RESULT)
    End Sub
  Partial Private Sub InsertFILE_ATTACH(instance As FILE_ATTACH)
    End Sub
  Partial Private Sub UpdateFILE_ATTACH(instance As FILE_ATTACH)
    End Sub
  Partial Private Sub DeleteFILE_ATTACH(instance As FILE_ATTACH)
    End Sub
  Partial Private Sub InsertGMP_CLEARANCE(instance As GMP_CLEARANCE)
    End Sub
  Partial Private Sub UpdateGMP_CLEARANCE(instance As GMP_CLEARANCE)
    End Sub
  Partial Private Sub DeleteGMP_CLEARANCE(instance As GMP_CLEARANCE)
    End Sub
  Partial Private Sub InsertGMP_CLEARANCE_MANUFACTURING(instance As GMP_CLEARANCE_MANUFACTURING)
    End Sub
  Partial Private Sub UpdateGMP_CLEARANCE_MANUFACTURING(instance As GMP_CLEARANCE_MANUFACTURING)
    End Sub
  Partial Private Sub DeleteGMP_CLEARANCE_MANUFACTURING(instance As GMP_CLEARANCE_MANUFACTURING)
    End Sub
  Partial Private Sub InsertGMP_STANDARD(instance As GMP_STANDARD)
    End Sub
  Partial Private Sub UpdateGMP_STANDARD(instance As GMP_STANDARD)
    End Sub
  Partial Private Sub DeleteGMP_STANDARD(instance As GMP_STANDARD)
    End Sub
  Partial Private Sub InsertGMP_STATUS(instance As GMP_STATUS)
    End Sub
  Partial Private Sub UpdateGMP_STATUS(instance As GMP_STATUS)
    End Sub
  Partial Private Sub DeleteGMP_STATUS(instance As GMP_STATUS)
    End Sub
  Partial Private Sub InsertInspection(instance As Inspection)
    End Sub
  Partial Private Sub UpdateInspection(instance As Inspection)
    End Sub
  Partial Private Sub DeleteInspection(instance As Inspection)
    End Sub
  Partial Private Sub InsertLEAD_INSPECTOR(instance As LEAD_INSPECTOR)
    End Sub
  Partial Private Sub UpdateLEAD_INSPECTOR(instance As LEAD_INSPECTOR)
    End Sub
  Partial Private Sub DeleteLEAD_INSPECTOR(instance As LEAD_INSPECTOR)
    End Sub
  Partial Private Sub InsertLEAD_POSTPONE_INSPECTION(instance As LEAD_POSTPONE_INSPECTION)
    End Sub
  Partial Private Sub UpdateLEAD_POSTPONE_INSPECTION(instance As LEAD_POSTPONE_INSPECTION)
    End Sub
  Partial Private Sub DeleteLEAD_POSTPONE_INSPECTION(instance As LEAD_POSTPONE_INSPECTION)
    End Sub
  Partial Private Sub InsertLICENSE_LOCATION_ADDRESS(instance As LICENSE_LOCATION_ADDRESS)
    End Sub
  Partial Private Sub UpdateLICENSE_LOCATION_ADDRESS(instance As LICENSE_LOCATION_ADDRESS)
    End Sub
  Partial Private Sub DeleteLICENSE_LOCATION_ADDRESS(instance As LICENSE_LOCATION_ADDRESS)
    End Sub
  Partial Private Sub InsertLICENSE_LOCATION_ADDRESS_KEEP(instance As LICENSE_LOCATION_ADDRESS_KEEP)
    End Sub
  Partial Private Sub UpdateLICENSE_LOCATION_ADDRESS_KEEP(instance As LICENSE_LOCATION_ADDRESS_KEEP)
    End Sub
  Partial Private Sub DeleteLICENSE_LOCATION_ADDRESS_KEEP(instance As LICENSE_LOCATION_ADDRESS_KEEP)
    End Sub
  Partial Private Sub InsertLICENSE_PHR(instance As LICENSE_PHR)
    End Sub
  Partial Private Sub UpdateLICENSE_PHR(instance As LICENSE_PHR)
    End Sub
  Partial Private Sub DeleteLICENSE_PHR(instance As LICENSE_PHR)
    End Sub
  Partial Private Sub InsertMAS_CER_TYPE(instance As MAS_CER_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_CER_TYPE(instance As MAS_CER_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_CER_TYPE(instance As MAS_CER_TYPE)
    End Sub
  Partial Private Sub InsertMAS_FUNCTION_CENTER(instance As MAS_FUNCTION_CENTER)
    End Sub
  Partial Private Sub UpdateMAS_FUNCTION_CENTER(instance As MAS_FUNCTION_CENTER)
    End Sub
  Partial Private Sub DeleteMAS_FUNCTION_CENTER(instance As MAS_FUNCTION_CENTER)
    End Sub
  Partial Private Sub InsertMAS_POST_TYPE(instance As MAS_POST_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_POST_TYPE(instance As MAS_POST_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_POST_TYPE(instance As MAS_POST_TYPE)
    End Sub
  Partial Private Sub InsertMAS_PROCESS_TYPE(instance As MAS_PROCESS_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_PROCESS_TYPE(instance As MAS_PROCESS_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_PROCESS_TYPE(instance As MAS_PROCESS_TYPE)
    End Sub
  Partial Private Sub InsertMAS_STAFF(instance As MAS_STAFF)
    End Sub
  Partial Private Sub UpdateMAS_STAFF(instance As MAS_STAFF)
    End Sub
  Partial Private Sub DeleteMAS_STAFF(instance As MAS_STAFF)
    End Sub
  Partial Private Sub InsertMAS_STAFF_WORK(instance As MAS_STAFF_WORK)
    End Sub
  Partial Private Sub UpdateMAS_STAFF_WORK(instance As MAS_STAFF_WORK)
    End Sub
  Partial Private Sub DeleteMAS_STAFF_WORK(instance As MAS_STAFF_WORK)
    End Sub
  Partial Private Sub InsertMAS_STAFF_WORK_DTL(instance As MAS_STAFF_WORK_DTL)
    End Sub
  Partial Private Sub UpdateMAS_STAFF_WORK_DTL(instance As MAS_STAFF_WORK_DTL)
    End Sub
  Partial Private Sub DeleteMAS_STAFF_WORK_DTL(instance As MAS_STAFF_WORK_DTL)
    End Sub
  Partial Private Sub InsertMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub UpdateMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub DeleteMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub InsertMAS_TEMPLATE_PROCESS(instance As MAS_TEMPLATE_PROCESS)
    End Sub
  Partial Private Sub UpdateMAS_TEMPLATE_PROCESS(instance As MAS_TEMPLATE_PROCESS)
    End Sub
  Partial Private Sub DeleteMAS_TEMPLATE_PROCESS(instance As MAS_TEMPLATE_PROCESS)
    End Sub
  Partial Private Sub InsertMEMO(instance As MEMO)
    End Sub
  Partial Private Sub UpdateMEMO(instance As MEMO)
    End Sub
  Partial Private Sub DeleteMEMO(instance As MEMO)
    End Sub
  Partial Private Sub InsertMULTI_PDF_CHECKPLACE_DRUGOLD(instance As MULTI_PDF_CHECKPLACE_DRUGOLD)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_CHECKPLACE_DRUGOLD(instance As MULTI_PDF_CHECKPLACE_DRUGOLD)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_CHECKPLACE_DRUGOLD(instance As MULTI_PDF_CHECKPLACE_DRUGOLD)
    End Sub
  Partial Private Sub InsertMULTI_PDF_CHECKPLACE_GMPCER(instance As MULTI_PDF_CHECKPLACE_GMPCER)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_CHECKPLACE_GMPCER(instance As MULTI_PDF_CHECKPLACE_GMPCER)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_CHECKPLACE_GMPCER(instance As MULTI_PDF_CHECKPLACE_GMPCER)
    End Sub
  Partial Private Sub InsertMULTI_PDF_LIST_DRUGCHARGED(instance As MULTI_PDF_LIST_DRUGCHARGED)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_LIST_DRUGCHARGED(instance As MULTI_PDF_LIST_DRUGCHARGED)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_LIST_DRUGCHARGED(instance As MULTI_PDF_LIST_DRUGCHARGED)
    End Sub
  Partial Private Sub InsertMULTI_PDF_PLANEDIT_DRUGOLD(instance As MULTI_PDF_PLANEDIT_DRUGOLD)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_PLANEDIT_DRUGOLD(instance As MULTI_PDF_PLANEDIT_DRUGOLD)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_PLANEDIT_DRUGOLD(instance As MULTI_PDF_PLANEDIT_DRUGOLD)
    End Sub
  Partial Private Sub InsertMULTI_PDF_RECORD_DRUGPLACE(instance As MULTI_PDF_RECORD_DRUGPLACE)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_RECORD_DRUGPLACE(instance As MULTI_PDF_RECORD_DRUGPLACE)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_RECORD_DRUGPLACE(instance As MULTI_PDF_RECORD_DRUGPLACE)
    End Sub
  Partial Private Sub InsertMULTI_PDF_RECORD_EXGDRUG_SAVE(instance As MULTI_PDF_RECORD_EXGDRUG_SAVE)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_RECORD_EXGDRUG_SAVE(instance As MULTI_PDF_RECORD_EXGDRUG_SAVE)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_RECORD_EXGDRUG_SAVE(instance As MULTI_PDF_RECORD_EXGDRUG_SAVE)
    End Sub
  Partial Private Sub InsertMULTI_PDF_RECORD_EXGDRUG_SAVE2(instance As MULTI_PDF_RECORD_EXGDRUG_SAVE2)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_RECORD_EXGDRUG_SAVE2(instance As MULTI_PDF_RECORD_EXGDRUG_SAVE2)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_RECORD_EXGDRUG_SAVE2(instance As MULTI_PDF_RECORD_EXGDRUG_SAVE2)
    End Sub
  Partial Private Sub InsertMULTI_PDF_RECORD_ISSUE(instance As MULTI_PDF_RECORD_ISSUE)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_RECORD_ISSUE(instance As MULTI_PDF_RECORD_ISSUE)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_RECORD_ISSUE(instance As MULTI_PDF_RECORD_ISSUE)
    End Sub
  Partial Private Sub InsertMULTI_PDF_RECORD_ORDERIN(instance As MULTI_PDF_RECORD_ORDERIN)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_RECORD_ORDERIN(instance As MULTI_PDF_RECORD_ORDERIN)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_RECORD_ORDERIN(instance As MULTI_PDF_RECORD_ORDERIN)
    End Sub
  Partial Private Sub InsertMULTI_PDF_RECORD_PRODUCT(instance As MULTI_PDF_RECORD_PRODUCT)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_RECORD_PRODUCT(instance As MULTI_PDF_RECORD_PRODUCT)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_RECORD_PRODUCT(instance As MULTI_PDF_RECORD_PRODUCT)
    End Sub
  Partial Private Sub InsertMULTI_PDF_REPORT_CHECKGMP(instance As MULTI_PDF_REPORT_CHECKGMP)
    End Sub
  Partial Private Sub UpdateMULTI_PDF_REPORT_CHECKGMP(instance As MULTI_PDF_REPORT_CHECKGMP)
    End Sub
  Partial Private Sub DeleteMULTI_PDF_REPORT_CHECKGMP(instance As MULTI_PDF_REPORT_CHECKGMP)
    End Sub
  Partial Private Sub InsertMULTI_SURVELANCE_SPECIALCASE(instance As MULTI_SURVELANCE_SPECIALCASE)
    End Sub
  Partial Private Sub UpdateMULTI_SURVELANCE_SPECIALCASE(instance As MULTI_SURVELANCE_SPECIALCASE)
    End Sub
  Partial Private Sub DeleteMULTI_SURVELANCE_SPECIALCASE(instance As MULTI_SURVELANCE_SPECIALCASE)
    End Sub
  Partial Private Sub InsertPDF_CHECKPLACE_DRUGOLD(instance As PDF_CHECKPLACE_DRUGOLD)
    End Sub
  Partial Private Sub UpdatePDF_CHECKPLACE_DRUGOLD(instance As PDF_CHECKPLACE_DRUGOLD)
    End Sub
  Partial Private Sub DeletePDF_CHECKPLACE_DRUGOLD(instance As PDF_CHECKPLACE_DRUGOLD)
    End Sub
  Partial Private Sub InsertPDF_CHECKPLACE_GMPCER(instance As PDF_CHECKPLACE_GMPCER)
    End Sub
  Partial Private Sub UpdatePDF_CHECKPLACE_GMPCER(instance As PDF_CHECKPLACE_GMPCER)
    End Sub
  Partial Private Sub DeletePDF_CHECKPLACE_GMPCER(instance As PDF_CHECKPLACE_GMPCER)
    End Sub
  Partial Private Sub InsertPDF_LIST_DRUGCHARGED(instance As PDF_LIST_DRUGCHARGED)
    End Sub
  Partial Private Sub UpdatePDF_LIST_DRUGCHARGED(instance As PDF_LIST_DRUGCHARGED)
    End Sub
  Partial Private Sub DeletePDF_LIST_DRUGCHARGED(instance As PDF_LIST_DRUGCHARGED)
    End Sub
  Partial Private Sub InsertPDF_PAPER_DRUGRCALL(instance As PDF_PAPER_DRUGRCALL)
    End Sub
  Partial Private Sub UpdatePDF_PAPER_DRUGRCALL(instance As PDF_PAPER_DRUGRCALL)
    End Sub
  Partial Private Sub DeletePDF_PAPER_DRUGRCALL(instance As PDF_PAPER_DRUGRCALL)
    End Sub
  Partial Private Sub InsertPDF_PLANEDIT_DRUGOLD(instance As PDF_PLANEDIT_DRUGOLD)
    End Sub
  Partial Private Sub UpdatePDF_PLANEDIT_DRUGOLD(instance As PDF_PLANEDIT_DRUGOLD)
    End Sub
  Partial Private Sub DeletePDF_PLANEDIT_DRUGOLD(instance As PDF_PLANEDIT_DRUGOLD)
    End Sub
  Partial Private Sub InsertPDF_RECORD_DRUGPLACE_M(instance As PDF_RECORD_DRUGPLACE_M)
    End Sub
  Partial Private Sub UpdatePDF_RECORD_DRUGPLACE_M(instance As PDF_RECORD_DRUGPLACE_M)
    End Sub
  Partial Private Sub DeletePDF_RECORD_DRUGPLACE_M(instance As PDF_RECORD_DRUGPLACE_M)
    End Sub
  Partial Private Sub InsertPDF_RECORD_EXDRUG_SAVE(instance As PDF_RECORD_EXDRUG_SAVE)
    End Sub
  Partial Private Sub UpdatePDF_RECORD_EXDRUG_SAVE(instance As PDF_RECORD_EXDRUG_SAVE)
    End Sub
  Partial Private Sub DeletePDF_RECORD_EXDRUG_SAVE(instance As PDF_RECORD_EXDRUG_SAVE)
    End Sub
  Partial Private Sub InsertPDF_RECORD_HOLDDRUG(instance As PDF_RECORD_HOLDDRUG)
    End Sub
  Partial Private Sub UpdatePDF_RECORD_HOLDDRUG(instance As PDF_RECORD_HOLDDRUG)
    End Sub
  Partial Private Sub DeletePDF_RECORD_HOLDDRUG(instance As PDF_RECORD_HOLDDRUG)
    End Sub
  Partial Private Sub InsertPDF_RECORD_ISSUE(instance As PDF_RECORD_ISSUE)
    End Sub
  Partial Private Sub UpdatePDF_RECORD_ISSUE(instance As PDF_RECORD_ISSUE)
    End Sub
  Partial Private Sub DeletePDF_RECORD_ISSUE(instance As PDF_RECORD_ISSUE)
    End Sub
  Partial Private Sub InsertPDF_RECORD_ORDERIN(instance As PDF_RECORD_ORDERIN)
    End Sub
  Partial Private Sub UpdatePDF_RECORD_ORDERIN(instance As PDF_RECORD_ORDERIN)
    End Sub
  Partial Private Sub DeletePDF_RECORD_ORDERIN(instance As PDF_RECORD_ORDERIN)
    End Sub
  Partial Private Sub InsertPDF_RECORD_PLACEDRUG_(instance As PDF_RECORD_PLACEDRUG_)
    End Sub
  Partial Private Sub UpdatePDF_RECORD_PLACEDRUG_(instance As PDF_RECORD_PLACEDRUG_)
    End Sub
  Partial Private Sub DeletePDF_RECORD_PLACEDRUG_(instance As PDF_RECORD_PLACEDRUG_)
    End Sub
  Partial Private Sub InsertPDF_RECORD_PRODUCT(instance As PDF_RECORD_PRODUCT)
    End Sub
  Partial Private Sub UpdatePDF_RECORD_PRODUCT(instance As PDF_RECORD_PRODUCT)
    End Sub
  Partial Private Sub DeletePDF_RECORD_PRODUCT(instance As PDF_RECORD_PRODUCT)
    End Sub
  Partial Private Sub InsertPDF_RECORD_TESTIMONYFDA(instance As PDF_RECORD_TESTIMONYFDA)
    End Sub
  Partial Private Sub UpdatePDF_RECORD_TESTIMONYFDA(instance As PDF_RECORD_TESTIMONYFDA)
    End Sub
  Partial Private Sub DeletePDF_RECORD_TESTIMONYFDA(instance As PDF_RECORD_TESTIMONYFDA)
    End Sub
  Partial Private Sub InsertPDF_REPORT_CHECKGMP(instance As PDF_REPORT_CHECKGMP)
    End Sub
  Partial Private Sub UpdatePDF_REPORT_CHECKGMP(instance As PDF_REPORT_CHECKGMP)
    End Sub
  Partial Private Sub DeletePDF_REPORT_CHECKGMP(instance As PDF_REPORT_CHECKGMP)
    End Sub
  Partial Private Sub InsertPDF_REPORT_DRUGCHARGED(instance As PDF_REPORT_DRUGCHARGED)
    End Sub
  Partial Private Sub UpdatePDF_REPORT_DRUGCHARGED(instance As PDF_REPORT_DRUGCHARGED)
    End Sub
  Partial Private Sub DeletePDF_REPORT_DRUGCHARGED(instance As PDF_REPORT_DRUGCHARGED)
    End Sub
  Partial Private Sub InsertPDF_RISKASSESSMENT(instance As PDF_RISKASSESSMENT)
    End Sub
  Partial Private Sub UpdatePDF_RISKASSESSMENT(instance As PDF_RISKASSESSMENT)
    End Sub
  Partial Private Sub DeletePDF_RISKASSESSMENT(instance As PDF_RISKASSESSMENT)
    End Sub
  Partial Private Sub InsertPLACE_GMP(instance As PLACE_GMP)
    End Sub
  Partial Private Sub UpdatePLACE_GMP(instance As PLACE_GMP)
    End Sub
  Partial Private Sub DeletePLACE_GMP(instance As PLACE_GMP)
    End Sub
  Partial Private Sub InsertPLACE_GMP_test(instance As PLACE_GMP_test)
    End Sub
  Partial Private Sub UpdatePLACE_GMP_test(instance As PLACE_GMP_test)
    End Sub
  Partial Private Sub DeletePLACE_GMP_test(instance As PLACE_GMP_test)
    End Sub
  Partial Private Sub InsertPLAN(instance As PLAN)
    End Sub
  Partial Private Sub UpdatePLAN(instance As PLAN)
    End Sub
  Partial Private Sub DeletePLAN(instance As PLAN)
    End Sub
  Partial Private Sub InsertPLAN_CONSIDER(instance As PLAN_CONSIDER)
    End Sub
  Partial Private Sub UpdatePLAN_CONSIDER(instance As PLAN_CONSIDER)
    End Sub
  Partial Private Sub DeletePLAN_CONSIDER(instance As PLAN_CONSIDER)
    End Sub
  Partial Private Sub InsertPLAN_NEW(instance As PLAN_NEW)
    End Sub
  Partial Private Sub UpdatePLAN_NEW(instance As PLAN_NEW)
    End Sub
  Partial Private Sub DeletePLAN_NEW(instance As PLAN_NEW)
    End Sub
  Partial Private Sub InsertPOST_CUSTOMER_REQUEST(instance As POST_CUSTOMER_REQUEST)
    End Sub
  Partial Private Sub UpdatePOST_CUSTOMER_REQUEST(instance As POST_CUSTOMER_REQUEST)
    End Sub
  Partial Private Sub DeletePOST_CUSTOMER_REQUEST(instance As POST_CUSTOMER_REQUEST)
    End Sub
  Partial Private Sub InsertPOST_PLAN_HISTORY(instance As POST_PLAN_HISTORY)
    End Sub
  Partial Private Sub UpdatePOST_PLAN_HISTORY(instance As POST_PLAN_HISTORY)
    End Sub
  Partial Private Sub DeletePOST_PLAN_HISTORY(instance As POST_PLAN_HISTORY)
    End Sub
  Partial Private Sub InsertPOST_PLAN_HISTORY_DETAIL(instance As POST_PLAN_HISTORY_DETAIL)
    End Sub
  Partial Private Sub UpdatePOST_PLAN_HISTORY_DETAIL(instance As POST_PLAN_HISTORY_DETAIL)
    End Sub
  Partial Private Sub DeletePOST_PLAN_HISTORY_DETAIL(instance As POST_PLAN_HISTORY_DETAIL)
    End Sub
  Partial Private Sub InsertPOST_PLAN_OTHER(instance As POST_PLAN_OTHER)
    End Sub
  Partial Private Sub UpdatePOST_PLAN_OTHER(instance As POST_PLAN_OTHER)
    End Sub
  Partial Private Sub DeletePOST_PLAN_OTHER(instance As POST_PLAN_OTHER)
    End Sub
  Partial Private Sub InsertPOST_PLAN_STAFF(instance As POST_PLAN_STAFF)
    End Sub
  Partial Private Sub UpdatePOST_PLAN_STAFF(instance As POST_PLAN_STAFF)
    End Sub
  Partial Private Sub DeletePOST_PLAN_STAFF(instance As POST_PLAN_STAFF)
    End Sub
  Partial Private Sub InsertPOST_PLAN_XML(instance As POST_PLAN_XML)
    End Sub
  Partial Private Sub UpdatePOST_PLAN_XML(instance As POST_PLAN_XML)
    End Sub
  Partial Private Sub DeletePOST_PLAN_XML(instance As POST_PLAN_XML)
    End Sub
  Partial Private Sub InsertPOST_PLAN_XML_HISTORY(instance As POST_PLAN_XML_HISTORY)
    End Sub
  Partial Private Sub UpdatePOST_PLAN_XML_HISTORY(instance As POST_PLAN_XML_HISTORY)
    End Sub
  Partial Private Sub DeletePOST_PLAN_XML_HISTORY(instance As POST_PLAN_XML_HISTORY)
    End Sub
  Partial Private Sub InsertPROBLEM(instance As PROBLEM)
    End Sub
  Partial Private Sub UpdatePROBLEM(instance As PROBLEM)
    End Sub
  Partial Private Sub DeletePROBLEM(instance As PROBLEM)
    End Sub
  Partial Private Sub InsertPROCESS_MENU(instance As PROCESS_MENU)
    End Sub
  Partial Private Sub UpdatePROCESS_MENU(instance As PROCESS_MENU)
    End Sub
  Partial Private Sub DeletePROCESS_MENU(instance As PROCESS_MENU)
    End Sub
  Partial Private Sub InsertRECALL(instance As RECALL)
    End Sub
  Partial Private Sub UpdateRECALL(instance As RECALL)
    End Sub
  Partial Private Sub DeleteRECALL(instance As RECALL)
    End Sub
  Partial Private Sub InsertRECALL_DETAIL(instance As RECALL_DETAIL)
    End Sub
  Partial Private Sub UpdateRECALL_DETAIL(instance As RECALL_DETAIL)
    End Sub
  Partial Private Sub DeleteRECALL_DETAIL(instance As RECALL_DETAIL)
    End Sub
  Partial Private Sub InsertrecallMI(instance As recallMI)
    End Sub
  Partial Private Sub UpdaterecallMI(instance As recallMI)
    End Sub
  Partial Private Sub DeleterecallMI(instance As recallMI)
    End Sub
  Partial Private Sub InsertRECHECK_COMPLAIN(instance As RECHECK_COMPLAIN)
    End Sub
  Partial Private Sub UpdateRECHECK_COMPLAIN(instance As RECHECK_COMPLAIN)
    End Sub
  Partial Private Sub DeleteRECHECK_COMPLAIN(instance As RECHECK_COMPLAIN)
    End Sub
  Partial Private Sub InsertREQ_CER_GMP(instance As REQ_CER_GMP)
    End Sub
  Partial Private Sub UpdateREQ_CER_GMP(instance As REQ_CER_GMP)
    End Sub
  Partial Private Sub DeleteREQ_CER_GMP(instance As REQ_CER_GMP)
    End Sub
  Partial Private Sub InsertREQ_CONTINUE_CERGMP(instance As REQ_CONTINUE_CERGMP)
    End Sub
  Partial Private Sub UpdateREQ_CONTINUE_CERGMP(instance As REQ_CONTINUE_CERGMP)
    End Sub
  Partial Private Sub DeleteREQ_CONTINUE_CERGMP(instance As REQ_CONTINUE_CERGMP)
    End Sub
  Partial Private Sub InsertREQ_NEW_GMP(instance As REQ_NEW_GMP)
    End Sub
  Partial Private Sub UpdateREQ_NEW_GMP(instance As REQ_NEW_GMP)
    End Sub
  Partial Private Sub DeleteREQ_NEW_GMP(instance As REQ_NEW_GMP)
    End Sub
  Partial Private Sub InsertREQ_NEWGMP_XML(instance As REQ_NEWGMP_XML)
    End Sub
  Partial Private Sub UpdateREQ_NEWGMP_XML(instance As REQ_NEWGMP_XML)
    End Sub
  Partial Private Sub DeleteREQ_NEWGMP_XML(instance As REQ_NEWGMP_XML)
    End Sub
  Partial Private Sub InsertSAMPLE_DRUG_KEEP(instance As SAMPLE_DRUG_KEEP)
    End Sub
  Partial Private Sub UpdateSAMPLE_DRUG_KEEP(instance As SAMPLE_DRUG_KEEP)
    End Sub
  Partial Private Sub DeleteSAMPLE_DRUG_KEEP(instance As SAMPLE_DRUG_KEEP)
    End Sub
  Partial Private Sub InsertSAMPLE_SPECIAL(instance As SAMPLE_SPECIAL)
    End Sub
  Partial Private Sub UpdateSAMPLE_SPECIAL(instance As SAMPLE_SPECIAL)
    End Sub
  Partial Private Sub DeleteSAMPLE_SPECIAL(instance As SAMPLE_SPECIAL)
    End Sub
  Partial Private Sub InsertSEIZE(instance As SEIZE)
    End Sub
  Partial Private Sub UpdateSEIZE(instance As SEIZE)
    End Sub
  Partial Private Sub DeleteSEIZE(instance As SEIZE)
    End Sub
  Partial Private Sub InsertSUR_AND_SAMP_TEMP(instance As SUR_AND_SAMP_TEMP)
    End Sub
  Partial Private Sub UpdateSUR_AND_SAMP_TEMP(instance As SUR_AND_SAMP_TEMP)
    End Sub
  Partial Private Sub DeleteSUR_AND_SAMP_TEMP(instance As SUR_AND_SAMP_TEMP)
    End Sub
  Partial Private Sub InsertSURVELANCE_SPECIALCASE(instance As SURVELANCE_SPECIALCASE)
    End Sub
  Partial Private Sub UpdateSURVELANCE_SPECIALCASE(instance As SURVELANCE_SPECIALCASE)
    End Sub
  Partial Private Sub DeleteSURVELANCE_SPECIALCASE(instance As SURVELANCE_SPECIALCASE)
    End Sub
  Partial Private Sub InsertSURVILLANCE(instance As SURVILLANCE)
    End Sub
  Partial Private Sub UpdateSURVILLANCE(instance As SURVILLANCE)
    End Sub
  Partial Private Sub DeleteSURVILLANCE(instance As SURVILLANCE)
    End Sub
  Partial Private Sub InsertTABEAN(instance As TABEAN)
    End Sub
  Partial Private Sub UpdateTABEAN(instance As TABEAN)
    End Sub
  Partial Private Sub DeleteTABEAN(instance As TABEAN)
    End Sub
  Partial Private Sub InsertTB_GENKEY(instance As TB_GENKEY)
    End Sub
  Partial Private Sub UpdateTB_GENKEY(instance As TB_GENKEY)
    End Sub
  Partial Private Sub DeleteTB_GENKEY(instance As TB_GENKEY)
    End Sub
  Partial Private Sub InsertTBL_TEST(instance As TBL_TEST)
    End Sub
  Partial Private Sub UpdateTBL_TEST(instance As TBL_TEST)
    End Sub
  Partial Private Sub DeleteTBL_TEST(instance As TBL_TEST)
    End Sub
  Partial Private Sub InsertTEMPLATE_ATTACH(instance As TEMPLATE_ATTACH)
    End Sub
  Partial Private Sub UpdateTEMPLATE_ATTACH(instance As TEMPLATE_ATTACH)
    End Sub
  Partial Private Sub DeleteTEMPLATE_ATTACH(instance As TEMPLATE_ATTACH)
    End Sub
  Partial Private Sub InsertTRANSACTION_DOWNLOAD(instance As TRANSACTION_DOWNLOAD)
    End Sub
  Partial Private Sub UpdateTRANSACTION_DOWNLOAD(instance As TRANSACTION_DOWNLOAD)
    End Sub
  Partial Private Sub DeleteTRANSACTION_DOWNLOAD(instance As TRANSACTION_DOWNLOAD)
    End Sub
  Partial Private Sub InsertTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub UpdateTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub DeleteTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("FDA_DRUG_POSTConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property CAPAs() As System.Data.Linq.Table(Of CAPA)
		Get
			Return Me.GetTable(Of CAPA)
		End Get
	End Property
	
	Public ReadOnly Property TRANSACTION_UPLOAD_GMPs() As System.Data.Linq.Table(Of TRANSACTION_UPLOAD_GMP)
		Get
			Return Me.GetTable(Of TRANSACTION_UPLOAD_GMP)
		End Get
	End Property
	
	Public ReadOnly Property CER_GMPs() As System.Data.Linq.Table(Of CER_GMP)
		Get
			Return Me.GetTable(Of CER_GMP)
		End Get
	End Property
	
	Public ReadOnly Property COMPAIN_XMLs() As System.Data.Linq.Table(Of COMPAIN_XML)
		Get
			Return Me.GetTable(Of COMPAIN_XML)
		End Get
	End Property
	
	Public ReadOnly Property COMPLAINs() As System.Data.Linq.Table(Of COMPLAIN)
		Get
			Return Me.GetTable(Of COMPLAIN)
		End Get
	End Property
	
	Public ReadOnly Property COMPLAIN_LOTs() As System.Data.Linq.Table(Of COMPLAIN_LOT)
		Get
			Return Me.GetTable(Of COMPLAIN_LOT)
		End Get
	End Property
	
	Public ReadOnly Property COMPLAIN_LOT_RECHECKs() As System.Data.Linq.Table(Of COMPLAIN_LOT_RECHECK)
		Get
			Return Me.GetTable(Of COMPLAIN_LOT_RECHECK)
		End Get
	End Property
	
	Public ReadOnly Property COMPLAIN_MAs() As System.Data.Linq.Table(Of COMPLAIN_MA)
		Get
			Return Me.GetTable(Of COMPLAIN_MA)
		End Get
	End Property
	
	Public ReadOnly Property COMPLAIN_MAS_RECHECKs() As System.Data.Linq.Table(Of COMPLAIN_MAS_RECHECK)
		Get
			Return Me.GetTable(Of COMPLAIN_MAS_RECHECK)
		End Get
	End Property
	
	Public ReadOnly Property COMPLAIN_STATUS() As System.Data.Linq.Table(Of COMPLAIN_STATUS)
		Get
			Return Me.GetTable(Of COMPLAIN_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property COMPLAIN_STATUS_MAs() As System.Data.Linq.Table(Of COMPLAIN_STATUS_MA)
		Get
			Return Me.GetTable(Of COMPLAIN_STATUS_MA)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTERs() As System.Data.Linq.Table(Of DRUG_REGISTER)
		Get
			Return Me.GetTable(Of DRUG_REGISTER)
		End Get
	End Property
	
	Public ReadOnly Property Events() As System.Data.Linq.Table(Of [Event])
		Get
			Return Me.GetTable(Of [Event])
		End Get
	End Property
	
	Public ReadOnly Property EX_DRUG_RESULTs() As System.Data.Linq.Table(Of EX_DRUG_RESULT)
		Get
			Return Me.GetTable(Of EX_DRUG_RESULT)
		End Get
	End Property
	
	Public ReadOnly Property FILE_ATTACHes() As System.Data.Linq.Table(Of FILE_ATTACH)
		Get
			Return Me.GetTable(Of FILE_ATTACH)
		End Get
	End Property
	
	Public ReadOnly Property GMP_CLEARANCEs() As System.Data.Linq.Table(Of GMP_CLEARANCE)
		Get
			Return Me.GetTable(Of GMP_CLEARANCE)
		End Get
	End Property
	
	Public ReadOnly Property GMP_CLEARANCE_MANUFACTURINGs() As System.Data.Linq.Table(Of GMP_CLEARANCE_MANUFACTURING)
		Get
			Return Me.GetTable(Of GMP_CLEARANCE_MANUFACTURING)
		End Get
	End Property
	
	Public ReadOnly Property GMP_STANDARDs() As System.Data.Linq.Table(Of GMP_STANDARD)
		Get
			Return Me.GetTable(Of GMP_STANDARD)
		End Get
	End Property
	
	Public ReadOnly Property GMP_STATUS() As System.Data.Linq.Table(Of GMP_STATUS)
		Get
			Return Me.GetTable(Of GMP_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property Inspections() As System.Data.Linq.Table(Of Inspection)
		Get
			Return Me.GetTable(Of Inspection)
		End Get
	End Property
	
	Public ReadOnly Property LEAD_INSPECTORs() As System.Data.Linq.Table(Of LEAD_INSPECTOR)
		Get
			Return Me.GetTable(Of LEAD_INSPECTOR)
		End Get
	End Property
	
	Public ReadOnly Property LEAD_POSTPONE_INSPECTIONs() As System.Data.Linq.Table(Of LEAD_POSTPONE_INSPECTION)
		Get
			Return Me.GetTable(Of LEAD_POSTPONE_INSPECTION)
		End Get
	End Property
	
	Public ReadOnly Property LICENSE_LOCATION_ADDRESSes() As System.Data.Linq.Table(Of LICENSE_LOCATION_ADDRESS)
		Get
			Return Me.GetTable(Of LICENSE_LOCATION_ADDRESS)
		End Get
	End Property
	
	Public ReadOnly Property LICENSE_LOCATION_ADDRESS_KEEPs() As System.Data.Linq.Table(Of LICENSE_LOCATION_ADDRESS_KEEP)
		Get
			Return Me.GetTable(Of LICENSE_LOCATION_ADDRESS_KEEP)
		End Get
	End Property
	
	Public ReadOnly Property LICENSE_PHRs() As System.Data.Linq.Table(Of LICENSE_PHR)
		Get
			Return Me.GetTable(Of LICENSE_PHR)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CER_TYPEs() As System.Data.Linq.Table(Of MAS_CER_TYPE)
		Get
			Return Me.GetTable(Of MAS_CER_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_FUNCTION_CENTERs() As System.Data.Linq.Table(Of MAS_FUNCTION_CENTER)
		Get
			Return Me.GetTable(Of MAS_FUNCTION_CENTER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_POST_TYPEs() As System.Data.Linq.Table(Of MAS_POST_TYPE)
		Get
			Return Me.GetTable(Of MAS_POST_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROCESS_TYPEs() As System.Data.Linq.Table(Of MAS_PROCESS_TYPE)
		Get
			Return Me.GetTable(Of MAS_PROCESS_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STAFFs() As System.Data.Linq.Table(Of MAS_STAFF)
		Get
			Return Me.GetTable(Of MAS_STAFF)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STAFF_WORKs() As System.Data.Linq.Table(Of MAS_STAFF_WORK)
		Get
			Return Me.GetTable(Of MAS_STAFF_WORK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STAFF_WORK_DTLs() As System.Data.Linq.Table(Of MAS_STAFF_WORK_DTL)
		Get
			Return Me.GetTable(Of MAS_STAFF_WORK_DTL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STATUS() As System.Data.Linq.Table(Of MAS_STATUS)
		Get
			Return Me.GetTable(Of MAS_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TEMPLATE_PROCESSes() As System.Data.Linq.Table(Of MAS_TEMPLATE_PROCESS)
		Get
			Return Me.GetTable(Of MAS_TEMPLATE_PROCESS)
		End Get
	End Property
	
	Public ReadOnly Property MEMOs() As System.Data.Linq.Table(Of MEMO)
		Get
			Return Me.GetTable(Of MEMO)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_CHECKPLACE_DRUGOLDs() As System.Data.Linq.Table(Of MULTI_PDF_CHECKPLACE_DRUGOLD)
		Get
			Return Me.GetTable(Of MULTI_PDF_CHECKPLACE_DRUGOLD)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_CHECKPLACE_GMPCERs() As System.Data.Linq.Table(Of MULTI_PDF_CHECKPLACE_GMPCER)
		Get
			Return Me.GetTable(Of MULTI_PDF_CHECKPLACE_GMPCER)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_LIST_DRUGCHARGEDs() As System.Data.Linq.Table(Of MULTI_PDF_LIST_DRUGCHARGED)
		Get
			Return Me.GetTable(Of MULTI_PDF_LIST_DRUGCHARGED)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_PLANEDIT_DRUGOLDs() As System.Data.Linq.Table(Of MULTI_PDF_PLANEDIT_DRUGOLD)
		Get
			Return Me.GetTable(Of MULTI_PDF_PLANEDIT_DRUGOLD)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_RECORD_DRUGPLACEs() As System.Data.Linq.Table(Of MULTI_PDF_RECORD_DRUGPLACE)
		Get
			Return Me.GetTable(Of MULTI_PDF_RECORD_DRUGPLACE)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_RECORD_EXGDRUG_SAVEs() As System.Data.Linq.Table(Of MULTI_PDF_RECORD_EXGDRUG_SAVE)
		Get
			Return Me.GetTable(Of MULTI_PDF_RECORD_EXGDRUG_SAVE)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_RECORD_EXGDRUG_SAVE2s() As System.Data.Linq.Table(Of MULTI_PDF_RECORD_EXGDRUG_SAVE2)
		Get
			Return Me.GetTable(Of MULTI_PDF_RECORD_EXGDRUG_SAVE2)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_RECORD_ISSUEs() As System.Data.Linq.Table(Of MULTI_PDF_RECORD_ISSUE)
		Get
			Return Me.GetTable(Of MULTI_PDF_RECORD_ISSUE)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_RECORD_ORDERINs() As System.Data.Linq.Table(Of MULTI_PDF_RECORD_ORDERIN)
		Get
			Return Me.GetTable(Of MULTI_PDF_RECORD_ORDERIN)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_RECORD_PRODUCTs() As System.Data.Linq.Table(Of MULTI_PDF_RECORD_PRODUCT)
		Get
			Return Me.GetTable(Of MULTI_PDF_RECORD_PRODUCT)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_PDF_REPORT_CHECKGMPs() As System.Data.Linq.Table(Of MULTI_PDF_REPORT_CHECKGMP)
		Get
			Return Me.GetTable(Of MULTI_PDF_REPORT_CHECKGMP)
		End Get
	End Property
	
	Public ReadOnly Property MULTI_SURVELANCE_SPECIALCASEs() As System.Data.Linq.Table(Of MULTI_SURVELANCE_SPECIALCASE)
		Get
			Return Me.GetTable(Of MULTI_SURVELANCE_SPECIALCASE)
		End Get
	End Property
	
	Public ReadOnly Property PDF_CHECKPLACE_DRUGOLDs() As System.Data.Linq.Table(Of PDF_CHECKPLACE_DRUGOLD)
		Get
			Return Me.GetTable(Of PDF_CHECKPLACE_DRUGOLD)
		End Get
	End Property
	
	Public ReadOnly Property PDF_CHECKPLACE_GMPCERs() As System.Data.Linq.Table(Of PDF_CHECKPLACE_GMPCER)
		Get
			Return Me.GetTable(Of PDF_CHECKPLACE_GMPCER)
		End Get
	End Property
	
	Public ReadOnly Property PDF_LIST_DRUGCHARGEDs() As System.Data.Linq.Table(Of PDF_LIST_DRUGCHARGED)
		Get
			Return Me.GetTable(Of PDF_LIST_DRUGCHARGED)
		End Get
	End Property
	
	Public ReadOnly Property PDF_PAPER_DRUGRCALLs() As System.Data.Linq.Table(Of PDF_PAPER_DRUGRCALL)
		Get
			Return Me.GetTable(Of PDF_PAPER_DRUGRCALL)
		End Get
	End Property
	
	Public ReadOnly Property PDF_PLANEDIT_DRUGOLDs() As System.Data.Linq.Table(Of PDF_PLANEDIT_DRUGOLD)
		Get
			Return Me.GetTable(Of PDF_PLANEDIT_DRUGOLD)
		End Get
	End Property
	
	Public ReadOnly Property PDF_RECORD_DRUGPLACE_Ms() As System.Data.Linq.Table(Of PDF_RECORD_DRUGPLACE_M)
		Get
			Return Me.GetTable(Of PDF_RECORD_DRUGPLACE_M)
		End Get
	End Property
	
	Public ReadOnly Property PDF_RECORD_EXDRUG_SAVEs() As System.Data.Linq.Table(Of PDF_RECORD_EXDRUG_SAVE)
		Get
			Return Me.GetTable(Of PDF_RECORD_EXDRUG_SAVE)
		End Get
	End Property
	
	Public ReadOnly Property PDF_RECORD_HOLDDRUGs() As System.Data.Linq.Table(Of PDF_RECORD_HOLDDRUG)
		Get
			Return Me.GetTable(Of PDF_RECORD_HOLDDRUG)
		End Get
	End Property
	
	Public ReadOnly Property PDF_RECORD_ISSUEs() As System.Data.Linq.Table(Of PDF_RECORD_ISSUE)
		Get
			Return Me.GetTable(Of PDF_RECORD_ISSUE)
		End Get
	End Property
	
	Public ReadOnly Property PDF_RECORD_ORDERINs() As System.Data.Linq.Table(Of PDF_RECORD_ORDERIN)
		Get
			Return Me.GetTable(Of PDF_RECORD_ORDERIN)
		End Get
	End Property
	
	Public ReadOnly Property PDF_RECORD_PLACEDRUG_s() As System.Data.Linq.Table(Of PDF_RECORD_PLACEDRUG_)
		Get
			Return Me.GetTable(Of PDF_RECORD_PLACEDRUG_)
		End Get
	End Property
	
	Public ReadOnly Property PDF_RECORD_PRODUCTs() As System.Data.Linq.Table(Of PDF_RECORD_PRODUCT)
		Get
			Return Me.GetTable(Of PDF_RECORD_PRODUCT)
		End Get
	End Property
	
	Public ReadOnly Property PDF_RECORD_TESTIMONYFDAs() As System.Data.Linq.Table(Of PDF_RECORD_TESTIMONYFDA)
		Get
			Return Me.GetTable(Of PDF_RECORD_TESTIMONYFDA)
		End Get
	End Property
	
	Public ReadOnly Property PDF_REPORT_CHECKGMPs() As System.Data.Linq.Table(Of PDF_REPORT_CHECKGMP)
		Get
			Return Me.GetTable(Of PDF_REPORT_CHECKGMP)
		End Get
	End Property
	
	Public ReadOnly Property PDF_REPORT_DRUGCHARGEDs() As System.Data.Linq.Table(Of PDF_REPORT_DRUGCHARGED)
		Get
			Return Me.GetTable(Of PDF_REPORT_DRUGCHARGED)
		End Get
	End Property
	
	Public ReadOnly Property PDF_RISKASSESSMENTs() As System.Data.Linq.Table(Of PDF_RISKASSESSMENT)
		Get
			Return Me.GetTable(Of PDF_RISKASSESSMENT)
		End Get
	End Property
	
	Public ReadOnly Property PLACE_GMPs() As System.Data.Linq.Table(Of PLACE_GMP)
		Get
			Return Me.GetTable(Of PLACE_GMP)
		End Get
	End Property
	
	Public ReadOnly Property PLACE_GMP_tests() As System.Data.Linq.Table(Of PLACE_GMP_test)
		Get
			Return Me.GetTable(Of PLACE_GMP_test)
		End Get
	End Property
	
	Public ReadOnly Property PLANs() As System.Data.Linq.Table(Of PLAN)
		Get
			Return Me.GetTable(Of PLAN)
		End Get
	End Property
	
	Public ReadOnly Property PLAN_CONSIDERs() As System.Data.Linq.Table(Of PLAN_CONSIDER)
		Get
			Return Me.GetTable(Of PLAN_CONSIDER)
		End Get
	End Property
	
	Public ReadOnly Property PLAN_NEWs() As System.Data.Linq.Table(Of PLAN_NEW)
		Get
			Return Me.GetTable(Of PLAN_NEW)
		End Get
	End Property
	
	Public ReadOnly Property PLAN_NEW_TMPs() As System.Data.Linq.Table(Of PLAN_NEW_TMP)
		Get
			Return Me.GetTable(Of PLAN_NEW_TMP)
		End Get
	End Property
	
	Public ReadOnly Property POST_CUSTOMER_REQUESTs() As System.Data.Linq.Table(Of POST_CUSTOMER_REQUEST)
		Get
			Return Me.GetTable(Of POST_CUSTOMER_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property POST_PLAN_HISTORies() As System.Data.Linq.Table(Of POST_PLAN_HISTORY)
		Get
			Return Me.GetTable(Of POST_PLAN_HISTORY)
		End Get
	End Property
	
	Public ReadOnly Property POST_PLAN_HISTORY_DETAILs() As System.Data.Linq.Table(Of POST_PLAN_HISTORY_DETAIL)
		Get
			Return Me.GetTable(Of POST_PLAN_HISTORY_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property POST_PLAN_OTHERs() As System.Data.Linq.Table(Of POST_PLAN_OTHER)
		Get
			Return Me.GetTable(Of POST_PLAN_OTHER)
		End Get
	End Property
	
	Public ReadOnly Property POST_PLAN_STAFFs() As System.Data.Linq.Table(Of POST_PLAN_STAFF)
		Get
			Return Me.GetTable(Of POST_PLAN_STAFF)
		End Get
	End Property
	
	Public ReadOnly Property POST_PLAN_XMLs() As System.Data.Linq.Table(Of POST_PLAN_XML)
		Get
			Return Me.GetTable(Of POST_PLAN_XML)
		End Get
	End Property
	
	Public ReadOnly Property POST_PLAN_XML_HISTORies() As System.Data.Linq.Table(Of POST_PLAN_XML_HISTORY)
		Get
			Return Me.GetTable(Of POST_PLAN_XML_HISTORY)
		End Get
	End Property
	
	Public ReadOnly Property PROBLEMs() As System.Data.Linq.Table(Of PROBLEM)
		Get
			Return Me.GetTable(Of PROBLEM)
		End Get
	End Property
	
	Public ReadOnly Property PROCESS_MENUs() As System.Data.Linq.Table(Of PROCESS_MENU)
		Get
			Return Me.GetTable(Of PROCESS_MENU)
		End Get
	End Property
	
	Public ReadOnly Property RECALLs() As System.Data.Linq.Table(Of RECALL)
		Get
			Return Me.GetTable(Of RECALL)
		End Get
	End Property
	
	Public ReadOnly Property RECALL_DETAILs() As System.Data.Linq.Table(Of RECALL_DETAIL)
		Get
			Return Me.GetTable(Of RECALL_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property recallMIs() As System.Data.Linq.Table(Of recallMI)
		Get
			Return Me.GetTable(Of recallMI)
		End Get
	End Property
	
	Public ReadOnly Property RECHECK_COMPLAINs() As System.Data.Linq.Table(Of RECHECK_COMPLAIN)
		Get
			Return Me.GetTable(Of RECHECK_COMPLAIN)
		End Get
	End Property
	
	Public ReadOnly Property REQ_CER_GMPs() As System.Data.Linq.Table(Of REQ_CER_GMP)
		Get
			Return Me.GetTable(Of REQ_CER_GMP)
		End Get
	End Property
	
	Public ReadOnly Property REQ_CONTINUE_CERGMPs() As System.Data.Linq.Table(Of REQ_CONTINUE_CERGMP)
		Get
			Return Me.GetTable(Of REQ_CONTINUE_CERGMP)
		End Get
	End Property
	
	Public ReadOnly Property REQ_NEW_GMPs() As System.Data.Linq.Table(Of REQ_NEW_GMP)
		Get
			Return Me.GetTable(Of REQ_NEW_GMP)
		End Get
	End Property
	
	Public ReadOnly Property REQ_NEWGMP_XMLs() As System.Data.Linq.Table(Of REQ_NEWGMP_XML)
		Get
			Return Me.GetTable(Of REQ_NEWGMP_XML)
		End Get
	End Property
	
	Public ReadOnly Property SAMPLE_DRUG_KEEPs() As System.Data.Linq.Table(Of SAMPLE_DRUG_KEEP)
		Get
			Return Me.GetTable(Of SAMPLE_DRUG_KEEP)
		End Get
	End Property
	
	Public ReadOnly Property SAMPLE_SPECIALs() As System.Data.Linq.Table(Of SAMPLE_SPECIAL)
		Get
			Return Me.GetTable(Of SAMPLE_SPECIAL)
		End Get
	End Property
	
	Public ReadOnly Property SEIZEs() As System.Data.Linq.Table(Of SEIZE)
		Get
			Return Me.GetTable(Of SEIZE)
		End Get
	End Property
	
	Public ReadOnly Property SUR_AND_SAMP_TEMPs() As System.Data.Linq.Table(Of SUR_AND_SAMP_TEMP)
		Get
			Return Me.GetTable(Of SUR_AND_SAMP_TEMP)
		End Get
	End Property
	
	Public ReadOnly Property SURVELANCE_SPECIALCASEs() As System.Data.Linq.Table(Of SURVELANCE_SPECIALCASE)
		Get
			Return Me.GetTable(Of SURVELANCE_SPECIALCASE)
		End Get
	End Property
	
	Public ReadOnly Property SURVILLANCEs() As System.Data.Linq.Table(Of SURVILLANCE)
		Get
			Return Me.GetTable(Of SURVILLANCE)
		End Get
	End Property
	
	Public ReadOnly Property sysprefixes() As System.Data.Linq.Table(Of sysprefix)
		Get
			Return Me.GetTable(Of sysprefix)
		End Get
	End Property
	
	Public ReadOnly Property TABEANs() As System.Data.Linq.Table(Of TABEAN)
		Get
			Return Me.GetTable(Of TABEAN)
		End Get
	End Property
	
	Public ReadOnly Property TB_GENKEYs() As System.Data.Linq.Table(Of TB_GENKEY)
		Get
			Return Me.GetTable(Of TB_GENKEY)
		End Get
	End Property
	
	Public ReadOnly Property TBL_TESTs() As System.Data.Linq.Table(Of TBL_TEST)
		Get
			Return Me.GetTable(Of TBL_TEST)
		End Get
	End Property
	
	Public ReadOnly Property TEMPLATE_ATTACHes() As System.Data.Linq.Table(Of TEMPLATE_ATTACH)
		Get
			Return Me.GetTable(Of TEMPLATE_ATTACH)
		End Get
	End Property
	
	Public ReadOnly Property Test_Entrepreneurs() As System.Data.Linq.Table(Of Test_Entrepreneur)
		Get
			Return Me.GetTable(Of Test_Entrepreneur)
		End Get
	End Property
	
	Public ReadOnly Property TRANSACTION_DOWNLOADs() As System.Data.Linq.Table(Of TRANSACTION_DOWNLOAD)
		Get
			Return Me.GetTable(Of TRANSACTION_DOWNLOAD)
		End Get
	End Property
	
	Public ReadOnly Property TRANSACTION_UPLOADs() As System.Data.Linq.Table(Of TRANSACTION_UPLOAD)
		Get
			Return Me.GetTable(Of TRANSACTION_UPLOAD)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CAPA")>  _
Partial Public Class CAPA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Check_pattern As String
	
	Private _Check_scope As String
	
	Private _Check_Data As String
	
	Private _check_simple As String
	
	Private _drug_lable As String
	
	Private _Sample_Analysis As String
	
	Private _Sample_consultation As String
	
	Private _drughold As String
	
	Private _drugFreeze As String
	
	Private _drugrevoke As String
	
	Private _Destroy_drugs As String
	
	Private _Advertising As String
	
	Private _Audit As String
	
	Private _Edit_date As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_PLAN_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _REF_CODE As String
	
	Private _CAPA_TYPE As System.Nullable(Of Integer)
	
	Private _pvncd As String
	
	Private _PROCESS_ID As String
	
	Private _xml_name As String
	
	Private _Identify As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
	Private _MAS_STATUS As EntityRef(Of MAS_STATUS)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCheck_patternChanging(value As String)
    End Sub
    Partial Private Sub OnCheck_patternChanged()
    End Sub
    Partial Private Sub OnCheck_scopeChanging(value As String)
    End Sub
    Partial Private Sub OnCheck_scopeChanged()
    End Sub
    Partial Private Sub OnCheck_DataChanging(value As String)
    End Sub
    Partial Private Sub OnCheck_DataChanged()
    End Sub
    Partial Private Sub Oncheck_simpleChanging(value As String)
    End Sub
    Partial Private Sub Oncheck_simpleChanged()
    End Sub
    Partial Private Sub Ondrug_lableChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_lableChanged()
    End Sub
    Partial Private Sub OnSample_AnalysisChanging(value As String)
    End Sub
    Partial Private Sub OnSample_AnalysisChanged()
    End Sub
    Partial Private Sub OnSample_consultationChanging(value As String)
    End Sub
    Partial Private Sub OnSample_consultationChanged()
    End Sub
    Partial Private Sub OndrugholdChanging(value As String)
    End Sub
    Partial Private Sub OndrugholdChanged()
    End Sub
    Partial Private Sub OndrugFreezeChanging(value As String)
    End Sub
    Partial Private Sub OndrugFreezeChanged()
    End Sub
    Partial Private Sub OndrugrevokeChanging(value As String)
    End Sub
    Partial Private Sub OndrugrevokeChanged()
    End Sub
    Partial Private Sub OnDestroy_drugsChanging(value As String)
    End Sub
    Partial Private Sub OnDestroy_drugsChanged()
    End Sub
    Partial Private Sub OnAdvertisingChanging(value As String)
    End Sub
    Partial Private Sub OnAdvertisingChanged()
    End Sub
    Partial Private Sub OnAuditChanging(value As String)
    End Sub
    Partial Private Sub OnAuditChanged()
    End Sub
    Partial Private Sub OnEdit_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEdit_dateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_PLAN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnCAPA_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAPA_TYPEChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub Onxml_nameChanging(value As String)
    End Sub
    Partial Private Sub Onxml_nameChanged()
    End Sub
    Partial Private Sub OnIdentifyChanging(value As String)
    End Sub
    Partial Private Sub OnIdentifyChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._MAS_STATUS = CType(Nothing, EntityRef(Of MAS_STATUS))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Check_pattern", DbType:="NVarChar(MAX)")>  _
	Public Property Check_pattern() As String
		Get
			Return Me._Check_pattern
		End Get
		Set
			If (String.Equals(Me._Check_pattern, value) = false) Then
				Me.OnCheck_patternChanging(value)
				Me.SendPropertyChanging
				Me._Check_pattern = value
				Me.SendPropertyChanged("Check_pattern")
				Me.OnCheck_patternChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Check_scope", DbType:="NVarChar(MAX)")>  _
	Public Property Check_scope() As String
		Get
			Return Me._Check_scope
		End Get
		Set
			If (String.Equals(Me._Check_scope, value) = false) Then
				Me.OnCheck_scopeChanging(value)
				Me.SendPropertyChanging
				Me._Check_scope = value
				Me.SendPropertyChanged("Check_scope")
				Me.OnCheck_scopeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Check_Data", DbType:="NVarChar(MAX)")>  _
	Public Property Check_Data() As String
		Get
			Return Me._Check_Data
		End Get
		Set
			If (String.Equals(Me._Check_Data, value) = false) Then
				Me.OnCheck_DataChanging(value)
				Me.SendPropertyChanging
				Me._Check_Data = value
				Me.SendPropertyChanged("Check_Data")
				Me.OnCheck_DataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_check_simple", DbType:="NVarChar(MAX)")>  _
	Public Property check_simple() As String
		Get
			Return Me._check_simple
		End Get
		Set
			If (String.Equals(Me._check_simple, value) = false) Then
				Me.Oncheck_simpleChanging(value)
				Me.SendPropertyChanging
				Me._check_simple = value
				Me.SendPropertyChanged("check_simple")
				Me.Oncheck_simpleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_lable", DbType:="NVarChar(MAX)")>  _
	Public Property drug_lable() As String
		Get
			Return Me._drug_lable
		End Get
		Set
			If (String.Equals(Me._drug_lable, value) = false) Then
				Me.Ondrug_lableChanging(value)
				Me.SendPropertyChanging
				Me._drug_lable = value
				Me.SendPropertyChanged("drug_lable")
				Me.Ondrug_lableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sample_Analysis", DbType:="NVarChar(MAX)")>  _
	Public Property Sample_Analysis() As String
		Get
			Return Me._Sample_Analysis
		End Get
		Set
			If (String.Equals(Me._Sample_Analysis, value) = false) Then
				Me.OnSample_AnalysisChanging(value)
				Me.SendPropertyChanging
				Me._Sample_Analysis = value
				Me.SendPropertyChanged("Sample_Analysis")
				Me.OnSample_AnalysisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sample_consultation", DbType:="NVarChar(MAX)")>  _
	Public Property Sample_consultation() As String
		Get
			Return Me._Sample_consultation
		End Get
		Set
			If (String.Equals(Me._Sample_consultation, value) = false) Then
				Me.OnSample_consultationChanging(value)
				Me.SendPropertyChanging
				Me._Sample_consultation = value
				Me.SendPropertyChanged("Sample_consultation")
				Me.OnSample_consultationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drughold", DbType:="NVarChar(MAX)")>  _
	Public Property drughold() As String
		Get
			Return Me._drughold
		End Get
		Set
			If (String.Equals(Me._drughold, value) = false) Then
				Me.OndrugholdChanging(value)
				Me.SendPropertyChanging
				Me._drughold = value
				Me.SendPropertyChanged("drughold")
				Me.OndrugholdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drugFreeze", DbType:="NVarChar(MAX)")>  _
	Public Property drugFreeze() As String
		Get
			Return Me._drugFreeze
		End Get
		Set
			If (String.Equals(Me._drugFreeze, value) = false) Then
				Me.OndrugFreezeChanging(value)
				Me.SendPropertyChanging
				Me._drugFreeze = value
				Me.SendPropertyChanged("drugFreeze")
				Me.OndrugFreezeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drugrevoke", DbType:="NVarChar(MAX)")>  _
	Public Property drugrevoke() As String
		Get
			Return Me._drugrevoke
		End Get
		Set
			If (String.Equals(Me._drugrevoke, value) = false) Then
				Me.OndrugrevokeChanging(value)
				Me.SendPropertyChanging
				Me._drugrevoke = value
				Me.SendPropertyChanged("drugrevoke")
				Me.OndrugrevokeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destroy_drugs", DbType:="NVarChar(MAX)")>  _
	Public Property Destroy_drugs() As String
		Get
			Return Me._Destroy_drugs
		End Get
		Set
			If (String.Equals(Me._Destroy_drugs, value) = false) Then
				Me.OnDestroy_drugsChanging(value)
				Me.SendPropertyChanging
				Me._Destroy_drugs = value
				Me.SendPropertyChanged("Destroy_drugs")
				Me.OnDestroy_drugsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Advertising", DbType:="NVarChar(MAX)")>  _
	Public Property Advertising() As String
		Get
			Return Me._Advertising
		End Get
		Set
			If (String.Equals(Me._Advertising, value) = false) Then
				Me.OnAdvertisingChanging(value)
				Me.SendPropertyChanging
				Me._Advertising = value
				Me.SendPropertyChanged("Advertising")
				Me.OnAdvertisingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Audit", DbType:="NVarChar(MAX)")>  _
	Public Property Audit() As String
		Get
			Return Me._Audit
		End Get
		Set
			If (String.Equals(Me._Audit, value) = false) Then
				Me.OnAuditChanging(value)
				Me.SendPropertyChanging
				Me._Audit = value
				Me.SendPropertyChanged("Audit")
				Me.OnAuditChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edit_date", DbType:="DateTime")>  _
	Public Property Edit_date() As System.Nullable(Of Date)
		Get
			Return Me._Edit_date
		End Get
		Set
			If (Me._Edit_date.Equals(value) = false) Then
				Me.OnEdit_dateChanging(value)
				Me.SendPropertyChanging
				Me._Edit_date = value
				Me.SendPropertyChanged("Edit_date")
				Me.OnEdit_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PLAN_ID", DbType:="Int")>  _
	Public Property FK_PLAN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PLAN_ID
		End Get
		Set
			If (Me._FK_PLAN_ID.Equals(value) = false) Then
				Me.OnFK_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_PLAN_ID = value
				Me.SendPropertyChanged("FK_PLAN_ID")
				Me.OnFK_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				If Me._MAS_STATUS.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAPA_TYPE", DbType:="Int")>  _
	Public Property CAPA_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CAPA_TYPE
		End Get
		Set
			If (Me._CAPA_TYPE.Equals(value) = false) Then
				Me.OnCAPA_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CAPA_TYPE = value
				Me.SendPropertyChanged("CAPA_TYPE")
				Me.OnCAPA_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xml_name", DbType:="NVarChar(MAX)")>  _
	Public Property xml_name() As String
		Get
			Return Me._xml_name
		End Get
		Set
			If (String.Equals(Me._xml_name, value) = false) Then
				Me.Onxml_nameChanging(value)
				Me.SendPropertyChanging
				Me._xml_name = value
				Me.SendPropertyChanged("xml_name")
				Me.Onxml_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identify", DbType:="NVarChar(MAX)")>  _
	Public Property Identify() As String
		Get
			Return Me._Identify
		End Get
		Set
			If (String.Equals(Me._Identify, value) = false) Then
				Me.OnIdentifyChanging(value)
				Me.SendPropertyChanging
				Me._Identify = value
				Me.SendPropertyChanged("Identify")
				Me.OnIdentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MAS_STATUS_CAPA", Storage:="_MAS_STATUS", ThisKey:="STATUS_ID", OtherKey:="IDA", IsForeignKey:=true)>  _
	Public Property MAS_STATUS() As MAS_STATUS
		Get
			Return Me._MAS_STATUS.Entity
		End Get
		Set
			Dim previousValue As MAS_STATUS = Me._MAS_STATUS.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._MAS_STATUS.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._MAS_STATUS.Entity = Nothing
					previousValue.CAPAs.Remove(Me)
				End If
				Me._MAS_STATUS.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.CAPAs.Add(Me)
					Me._STATUS_ID = value.IDA
				Else
					Me._STATUS_ID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("MAS_STATUS")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSACTION_UPLOAD_GMP")>  _
Partial Public Class TRANSACTION_UPLOAD_GMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _TRANSACTION_ID As String
	
	Private _FILE_NAME As String
	
	Private _EMAIL As String
	
	Private _UPLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _REF_NO As String
	
	Private _DOWNLOAD_ID As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
	Private _TYPE As String
	
	Private _NAME_FACK As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanged()
    End Sub
    Partial Private Sub OnFILE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFILE_NAMEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnNAME_FACKChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_FACKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSACTION_ID", DbType:="NVarChar(50)")>  _
	Public Property TRANSACTION_ID() As String
		Get
			Return Me._TRANSACTION_ID
		End Get
		Set
			If (String.Equals(Me._TRANSACTION_ID, value) = false) Then
				Me.OnTRANSACTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSACTION_ID = value
				Me.SendPropertyChanged("TRANSACTION_ID")
				Me.OnTRANSACTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FILE_NAME() As String
		Get
			Return Me._FILE_NAME
		End Get
		Set
			If (String.Equals(Me._FILE_NAME, value) = false) Then
				Me.OnFILE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FILE_NAME = value
				Me.SendPropertyChanged("FILE_NAME")
				Me.OnFILE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(50)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPLOAD_DATE", DbType:="DateTime")>  _
	Public Property UPLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPLOAD_DATE
		End Get
		Set
			If (Me._UPLOAD_DATE.Equals(value) = false) Then
				Me.OnUPLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPLOAD_DATE = value
				Me.SendPropertyChanged("UPLOAD_DATE")
				Me.OnUPLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_ID", DbType:="Int")>  _
	Public Property DOWNLOAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWNLOAD_ID
		End Get
		Set
			If (Me._DOWNLOAD_ID.Equals(value) = false) Then
				Me.OnDOWNLOAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_ID = value
				Me.SendPropertyChanged("DOWNLOAD_ID")
				Me.OnDOWNLOAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(10)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_FACK", DbType:="NVarChar(50)")>  _
	Public Property NAME_FACK() As String
		Get
			Return Me._NAME_FACK
		End Get
		Set
			If (String.Equals(Me._NAME_FACK, value) = false) Then
				Me.OnNAME_FACKChanging(value)
				Me.SendPropertyChanging
				Me._NAME_FACK = value
				Me.SendPropertyChanged("NAME_FACK")
				Me.OnNAME_FACKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_GMP")>  _
Partial Public Class CER_GMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Plan_requested_date As System.Nullable(Of Date)
	
	Private _Plan_No_Cer As String
	
	Private _Plan_Number As System.Nullable(Of Integer)
	
	Private _Plan_TYPE As System.Nullable(Of Integer)
	
	Private _Plan_price As String
	
	Private _Plan_rcv_date As System.Nullable(Of Date)
	
	Private _Plan_date As System.Nullable(Of Date)
	
	Private _Plan_PHR_IDA As System.Nullable(Of Integer)
	
	Private _Plan_PHR_NAME As String
	
	Private _TR_ID As String
	
	Private _pvncd As String
	
	Private _PROCESS_ID As String
	
	Private _xml_name As String
	
	Private _Identify As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPlan_requested_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPlan_requested_dateChanged()
    End Sub
    Partial Private Sub OnPlan_No_CerChanging(value As String)
    End Sub
    Partial Private Sub OnPlan_No_CerChanged()
    End Sub
    Partial Private Sub OnPlan_NumberChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPlan_NumberChanged()
    End Sub
    Partial Private Sub OnPlan_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPlan_TYPEChanged()
    End Sub
    Partial Private Sub OnPlan_priceChanging(value As String)
    End Sub
    Partial Private Sub OnPlan_priceChanged()
    End Sub
    Partial Private Sub OnPlan_rcv_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPlan_rcv_dateChanged()
    End Sub
    Partial Private Sub OnPlan_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPlan_dateChanged()
    End Sub
    Partial Private Sub OnPlan_PHR_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPlan_PHR_IDAChanged()
    End Sub
    Partial Private Sub OnPlan_PHR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPlan_PHR_NAMEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub Onxml_nameChanging(value As String)
    End Sub
    Partial Private Sub Onxml_nameChanged()
    End Sub
    Partial Private Sub OnIdentifyChanging(value As String)
    End Sub
    Partial Private Sub OnIdentifyChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_requested_date", DbType:="DateTime")>  _
	Public Property Plan_requested_date() As System.Nullable(Of Date)
		Get
			Return Me._Plan_requested_date
		End Get
		Set
			If (Me._Plan_requested_date.Equals(value) = false) Then
				Me.OnPlan_requested_dateChanging(value)
				Me.SendPropertyChanging
				Me._Plan_requested_date = value
				Me.SendPropertyChanged("Plan_requested_date")
				Me.OnPlan_requested_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_No_Cer", DbType:="NVarChar(MAX)")>  _
	Public Property Plan_No_Cer() As String
		Get
			Return Me._Plan_No_Cer
		End Get
		Set
			If (String.Equals(Me._Plan_No_Cer, value) = false) Then
				Me.OnPlan_No_CerChanging(value)
				Me.SendPropertyChanging
				Me._Plan_No_Cer = value
				Me.SendPropertyChanged("Plan_No_Cer")
				Me.OnPlan_No_CerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_Number", DbType:="Int")>  _
	Public Property Plan_Number() As System.Nullable(Of Integer)
		Get
			Return Me._Plan_Number
		End Get
		Set
			If (Me._Plan_Number.Equals(value) = false) Then
				Me.OnPlan_NumberChanging(value)
				Me.SendPropertyChanging
				Me._Plan_Number = value
				Me.SendPropertyChanged("Plan_Number")
				Me.OnPlan_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_TYPE", DbType:="Int")>  _
	Public Property Plan_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._Plan_TYPE
		End Get
		Set
			If (Me._Plan_TYPE.Equals(value) = false) Then
				Me.OnPlan_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._Plan_TYPE = value
				Me.SendPropertyChanged("Plan_TYPE")
				Me.OnPlan_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_price", DbType:="NVarChar(MAX)")>  _
	Public Property Plan_price() As String
		Get
			Return Me._Plan_price
		End Get
		Set
			If (String.Equals(Me._Plan_price, value) = false) Then
				Me.OnPlan_priceChanging(value)
				Me.SendPropertyChanging
				Me._Plan_price = value
				Me.SendPropertyChanged("Plan_price")
				Me.OnPlan_priceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_rcv_date", DbType:="DateTime")>  _
	Public Property Plan_rcv_date() As System.Nullable(Of Date)
		Get
			Return Me._Plan_rcv_date
		End Get
		Set
			If (Me._Plan_rcv_date.Equals(value) = false) Then
				Me.OnPlan_rcv_dateChanging(value)
				Me.SendPropertyChanging
				Me._Plan_rcv_date = value
				Me.SendPropertyChanged("Plan_rcv_date")
				Me.OnPlan_rcv_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_date", DbType:="DateTime")>  _
	Public Property Plan_date() As System.Nullable(Of Date)
		Get
			Return Me._Plan_date
		End Get
		Set
			If (Me._Plan_date.Equals(value) = false) Then
				Me.OnPlan_dateChanging(value)
				Me.SendPropertyChanging
				Me._Plan_date = value
				Me.SendPropertyChanged("Plan_date")
				Me.OnPlan_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_PHR_IDA", DbType:="Int")>  _
	Public Property Plan_PHR_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._Plan_PHR_IDA
		End Get
		Set
			If (Me._Plan_PHR_IDA.Equals(value) = false) Then
				Me.OnPlan_PHR_IDAChanging(value)
				Me.SendPropertyChanging
				Me._Plan_PHR_IDA = value
				Me.SendPropertyChanged("Plan_PHR_IDA")
				Me.OnPlan_PHR_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_PHR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property Plan_PHR_NAME() As String
		Get
			Return Me._Plan_PHR_NAME
		End Get
		Set
			If (String.Equals(Me._Plan_PHR_NAME, value) = false) Then
				Me.OnPlan_PHR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._Plan_PHR_NAME = value
				Me.SendPropertyChanged("Plan_PHR_NAME")
				Me.OnPlan_PHR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xml_name", DbType:="NVarChar(MAX)")>  _
	Public Property xml_name() As String
		Get
			Return Me._xml_name
		End Get
		Set
			If (String.Equals(Me._xml_name, value) = false) Then
				Me.Onxml_nameChanging(value)
				Me.SendPropertyChanging
				Me._xml_name = value
				Me.SendPropertyChanged("xml_name")
				Me.Onxml_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identify", DbType:="NVarChar(MAX)")>  _
	Public Property Identify() As String
		Get
			Return Me._Identify
		End Get
		Set
			If (String.Equals(Me._Identify, value) = false) Then
				Me.OnIdentifyChanging(value)
				Me.SendPropertyChanging
				Me._Identify = value
				Me.SendPropertyChanged("Identify")
				Me.OnIdentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COMPAIN_XML")>  _
Partial Public Class COMPAIN_XML
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_ID As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _FULLPATH As String
	
	Private _PROCESS_ID As String
	
	Private _STATUS As String
	
	Private _TYPE As String
	
	Private _PATH As String
	
	Private _FILE_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnFULLPATHChanging(value As String)
    End Sub
    Partial Private Sub OnFULLPATHChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnPATHChanging(value As String)
    End Sub
    Partial Private Sub OnPATHChanged()
    End Sub
    Partial Private Sub OnFILE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFILE_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULLPATH", DbType:="NVarChar(MAX)")>  _
	Public Property FULLPATH() As String
		Get
			Return Me._FULLPATH
		End Get
		Set
			If (String.Equals(Me._FULLPATH, value) = false) Then
				Me.OnFULLPATHChanging(value)
				Me.SendPropertyChanging
				Me._FULLPATH = value
				Me.SendPropertyChanged("FULLPATH")
				Me.OnFULLPATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property PATH() As String
		Get
			Return Me._PATH
		End Get
		Set
			If (String.Equals(Me._PATH, value) = false) Then
				Me.OnPATHChanging(value)
				Me.SendPropertyChanging
				Me._PATH = value
				Me.SendPropertyChanged("PATH")
				Me.OnPATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FILE_NAME() As String
		Get
			Return Me._FILE_NAME
		End Get
		Set
			If (String.Equals(Me._FILE_NAME, value) = false) Then
				Me.OnFILE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FILE_NAME = value
				Me.SendPropertyChanged("FILE_NAME")
				Me.OnFILE_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COMPLAIN")>  _
Partial Public Class COMPLAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _DATE_OPEN As System.Nullable(Of Date)
	
	Private _DATE_RECIVE As System.Nullable(Of Date)
	
	Private _MED_QTY As String
	
	Private _TIMELINE As String
	
	Private _DATE_BEFORE As System.Nullable(Of Date)
	
	Private _FIRST_MEET As String
	
	Private _DATE_FIRST_DATE As System.Nullable(Of Date)
	
	Private _TOTAL_DATE As System.Nullable(Of Double)
	
	Private _NO_BOOK As String
	
	Private _NAME_PROBLEM As String
	
	Private _MNF_NAME As String
	
	Private _COUNTRY As String
	
	Private _NUMBER_CUSTOM As String
	
	Private _NAME_IMPORT As String
	
	Private _NUMBER_IMPORT As String
	
	Private _CATI_PKK As String
	
	Private _OPEN_BY As System.Nullable(Of Integer)
	
	Private _ASSIGN_TO As System.Nullable(Of Integer)
	
	Private _NAME_STORY As String
	
	Private _NAME As String
	
	Private _NAME_IMPORTANT As String
	
	Private _DRUG_REGIS As String
	
	Private _DRUG_REGIS_SE As String
	
	Private _MED_LICEINT As String
	
	Private _PROBLEM As String
	
	Private _STATUS_PRO As String
	
	Private _FOMAT_PROBLEM As String
	
	Private _CATEGORY As String
	
	Private _PRIORITY As String
	
	Private _EXPLANATION As String
	
	Private _RELATED_ISSUES As String
	
	Private _COMMENT As String
	
	Private _ATTACHMENT As String
	
	Private _DATE_HELPER As System.Nullable(Of Date)
	
	Private _DATE_MATURITY As System.Nullable(Of Date)
	
	Private _DATE_LAST_COODINATE As System.Nullable(Of Date)
	
	Private _DATE_OFFER_MANE As System.Nullable(Of Date)
	
	Private _PEPLE_COODINATE As String
	
	Private _NUMBERPHONE As String
	
	Private _BILLING As String
	
	Private _ALERT_DAMET1 As String
	
	Private _ALERT_DAMET2 As String
	
	Private _ALERT_DAMET3 As String
	
	Private _ALERT_DAMET_ALL As String
	
	Private _LITIGATION As System.Nullable(Of Boolean)
	
	Private _EDIT_CAPA As String
	
	Private _FIRST_AGENDA As String
	
	Private _RESOLUTION_LAST As String
	
	Private _RESOLUTION_DATE_LAST As System.Nullable(Of Date)
	
	Private _TREM_LAST As String
	
	Private _STATUS As String
	
	Private _PROBLEM_QUALITY As String
	
	Private _CALCULATE_DAY As System.Nullable(Of Double)
	
	Private _SSMA_TimeStamp As System.Data.Linq.Binary
	
	Private _COMMON_NAME As String
	
	Private _DETECT_DATE As String
	
	Private _PHYSICAL As String
	
	Private _CONTRAINER_P As String
	
	Private _LABEL As String
	
	Private _ANALYSIS As String
	
	Private _OTER_ISSUES As String
	
	Private _MED_format As String
	
	Private _EX_PROBLEM As String
	
	Private _POSITION As String
	
	Private _DEPARTMENT As String
	
	Private _ADDRESS_PROBLEM As String
	
	Private _TELE_PROBLEM As String
	
	Private _FAX_PROBLEM As String
	
	Private _INFROM As String
	
	Private _INFORM_NAME As String
	
	Private _INFORM_ADD As String
	
	Private _INFORM_TELE As String
	
	Private _INFORM_FAX As String
	
	Private _INFORM_EMAIL As String
	
	Private _PRELI_ACTION As String
	
	Private _NAME_DEALER As String
	
	Private _MED_TYPE As String
	
	Private _IMP_NAME As String
	
	Private _STORAGE_CON As String
	
	Private _ACTUAL_CON As String
	
	Private _EMAIL_DEPAR As String
	
	Private _LINE_DEPAR As String
	
	Private _NAME_receive As String
	
	Private _NOTE As String
	
	Private _PROBLEM_STAES As String
	
	Private _TRANSACTION_ID As String
	
	Private _NUMBER_COMPLAIN As String
	
	Private _ID_CARD As String
	
	Private _STAUS_HIDEDATA As String
	
	Private _CHANEL_COMPLAIN As String
	
	Private _NAME_COMPLAIN As String
	
	Private _DESCRIPTION_COMPLAIN As String
	
	Private _ISSUE_COMPLAIN As String
	
	Private _CATEGRORY_COMPLAIN As String
	
	Private _DATE_FIND As System.Nullable(Of Date)
	
	Private _NUMBER_SENT As String
	
	Private _STATUS_REQUES As String
	
	Private _GROUP_CHALLEN As String
	
	Private _DATE_PROCESS As System.Nullable(Of Date)
	
	Private _DATE_RESULT As System.Nullable(Of Date)
	
	Private _PIC_OR_FILE As String
	
	Private _DATA_CORPORATE As String
	
	Private _TPYE_OF_ACT As String
	
	Private _SECTION_MISTAKE As String
	
	Private _SECTION_PENALTY As String
	
	Private _DATA_LICENSEE As String
	
	Private _DESCRIPTION_DEPAR As String
	
	Private _NUMBER_CONSIDE As String
	
	Private _OPERRATE_PLACE As String
	
	Private _OTHER1 As String
	
	Private _OTHER2 As String
	
	Private _OTHER2_2 As String
	
	Private _OTHER3 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDATE_OPENChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_OPENChanged()
    End Sub
    Partial Private Sub OnDATE_RECIVEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_RECIVEChanged()
    End Sub
    Partial Private Sub OnMED_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnMED_QTYChanged()
    End Sub
    Partial Private Sub OnTIMELINEChanging(value As String)
    End Sub
    Partial Private Sub OnTIMELINEChanged()
    End Sub
    Partial Private Sub OnDATE_BEFOREChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_BEFOREChanged()
    End Sub
    Partial Private Sub OnFIRST_MEETChanging(value As String)
    End Sub
    Partial Private Sub OnFIRST_MEETChanged()
    End Sub
    Partial Private Sub OnDATE_FIRST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_FIRST_DATEChanged()
    End Sub
    Partial Private Sub OnTOTAL_DATEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTOTAL_DATEChanged()
    End Sub
    Partial Private Sub OnNO_BOOKChanging(value As String)
    End Sub
    Partial Private Sub OnNO_BOOKChanged()
    End Sub
    Partial Private Sub OnNAME_PROBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PROBLEMChanged()
    End Sub
    Partial Private Sub OnMNF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMNF_NAMEChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnNUMBER_CUSTOMChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_CUSTOMChanged()
    End Sub
    Partial Private Sub OnNAME_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_IMPORTChanged()
    End Sub
    Partial Private Sub OnNUMBER_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_IMPORTChanged()
    End Sub
    Partial Private Sub OnCATI_PKKChanging(value As String)
    End Sub
    Partial Private Sub OnCATI_PKKChanged()
    End Sub
    Partial Private Sub OnOPEN_BYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOPEN_BYChanged()
    End Sub
    Partial Private Sub OnASSIGN_TOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnASSIGN_TOChanged()
    End Sub
    Partial Private Sub OnNAME_STORYChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_STORYChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnNAME_IMPORTANTChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_IMPORTANTChanged()
    End Sub
    Partial Private Sub OnDRUG_REGISChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_REGISChanged()
    End Sub
    Partial Private Sub OnDRUG_REGIS_SEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_REGIS_SEChanged()
    End Sub
    Partial Private Sub OnMED_LICEINTChanging(value As String)
    End Sub
    Partial Private Sub OnMED_LICEINTChanged()
    End Sub
    Partial Private Sub OnPROBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnPROBLEMChanged()
    End Sub
    Partial Private Sub OnSTATUS_PROChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_PROChanged()
    End Sub
    Partial Private Sub OnFOMAT_PROBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnFOMAT_PROBLEMChanged()
    End Sub
    Partial Private Sub OnCATEGORYChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORYChanged()
    End Sub
    Partial Private Sub OnPRIORITYChanging(value As String)
    End Sub
    Partial Private Sub OnPRIORITYChanged()
    End Sub
    Partial Private Sub OnEXPLANATIONChanging(value As String)
    End Sub
    Partial Private Sub OnEXPLANATIONChanged()
    End Sub
    Partial Private Sub OnRELATED_ISSUESChanging(value As String)
    End Sub
    Partial Private Sub OnRELATED_ISSUESChanged()
    End Sub
    Partial Private Sub OnCOMMENTChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTChanged()
    End Sub
    Partial Private Sub OnATTACHMENTChanging(value As String)
    End Sub
    Partial Private Sub OnATTACHMENTChanged()
    End Sub
    Partial Private Sub OnDATE_HELPERChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_HELPERChanged()
    End Sub
    Partial Private Sub OnDATE_MATURITYChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_MATURITYChanged()
    End Sub
    Partial Private Sub OnDATE_LAST_COODINATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_LAST_COODINATEChanged()
    End Sub
    Partial Private Sub OnDATE_OFFER_MANEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_OFFER_MANEChanged()
    End Sub
    Partial Private Sub OnPEPLE_COODINATEChanging(value As String)
    End Sub
    Partial Private Sub OnPEPLE_COODINATEChanged()
    End Sub
    Partial Private Sub OnNUMBERPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBERPHONEChanged()
    End Sub
    Partial Private Sub OnBILLINGChanging(value As String)
    End Sub
    Partial Private Sub OnBILLINGChanged()
    End Sub
    Partial Private Sub OnALERT_DAMET1Changing(value As String)
    End Sub
    Partial Private Sub OnALERT_DAMET1Changed()
    End Sub
    Partial Private Sub OnALERT_DAMET2Changing(value As String)
    End Sub
    Partial Private Sub OnALERT_DAMET2Changed()
    End Sub
    Partial Private Sub OnALERT_DAMET3Changing(value As String)
    End Sub
    Partial Private Sub OnALERT_DAMET3Changed()
    End Sub
    Partial Private Sub OnALERT_DAMET_ALLChanging(value As String)
    End Sub
    Partial Private Sub OnALERT_DAMET_ALLChanged()
    End Sub
    Partial Private Sub OnLITIGATIONChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLITIGATIONChanged()
    End Sub
    Partial Private Sub OnEDIT_CAPAChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_CAPAChanged()
    End Sub
    Partial Private Sub OnFIRST_AGENDAChanging(value As String)
    End Sub
    Partial Private Sub OnFIRST_AGENDAChanged()
    End Sub
    Partial Private Sub OnRESOLUTION_LASTChanging(value As String)
    End Sub
    Partial Private Sub OnRESOLUTION_LASTChanged()
    End Sub
    Partial Private Sub OnRESOLUTION_DATE_LASTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRESOLUTION_DATE_LASTChanged()
    End Sub
    Partial Private Sub OnTREM_LASTChanging(value As String)
    End Sub
    Partial Private Sub OnTREM_LASTChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnPROBLEM_QUALITYChanging(value As String)
    End Sub
    Partial Private Sub OnPROBLEM_QUALITYChanged()
    End Sub
    Partial Private Sub OnCALCULATE_DAYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCALCULATE_DAYChanged()
    End Sub
    Partial Private Sub OnSSMA_TimeStampChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnSSMA_TimeStampChanged()
    End Sub
    Partial Private Sub OnCOMMON_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMON_NAMEChanged()
    End Sub
    Partial Private Sub OnDETECT_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnDETECT_DATEChanged()
    End Sub
    Partial Private Sub OnPHYSICALChanging(value As String)
    End Sub
    Partial Private Sub OnPHYSICALChanged()
    End Sub
    Partial Private Sub OnCONTRAINER_PChanging(value As String)
    End Sub
    Partial Private Sub OnCONTRAINER_PChanged()
    End Sub
    Partial Private Sub OnLABELChanging(value As String)
    End Sub
    Partial Private Sub OnLABELChanged()
    End Sub
    Partial Private Sub OnANALYSISChanging(value As String)
    End Sub
    Partial Private Sub OnANALYSISChanged()
    End Sub
    Partial Private Sub OnOTER_ISSUESChanging(value As String)
    End Sub
    Partial Private Sub OnOTER_ISSUESChanged()
    End Sub
    Partial Private Sub OnMED_formatChanging(value As String)
    End Sub
    Partial Private Sub OnMED_formatChanged()
    End Sub
    Partial Private Sub OnEX_PROBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnEX_PROBLEMChanged()
    End Sub
    Partial Private Sub OnPOSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnADDRESS_PROBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_PROBLEMChanged()
    End Sub
    Partial Private Sub OnTELE_PROBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnTELE_PROBLEMChanged()
    End Sub
    Partial Private Sub OnFAX_PROBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnFAX_PROBLEMChanged()
    End Sub
    Partial Private Sub OnINFROMChanging(value As String)
    End Sub
    Partial Private Sub OnINFROMChanged()
    End Sub
    Partial Private Sub OnINFORM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_NAMEChanged()
    End Sub
    Partial Private Sub OnINFORM_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_ADDChanged()
    End Sub
    Partial Private Sub OnINFORM_TELEChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_TELEChanged()
    End Sub
    Partial Private Sub OnINFORM_FAXChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_FAXChanged()
    End Sub
    Partial Private Sub OnINFORM_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_EMAILChanged()
    End Sub
    Partial Private Sub OnPRELI_ACTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPRELI_ACTIONChanged()
    End Sub
    Partial Private Sub OnNAME_DEALERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_DEALERChanged()
    End Sub
    Partial Private Sub OnMED_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_TYPEChanged()
    End Sub
    Partial Private Sub OnIMP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnIMP_NAMEChanged()
    End Sub
    Partial Private Sub OnSTORAGE_CONChanging(value As String)
    End Sub
    Partial Private Sub OnSTORAGE_CONChanged()
    End Sub
    Partial Private Sub OnACTUAL_CONChanging(value As String)
    End Sub
    Partial Private Sub OnACTUAL_CONChanged()
    End Sub
    Partial Private Sub OnEMAIL_DEPARChanging(value As String)
    End Sub
    Partial Private Sub OnEMAIL_DEPARChanged()
    End Sub
    Partial Private Sub OnLINE_DEPARChanging(value As String)
    End Sub
    Partial Private Sub OnLINE_DEPARChanged()
    End Sub
    Partial Private Sub OnNAME_receiveChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_receiveChanged()
    End Sub
    Partial Private Sub OnNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNOTEChanged()
    End Sub
    Partial Private Sub OnPROBLEM_STAESChanging(value As String)
    End Sub
    Partial Private Sub OnPROBLEM_STAESChanged()
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanged()
    End Sub
    Partial Private Sub OnNUMBER_COMPLAINChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_COMPLAINChanged()
    End Sub
    Partial Private Sub OnID_CARDChanging(value As String)
    End Sub
    Partial Private Sub OnID_CARDChanged()
    End Sub
    Partial Private Sub OnSTAUS_HIDEDATAChanging(value As String)
    End Sub
    Partial Private Sub OnSTAUS_HIDEDATAChanged()
    End Sub
    Partial Private Sub OnCHANEL_COMPLAINChanging(value As String)
    End Sub
    Partial Private Sub OnCHANEL_COMPLAINChanged()
    End Sub
    Partial Private Sub OnNAME_COMPLAINChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_COMPLAINChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_COMPLAINChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTION_COMPLAINChanged()
    End Sub
    Partial Private Sub OnISSUE_COMPLAINChanging(value As String)
    End Sub
    Partial Private Sub OnISSUE_COMPLAINChanged()
    End Sub
    Partial Private Sub OnCATEGRORY_COMPLAINChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGRORY_COMPLAINChanged()
    End Sub
    Partial Private Sub OnDATE_FINDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_FINDChanged()
    End Sub
    Partial Private Sub OnNUMBER_SENTChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_SENTChanged()
    End Sub
    Partial Private Sub OnSTATUS_REQUESChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_REQUESChanged()
    End Sub
    Partial Private Sub OnGROUP_CHALLENChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_CHALLENChanged()
    End Sub
    Partial Private Sub OnDATE_PROCESSChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_PROCESSChanged()
    End Sub
    Partial Private Sub OnDATE_RESULTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_RESULTChanged()
    End Sub
    Partial Private Sub OnPIC_OR_FILEChanging(value As String)
    End Sub
    Partial Private Sub OnPIC_OR_FILEChanged()
    End Sub
    Partial Private Sub OnDATA_CORPORATEChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_CORPORATEChanged()
    End Sub
    Partial Private Sub OnTPYE_OF_ACTChanging(value As String)
    End Sub
    Partial Private Sub OnTPYE_OF_ACTChanged()
    End Sub
    Partial Private Sub OnSECTION_MISTAKEChanging(value As String)
    End Sub
    Partial Private Sub OnSECTION_MISTAKEChanged()
    End Sub
    Partial Private Sub OnSECTION_PENALTYChanging(value As String)
    End Sub
    Partial Private Sub OnSECTION_PENALTYChanged()
    End Sub
    Partial Private Sub OnDATA_LICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_LICENSEEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_DEPARChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTION_DEPARChanged()
    End Sub
    Partial Private Sub OnNUMBER_CONSIDEChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_CONSIDEChanged()
    End Sub
    Partial Private Sub OnOPERRATE_PLACEChanging(value As String)
    End Sub
    Partial Private Sub OnOPERRATE_PLACEChanged()
    End Sub
    Partial Private Sub OnOTHER1Changing(value As String)
    End Sub
    Partial Private Sub OnOTHER1Changed()
    End Sub
    Partial Private Sub OnOTHER2Changing(value As String)
    End Sub
    Partial Private Sub OnOTHER2Changed()
    End Sub
    Partial Private Sub OnOTHER2_2Changing(value As String)
    End Sub
    Partial Private Sub OnOTHER2_2Changed()
    End Sub
    Partial Private Sub OnOTHER3Changing(value As String)
    End Sub
    Partial Private Sub OnOTHER3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_OPEN", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_OPEN() As System.Nullable(Of Date)
		Get
			Return Me._DATE_OPEN
		End Get
		Set
			If (Me._DATE_OPEN.Equals(value) = false) Then
				Me.OnDATE_OPENChanging(value)
				Me.SendPropertyChanging
				Me._DATE_OPEN = value
				Me.SendPropertyChanged("DATE_OPEN")
				Me.OnDATE_OPENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_RECIVE", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_RECIVE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_RECIVE
		End Get
		Set
			If (Me._DATE_RECIVE.Equals(value) = false) Then
				Me.OnDATE_RECIVEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_RECIVE = value
				Me.SendPropertyChanged("DATE_RECIVE")
				Me.OnDATE_RECIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_QTY", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property MED_QTY() As String
		Get
			Return Me._MED_QTY
		End Get
		Set
			If (String.Equals(Me._MED_QTY, value) = false) Then
				Me.OnMED_QTYChanging(value)
				Me.SendPropertyChanging
				Me._MED_QTY = value
				Me.SendPropertyChanged("MED_QTY")
				Me.OnMED_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIMELINE", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TIMELINE() As String
		Get
			Return Me._TIMELINE
		End Get
		Set
			If (String.Equals(Me._TIMELINE, value) = false) Then
				Me.OnTIMELINEChanging(value)
				Me.SendPropertyChanging
				Me._TIMELINE = value
				Me.SendPropertyChanged("TIMELINE")
				Me.OnTIMELINEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_BEFORE", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_BEFORE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_BEFORE
		End Get
		Set
			If (Me._DATE_BEFORE.Equals(value) = false) Then
				Me.OnDATE_BEFOREChanging(value)
				Me.SendPropertyChanging
				Me._DATE_BEFORE = value
				Me.SendPropertyChanged("DATE_BEFORE")
				Me.OnDATE_BEFOREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIRST_MEET", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FIRST_MEET() As String
		Get
			Return Me._FIRST_MEET
		End Get
		Set
			If (String.Equals(Me._FIRST_MEET, value) = false) Then
				Me.OnFIRST_MEETChanging(value)
				Me.SendPropertyChanging
				Me._FIRST_MEET = value
				Me.SendPropertyChanged("FIRST_MEET")
				Me.OnFIRST_MEETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_FIRST_DATE", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_FIRST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_FIRST_DATE
		End Get
		Set
			If (Me._DATE_FIRST_DATE.Equals(value) = false) Then
				Me.OnDATE_FIRST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_FIRST_DATE = value
				Me.SendPropertyChanged("DATE_FIRST_DATE")
				Me.OnDATE_FIRST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOTAL_DATE", DbType:="Float", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TOTAL_DATE() As System.Nullable(Of Double)
		Get
			Return Me._TOTAL_DATE
		End Get
		Set
			If (Me._TOTAL_DATE.Equals(value) = false) Then
				Me.OnTOTAL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._TOTAL_DATE = value
				Me.SendPropertyChanged("TOTAL_DATE")
				Me.OnTOTAL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_BOOK", DbType:="NVarChar(20)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NO_BOOK() As String
		Get
			Return Me._NO_BOOK
		End Get
		Set
			If (String.Equals(Me._NO_BOOK, value) = false) Then
				Me.OnNO_BOOKChanging(value)
				Me.SendPropertyChanging
				Me._NO_BOOK = value
				Me.SendPropertyChanged("NO_BOOK")
				Me.OnNO_BOOKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PROBLEM", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NAME_PROBLEM() As String
		Get
			Return Me._NAME_PROBLEM
		End Get
		Set
			If (String.Equals(Me._NAME_PROBLEM, value) = false) Then
				Me.OnNAME_PROBLEMChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PROBLEM = value
				Me.SendPropertyChanged("NAME_PROBLEM")
				Me.OnNAME_PROBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MNF_NAME", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property MNF_NAME() As String
		Get
			Return Me._MNF_NAME
		End Get
		Set
			If (String.Equals(Me._MNF_NAME, value) = false) Then
				Me.OnMNF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MNF_NAME = value
				Me.SendPropertyChanged("MNF_NAME")
				Me.OnMNF_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(250)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_CUSTOM", DbType:="NVarChar(15)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NUMBER_CUSTOM() As String
		Get
			Return Me._NUMBER_CUSTOM
		End Get
		Set
			If (String.Equals(Me._NUMBER_CUSTOM, value) = false) Then
				Me.OnNUMBER_CUSTOMChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_CUSTOM = value
				Me.SendPropertyChanged("NUMBER_CUSTOM")
				Me.OnNUMBER_CUSTOMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_IMPORT", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NAME_IMPORT() As String
		Get
			Return Me._NAME_IMPORT
		End Get
		Set
			If (String.Equals(Me._NAME_IMPORT, value) = false) Then
				Me.OnNAME_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._NAME_IMPORT = value
				Me.SendPropertyChanged("NAME_IMPORT")
				Me.OnNAME_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_IMPORT", DbType:="NVarChar(15)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NUMBER_IMPORT() As String
		Get
			Return Me._NUMBER_IMPORT
		End Get
		Set
			If (String.Equals(Me._NUMBER_IMPORT, value) = false) Then
				Me.OnNUMBER_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_IMPORT = value
				Me.SendPropertyChanged("NUMBER_IMPORT")
				Me.OnNUMBER_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATI_PKK", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CATI_PKK() As String
		Get
			Return Me._CATI_PKK
		End Get
		Set
			If (String.Equals(Me._CATI_PKK, value) = false) Then
				Me.OnCATI_PKKChanging(value)
				Me.SendPropertyChanging
				Me._CATI_PKK = value
				Me.SendPropertyChanged("CATI_PKK")
				Me.OnCATI_PKKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPEN_BY", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OPEN_BY() As System.Nullable(Of Integer)
		Get
			Return Me._OPEN_BY
		End Get
		Set
			If (Me._OPEN_BY.Equals(value) = false) Then
				Me.OnOPEN_BYChanging(value)
				Me.SendPropertyChanging
				Me._OPEN_BY = value
				Me.SendPropertyChanged("OPEN_BY")
				Me.OnOPEN_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASSIGN_TO", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ASSIGN_TO() As System.Nullable(Of Integer)
		Get
			Return Me._ASSIGN_TO
		End Get
		Set
			If (Me._ASSIGN_TO.Equals(value) = false) Then
				Me.OnASSIGN_TOChanging(value)
				Me.SendPropertyChanging
				Me._ASSIGN_TO = value
				Me.SendPropertyChanged("ASSIGN_TO")
				Me.OnASSIGN_TOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_STORY", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NAME_STORY() As String
		Get
			Return Me._NAME_STORY
		End Get
		Set
			If (String.Equals(Me._NAME_STORY, value) = false) Then
				Me.OnNAME_STORYChanging(value)
				Me.SendPropertyChanging
				Me._NAME_STORY = value
				Me.SendPropertyChanged("NAME_STORY")
				Me.OnNAME_STORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_IMPORTANT", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NAME_IMPORTANT() As String
		Get
			Return Me._NAME_IMPORTANT
		End Get
		Set
			If (String.Equals(Me._NAME_IMPORTANT, value) = false) Then
				Me.OnNAME_IMPORTANTChanging(value)
				Me.SendPropertyChanging
				Me._NAME_IMPORTANT = value
				Me.SendPropertyChanged("NAME_IMPORTANT")
				Me.OnNAME_IMPORTANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_REGIS", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DRUG_REGIS() As String
		Get
			Return Me._DRUG_REGIS
		End Get
		Set
			If (String.Equals(Me._DRUG_REGIS, value) = false) Then
				Me.OnDRUG_REGISChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_REGIS = value
				Me.SendPropertyChanged("DRUG_REGIS")
				Me.OnDRUG_REGISChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_REGIS_SE", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DRUG_REGIS_SE() As String
		Get
			Return Me._DRUG_REGIS_SE
		End Get
		Set
			If (String.Equals(Me._DRUG_REGIS_SE, value) = false) Then
				Me.OnDRUG_REGIS_SEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_REGIS_SE = value
				Me.SendPropertyChanged("DRUG_REGIS_SE")
				Me.OnDRUG_REGIS_SEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_LICEINT", DbType:="NVarChar(243)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property MED_LICEINT() As String
		Get
			Return Me._MED_LICEINT
		End Get
		Set
			If (String.Equals(Me._MED_LICEINT, value) = false) Then
				Me.OnMED_LICEINTChanging(value)
				Me.SendPropertyChanging
				Me._MED_LICEINT = value
				Me.SendPropertyChanged("MED_LICEINT")
				Me.OnMED_LICEINTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROBLEM", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PROBLEM() As String
		Get
			Return Me._PROBLEM
		End Get
		Set
			If (String.Equals(Me._PROBLEM, value) = false) Then
				Me.OnPROBLEMChanging(value)
				Me.SendPropertyChanging
				Me._PROBLEM = value
				Me.SendPropertyChanged("PROBLEM")
				Me.OnPROBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_PRO", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property STATUS_PRO() As String
		Get
			Return Me._STATUS_PRO
		End Get
		Set
			If (String.Equals(Me._STATUS_PRO, value) = false) Then
				Me.OnSTATUS_PROChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_PRO = value
				Me.SendPropertyChanged("STATUS_PRO")
				Me.OnSTATUS_PROChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOMAT_PROBLEM", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FOMAT_PROBLEM() As String
		Get
			Return Me._FOMAT_PROBLEM
		End Get
		Set
			If (String.Equals(Me._FOMAT_PROBLEM, value) = false) Then
				Me.OnFOMAT_PROBLEMChanging(value)
				Me.SendPropertyChanging
				Me._FOMAT_PROBLEM = value
				Me.SendPropertyChanged("FOMAT_PROBLEM")
				Me.OnFOMAT_PROBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CATEGORY() As String
		Get
			Return Me._CATEGORY
		End Get
		Set
			If (String.Equals(Me._CATEGORY, value) = false) Then
				Me.OnCATEGORYChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY = value
				Me.SendPropertyChanged("CATEGORY")
				Me.OnCATEGORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRIORITY", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRIORITY() As String
		Get
			Return Me._PRIORITY
		End Get
		Set
			If (String.Equals(Me._PRIORITY, value) = false) Then
				Me.OnPRIORITYChanging(value)
				Me.SendPropertyChanging
				Me._PRIORITY = value
				Me.SendPropertyChanged("PRIORITY")
				Me.OnPRIORITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPLANATION", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EXPLANATION() As String
		Get
			Return Me._EXPLANATION
		End Get
		Set
			If (String.Equals(Me._EXPLANATION, value) = false) Then
				Me.OnEXPLANATIONChanging(value)
				Me.SendPropertyChanging
				Me._EXPLANATION = value
				Me.SendPropertyChanged("EXPLANATION")
				Me.OnEXPLANATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELATED_ISSUES", DbType:="VarChar(8000)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property RELATED_ISSUES() As String
		Get
			Return Me._RELATED_ISSUES
		End Get
		Set
			If (String.Equals(Me._RELATED_ISSUES, value) = false) Then
				Me.OnRELATED_ISSUESChanging(value)
				Me.SendPropertyChanging
				Me._RELATED_ISSUES = value
				Me.SendPropertyChanged("RELATED_ISSUES")
				Me.OnRELATED_ISSUESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENT", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property COMMENT() As String
		Get
			Return Me._COMMENT
		End Get
		Set
			If (String.Equals(Me._COMMENT, value) = false) Then
				Me.OnCOMMENTChanging(value)
				Me.SendPropertyChanging
				Me._COMMENT = value
				Me.SendPropertyChanged("COMMENT")
				Me.OnCOMMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACHMENT", DbType:="VarChar(8000)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ATTACHMENT() As String
		Get
			Return Me._ATTACHMENT
		End Get
		Set
			If (String.Equals(Me._ATTACHMENT, value) = false) Then
				Me.OnATTACHMENTChanging(value)
				Me.SendPropertyChanging
				Me._ATTACHMENT = value
				Me.SendPropertyChanged("ATTACHMENT")
				Me.OnATTACHMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_HELPER", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_HELPER() As System.Nullable(Of Date)
		Get
			Return Me._DATE_HELPER
		End Get
		Set
			If (Me._DATE_HELPER.Equals(value) = false) Then
				Me.OnDATE_HELPERChanging(value)
				Me.SendPropertyChanging
				Me._DATE_HELPER = value
				Me.SendPropertyChanged("DATE_HELPER")
				Me.OnDATE_HELPERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_MATURITY", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_MATURITY() As System.Nullable(Of Date)
		Get
			Return Me._DATE_MATURITY
		End Get
		Set
			If (Me._DATE_MATURITY.Equals(value) = false) Then
				Me.OnDATE_MATURITYChanging(value)
				Me.SendPropertyChanging
				Me._DATE_MATURITY = value
				Me.SendPropertyChanged("DATE_MATURITY")
				Me.OnDATE_MATURITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_LAST_COODINATE", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_LAST_COODINATE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_LAST_COODINATE
		End Get
		Set
			If (Me._DATE_LAST_COODINATE.Equals(value) = false) Then
				Me.OnDATE_LAST_COODINATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_LAST_COODINATE = value
				Me.SendPropertyChanged("DATE_LAST_COODINATE")
				Me.OnDATE_LAST_COODINATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_OFFER_MANE", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_OFFER_MANE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_OFFER_MANE
		End Get
		Set
			If (Me._DATE_OFFER_MANE.Equals(value) = false) Then
				Me.OnDATE_OFFER_MANEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_OFFER_MANE = value
				Me.SendPropertyChanged("DATE_OFFER_MANE")
				Me.OnDATE_OFFER_MANEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PEPLE_COODINATE", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PEPLE_COODINATE() As String
		Get
			Return Me._PEPLE_COODINATE
		End Get
		Set
			If (String.Equals(Me._PEPLE_COODINATE, value) = false) Then
				Me.OnPEPLE_COODINATEChanging(value)
				Me.SendPropertyChanging
				Me._PEPLE_COODINATE = value
				Me.SendPropertyChanged("PEPLE_COODINATE")
				Me.OnPEPLE_COODINATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBERPHONE", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NUMBERPHONE() As String
		Get
			Return Me._NUMBERPHONE
		End Get
		Set
			If (String.Equals(Me._NUMBERPHONE, value) = false) Then
				Me.OnNUMBERPHONEChanging(value)
				Me.SendPropertyChanging
				Me._NUMBERPHONE = value
				Me.SendPropertyChanged("NUMBERPHONE")
				Me.OnNUMBERPHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BILLING", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property BILLING() As String
		Get
			Return Me._BILLING
		End Get
		Set
			If (String.Equals(Me._BILLING, value) = false) Then
				Me.OnBILLINGChanging(value)
				Me.SendPropertyChanging
				Me._BILLING = value
				Me.SendPropertyChanged("BILLING")
				Me.OnBILLINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALERT_DAMET1", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ALERT_DAMET1() As String
		Get
			Return Me._ALERT_DAMET1
		End Get
		Set
			If (String.Equals(Me._ALERT_DAMET1, value) = false) Then
				Me.OnALERT_DAMET1Changing(value)
				Me.SendPropertyChanging
				Me._ALERT_DAMET1 = value
				Me.SendPropertyChanged("ALERT_DAMET1")
				Me.OnALERT_DAMET1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALERT_DAMET2", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ALERT_DAMET2() As String
		Get
			Return Me._ALERT_DAMET2
		End Get
		Set
			If (String.Equals(Me._ALERT_DAMET2, value) = false) Then
				Me.OnALERT_DAMET2Changing(value)
				Me.SendPropertyChanging
				Me._ALERT_DAMET2 = value
				Me.SendPropertyChanged("ALERT_DAMET2")
				Me.OnALERT_DAMET2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALERT_DAMET3", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ALERT_DAMET3() As String
		Get
			Return Me._ALERT_DAMET3
		End Get
		Set
			If (String.Equals(Me._ALERT_DAMET3, value) = false) Then
				Me.OnALERT_DAMET3Changing(value)
				Me.SendPropertyChanging
				Me._ALERT_DAMET3 = value
				Me.SendPropertyChanged("ALERT_DAMET3")
				Me.OnALERT_DAMET3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALERT_DAMET_ALL", DbType:="NVarChar(243)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ALERT_DAMET_ALL() As String
		Get
			Return Me._ALERT_DAMET_ALL
		End Get
		Set
			If (String.Equals(Me._ALERT_DAMET_ALL, value) = false) Then
				Me.OnALERT_DAMET_ALLChanging(value)
				Me.SendPropertyChanging
				Me._ALERT_DAMET_ALL = value
				Me.SendPropertyChanged("ALERT_DAMET_ALL")
				Me.OnALERT_DAMET_ALLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LITIGATION", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LITIGATION() As System.Nullable(Of Boolean)
		Get
			Return Me._LITIGATION
		End Get
		Set
			If (Me._LITIGATION.Equals(value) = false) Then
				Me.OnLITIGATIONChanging(value)
				Me.SendPropertyChanging
				Me._LITIGATION = value
				Me.SendPropertyChanged("LITIGATION")
				Me.OnLITIGATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_CAPA", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EDIT_CAPA() As String
		Get
			Return Me._EDIT_CAPA
		End Get
		Set
			If (String.Equals(Me._EDIT_CAPA, value) = false) Then
				Me.OnEDIT_CAPAChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_CAPA = value
				Me.SendPropertyChanged("EDIT_CAPA")
				Me.OnEDIT_CAPAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIRST_AGENDA", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FIRST_AGENDA() As String
		Get
			Return Me._FIRST_AGENDA
		End Get
		Set
			If (String.Equals(Me._FIRST_AGENDA, value) = false) Then
				Me.OnFIRST_AGENDAChanging(value)
				Me.SendPropertyChanging
				Me._FIRST_AGENDA = value
				Me.SendPropertyChanged("FIRST_AGENDA")
				Me.OnFIRST_AGENDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESOLUTION_LAST", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property RESOLUTION_LAST() As String
		Get
			Return Me._RESOLUTION_LAST
		End Get
		Set
			If (String.Equals(Me._RESOLUTION_LAST, value) = false) Then
				Me.OnRESOLUTION_LASTChanging(value)
				Me.SendPropertyChanging
				Me._RESOLUTION_LAST = value
				Me.SendPropertyChanged("RESOLUTION_LAST")
				Me.OnRESOLUTION_LASTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESOLUTION_DATE_LAST", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property RESOLUTION_DATE_LAST() As System.Nullable(Of Date)
		Get
			Return Me._RESOLUTION_DATE_LAST
		End Get
		Set
			If (Me._RESOLUTION_DATE_LAST.Equals(value) = false) Then
				Me.OnRESOLUTION_DATE_LASTChanging(value)
				Me.SendPropertyChanging
				Me._RESOLUTION_DATE_LAST = value
				Me.SendPropertyChanged("RESOLUTION_DATE_LAST")
				Me.OnRESOLUTION_DATE_LASTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREM_LAST", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TREM_LAST() As String
		Get
			Return Me._TREM_LAST
		End Get
		Set
			If (String.Equals(Me._TREM_LAST, value) = false) Then
				Me.OnTREM_LASTChanging(value)
				Me.SendPropertyChanging
				Me._TREM_LAST = value
				Me.SendPropertyChanged("TREM_LAST")
				Me.OnTREM_LASTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROBLEM_QUALITY", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PROBLEM_QUALITY() As String
		Get
			Return Me._PROBLEM_QUALITY
		End Get
		Set
			If (String.Equals(Me._PROBLEM_QUALITY, value) = false) Then
				Me.OnPROBLEM_QUALITYChanging(value)
				Me.SendPropertyChanging
				Me._PROBLEM_QUALITY = value
				Me.SendPropertyChanged("PROBLEM_QUALITY")
				Me.OnPROBLEM_QUALITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CALCULATE_DAY", DbType:="Float", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CALCULATE_DAY() As System.Nullable(Of Double)
		Get
			Return Me._CALCULATE_DAY
		End Get
		Set
			If (Me._CALCULATE_DAY.Equals(value) = false) Then
				Me.OnCALCULATE_DAYChanging(value)
				Me.SendPropertyChanging
				Me._CALCULATE_DAY = value
				Me.SendPropertyChanged("CALCULATE_DAY")
				Me.OnCALCULATE_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSMA_TimeStamp", AutoSync:=AutoSync.Always, DbType:="rowversion", IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SSMA_TimeStamp() As System.Data.Linq.Binary
		Get
			Return Me._SSMA_TimeStamp
		End Get
		Set
			If (Object.Equals(Me._SSMA_TimeStamp, value) = false) Then
				Me.OnSSMA_TimeStampChanging(value)
				Me.SendPropertyChanging
				Me._SSMA_TimeStamp = value
				Me.SendPropertyChanged("SSMA_TimeStamp")
				Me.OnSSMA_TimeStampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMON_NAME", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property COMMON_NAME() As String
		Get
			Return Me._COMMON_NAME
		End Get
		Set
			If (String.Equals(Me._COMMON_NAME, value) = false) Then
				Me.OnCOMMON_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMMON_NAME = value
				Me.SendPropertyChanged("COMMON_NAME")
				Me.OnCOMMON_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DETECT_DATE", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DETECT_DATE() As String
		Get
			Return Me._DETECT_DATE
		End Get
		Set
			If (String.Equals(Me._DETECT_DATE, value) = false) Then
				Me.OnDETECT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DETECT_DATE = value
				Me.SendPropertyChanged("DETECT_DATE")
				Me.OnDETECT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PHYSICAL() As String
		Get
			Return Me._PHYSICAL
		End Get
		Set
			If (String.Equals(Me._PHYSICAL, value) = false) Then
				Me.OnPHYSICALChanging(value)
				Me.SendPropertyChanging
				Me._PHYSICAL = value
				Me.SendPropertyChanged("PHYSICAL")
				Me.OnPHYSICALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINER_P", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CONTRAINER_P() As String
		Get
			Return Me._CONTRAINER_P
		End Get
		Set
			If (String.Equals(Me._CONTRAINER_P, value) = false) Then
				Me.OnCONTRAINER_PChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINER_P = value
				Me.SendPropertyChanged("CONTRAINER_P")
				Me.OnCONTRAINER_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LABEL() As String
		Get
			Return Me._LABEL
		End Get
		Set
			If (String.Equals(Me._LABEL, value) = false) Then
				Me.OnLABELChanging(value)
				Me.SendPropertyChanging
				Me._LABEL = value
				Me.SendPropertyChanged("LABEL")
				Me.OnLABELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYSIS", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ANALYSIS() As String
		Get
			Return Me._ANALYSIS
		End Get
		Set
			If (String.Equals(Me._ANALYSIS, value) = false) Then
				Me.OnANALYSISChanging(value)
				Me.SendPropertyChanging
				Me._ANALYSIS = value
				Me.SendPropertyChanged("ANALYSIS")
				Me.OnANALYSISChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTER_ISSUES", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OTER_ISSUES() As String
		Get
			Return Me._OTER_ISSUES
		End Get
		Set
			If (String.Equals(Me._OTER_ISSUES, value) = false) Then
				Me.OnOTER_ISSUESChanging(value)
				Me.SendPropertyChanging
				Me._OTER_ISSUES = value
				Me.SendPropertyChanged("OTER_ISSUES")
				Me.OnOTER_ISSUESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_format", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property MED_format() As String
		Get
			Return Me._MED_format
		End Get
		Set
			If (String.Equals(Me._MED_format, value) = false) Then
				Me.OnMED_formatChanging(value)
				Me.SendPropertyChanging
				Me._MED_format = value
				Me.SendPropertyChanged("MED_format")
				Me.OnMED_formatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_PROBLEM", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EX_PROBLEM() As String
		Get
			Return Me._EX_PROBLEM
		End Get
		Set
			If (String.Equals(Me._EX_PROBLEM, value) = false) Then
				Me.OnEX_PROBLEMChanging(value)
				Me.SendPropertyChanging
				Me._EX_PROBLEM = value
				Me.SendPropertyChanged("EX_PROBLEM")
				Me.OnEX_PROBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property POSITION() As String
		Get
			Return Me._POSITION
		End Get
		Set
			If (String.Equals(Me._POSITION, value) = false) Then
				Me.OnPOSITIONChanging(value)
				Me.SendPropertyChanging
				Me._POSITION = value
				Me.SendPropertyChanged("POSITION")
				Me.OnPOSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_PROBLEM", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ADDRESS_PROBLEM() As String
		Get
			Return Me._ADDRESS_PROBLEM
		End Get
		Set
			If (String.Equals(Me._ADDRESS_PROBLEM, value) = false) Then
				Me.OnADDRESS_PROBLEMChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_PROBLEM = value
				Me.SendPropertyChanged("ADDRESS_PROBLEM")
				Me.OnADDRESS_PROBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TELE_PROBLEM", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TELE_PROBLEM() As String
		Get
			Return Me._TELE_PROBLEM
		End Get
		Set
			If (String.Equals(Me._TELE_PROBLEM, value) = false) Then
				Me.OnTELE_PROBLEMChanging(value)
				Me.SendPropertyChanging
				Me._TELE_PROBLEM = value
				Me.SendPropertyChanged("TELE_PROBLEM")
				Me.OnTELE_PROBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX_PROBLEM", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FAX_PROBLEM() As String
		Get
			Return Me._FAX_PROBLEM
		End Get
		Set
			If (String.Equals(Me._FAX_PROBLEM, value) = false) Then
				Me.OnFAX_PROBLEMChanging(value)
				Me.SendPropertyChanging
				Me._FAX_PROBLEM = value
				Me.SendPropertyChanged("FAX_PROBLEM")
				Me.OnFAX_PROBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFROM", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property INFROM() As String
		Get
			Return Me._INFROM
		End Get
		Set
			If (String.Equals(Me._INFROM, value) = false) Then
				Me.OnINFROMChanging(value)
				Me.SendPropertyChanging
				Me._INFROM = value
				Me.SendPropertyChanged("INFROM")
				Me.OnINFROMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_NAME", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property INFORM_NAME() As String
		Get
			Return Me._INFORM_NAME
		End Get
		Set
			If (String.Equals(Me._INFORM_NAME, value) = false) Then
				Me.OnINFORM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_NAME = value
				Me.SendPropertyChanged("INFORM_NAME")
				Me.OnINFORM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_ADD", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property INFORM_ADD() As String
		Get
			Return Me._INFORM_ADD
		End Get
		Set
			If (String.Equals(Me._INFORM_ADD, value) = false) Then
				Me.OnINFORM_ADDChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_ADD = value
				Me.SendPropertyChanged("INFORM_ADD")
				Me.OnINFORM_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_TELE", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property INFORM_TELE() As String
		Get
			Return Me._INFORM_TELE
		End Get
		Set
			If (String.Equals(Me._INFORM_TELE, value) = false) Then
				Me.OnINFORM_TELEChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_TELE = value
				Me.SendPropertyChanged("INFORM_TELE")
				Me.OnINFORM_TELEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_FAX", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property INFORM_FAX() As String
		Get
			Return Me._INFORM_FAX
		End Get
		Set
			If (String.Equals(Me._INFORM_FAX, value) = false) Then
				Me.OnINFORM_FAXChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_FAX = value
				Me.SendPropertyChanged("INFORM_FAX")
				Me.OnINFORM_FAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_EMAIL", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property INFORM_EMAIL() As String
		Get
			Return Me._INFORM_EMAIL
		End Get
		Set
			If (String.Equals(Me._INFORM_EMAIL, value) = false) Then
				Me.OnINFORM_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_EMAIL = value
				Me.SendPropertyChanged("INFORM_EMAIL")
				Me.OnINFORM_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRELI_ACTION", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRELI_ACTION() As String
		Get
			Return Me._PRELI_ACTION
		End Get
		Set
			If (String.Equals(Me._PRELI_ACTION, value) = false) Then
				Me.OnPRELI_ACTIONChanging(value)
				Me.SendPropertyChanging
				Me._PRELI_ACTION = value
				Me.SendPropertyChanged("PRELI_ACTION")
				Me.OnPRELI_ACTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_DEALER", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NAME_DEALER() As String
		Get
			Return Me._NAME_DEALER
		End Get
		Set
			If (String.Equals(Me._NAME_DEALER, value) = false) Then
				Me.OnNAME_DEALERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_DEALER = value
				Me.SendPropertyChanged("NAME_DEALER")
				Me.OnNAME_DEALERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_TYPE", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property MED_TYPE() As String
		Get
			Return Me._MED_TYPE
		End Get
		Set
			If (String.Equals(Me._MED_TYPE, value) = false) Then
				Me.OnMED_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._MED_TYPE = value
				Me.SendPropertyChanged("MED_TYPE")
				Me.OnMED_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMP_NAME", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IMP_NAME() As String
		Get
			Return Me._IMP_NAME
		End Get
		Set
			If (String.Equals(Me._IMP_NAME, value) = false) Then
				Me.OnIMP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._IMP_NAME = value
				Me.SendPropertyChanged("IMP_NAME")
				Me.OnIMP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STORAGE_CON", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property STORAGE_CON() As String
		Get
			Return Me._STORAGE_CON
		End Get
		Set
			If (String.Equals(Me._STORAGE_CON, value) = false) Then
				Me.OnSTORAGE_CONChanging(value)
				Me.SendPropertyChanging
				Me._STORAGE_CON = value
				Me.SendPropertyChanged("STORAGE_CON")
				Me.OnSTORAGE_CONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTUAL_CON", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ACTUAL_CON() As String
		Get
			Return Me._ACTUAL_CON
		End Get
		Set
			If (String.Equals(Me._ACTUAL_CON, value) = false) Then
				Me.OnACTUAL_CONChanging(value)
				Me.SendPropertyChanging
				Me._ACTUAL_CON = value
				Me.SendPropertyChanged("ACTUAL_CON")
				Me.OnACTUAL_CONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL_DEPAR", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EMAIL_DEPAR() As String
		Get
			Return Me._EMAIL_DEPAR
		End Get
		Set
			If (String.Equals(Me._EMAIL_DEPAR, value) = false) Then
				Me.OnEMAIL_DEPARChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL_DEPAR = value
				Me.SendPropertyChanged("EMAIL_DEPAR")
				Me.OnEMAIL_DEPARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINE_DEPAR", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LINE_DEPAR() As String
		Get
			Return Me._LINE_DEPAR
		End Get
		Set
			If (String.Equals(Me._LINE_DEPAR, value) = false) Then
				Me.OnLINE_DEPARChanging(value)
				Me.SendPropertyChanging
				Me._LINE_DEPAR = value
				Me.SendPropertyChanged("LINE_DEPAR")
				Me.OnLINE_DEPARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_receive", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NAME_receive() As String
		Get
			Return Me._NAME_receive
		End Get
		Set
			If (String.Equals(Me._NAME_receive, value) = false) Then
				Me.OnNAME_receiveChanging(value)
				Me.SendPropertyChanging
				Me._NAME_receive = value
				Me.SendPropertyChanged("NAME_receive")
				Me.OnNAME_receiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NOTE() As String
		Get
			Return Me._NOTE
		End Get
		Set
			If (String.Equals(Me._NOTE, value) = false) Then
				Me.OnNOTEChanging(value)
				Me.SendPropertyChanging
				Me._NOTE = value
				Me.SendPropertyChanged("NOTE")
				Me.OnNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROBLEM_STAES", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PROBLEM_STAES() As String
		Get
			Return Me._PROBLEM_STAES
		End Get
		Set
			If (String.Equals(Me._PROBLEM_STAES, value) = false) Then
				Me.OnPROBLEM_STAESChanging(value)
				Me.SendPropertyChanging
				Me._PROBLEM_STAES = value
				Me.SendPropertyChanged("PROBLEM_STAES")
				Me.OnPROBLEM_STAESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSACTION_ID", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TRANSACTION_ID() As String
		Get
			Return Me._TRANSACTION_ID
		End Get
		Set
			If (String.Equals(Me._TRANSACTION_ID, value) = false) Then
				Me.OnTRANSACTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSACTION_ID = value
				Me.SendPropertyChanged("TRANSACTION_ID")
				Me.OnTRANSACTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_COMPLAIN", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NUMBER_COMPLAIN() As String
		Get
			Return Me._NUMBER_COMPLAIN
		End Get
		Set
			If (String.Equals(Me._NUMBER_COMPLAIN, value) = false) Then
				Me.OnNUMBER_COMPLAINChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_COMPLAIN = value
				Me.SendPropertyChanged("NUMBER_COMPLAIN")
				Me.OnNUMBER_COMPLAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_CARD", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ID_CARD() As String
		Get
			Return Me._ID_CARD
		End Get
		Set
			If (String.Equals(Me._ID_CARD, value) = false) Then
				Me.OnID_CARDChanging(value)
				Me.SendPropertyChanging
				Me._ID_CARD = value
				Me.SendPropertyChanged("ID_CARD")
				Me.OnID_CARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAUS_HIDEDATA", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property STAUS_HIDEDATA() As String
		Get
			Return Me._STAUS_HIDEDATA
		End Get
		Set
			If (String.Equals(Me._STAUS_HIDEDATA, value) = false) Then
				Me.OnSTAUS_HIDEDATAChanging(value)
				Me.SendPropertyChanging
				Me._STAUS_HIDEDATA = value
				Me.SendPropertyChanged("STAUS_HIDEDATA")
				Me.OnSTAUS_HIDEDATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHANEL_COMPLAIN", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CHANEL_COMPLAIN() As String
		Get
			Return Me._CHANEL_COMPLAIN
		End Get
		Set
			If (String.Equals(Me._CHANEL_COMPLAIN, value) = false) Then
				Me.OnCHANEL_COMPLAINChanging(value)
				Me.SendPropertyChanging
				Me._CHANEL_COMPLAIN = value
				Me.SendPropertyChanged("CHANEL_COMPLAIN")
				Me.OnCHANEL_COMPLAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_COMPLAIN", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NAME_COMPLAIN() As String
		Get
			Return Me._NAME_COMPLAIN
		End Get
		Set
			If (String.Equals(Me._NAME_COMPLAIN, value) = false) Then
				Me.OnNAME_COMPLAINChanging(value)
				Me.SendPropertyChanging
				Me._NAME_COMPLAIN = value
				Me.SendPropertyChanged("NAME_COMPLAIN")
				Me.OnNAME_COMPLAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_COMPLAIN", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DESCRIPTION_COMPLAIN() As String
		Get
			Return Me._DESCRIPTION_COMPLAIN
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION_COMPLAIN, value) = false) Then
				Me.OnDESCRIPTION_COMPLAINChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_COMPLAIN = value
				Me.SendPropertyChanged("DESCRIPTION_COMPLAIN")
				Me.OnDESCRIPTION_COMPLAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISSUE_COMPLAIN", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ISSUE_COMPLAIN() As String
		Get
			Return Me._ISSUE_COMPLAIN
		End Get
		Set
			If (String.Equals(Me._ISSUE_COMPLAIN, value) = false) Then
				Me.OnISSUE_COMPLAINChanging(value)
				Me.SendPropertyChanging
				Me._ISSUE_COMPLAIN = value
				Me.SendPropertyChanged("ISSUE_COMPLAIN")
				Me.OnISSUE_COMPLAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGRORY_COMPLAIN", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CATEGRORY_COMPLAIN() As String
		Get
			Return Me._CATEGRORY_COMPLAIN
		End Get
		Set
			If (String.Equals(Me._CATEGRORY_COMPLAIN, value) = false) Then
				Me.OnCATEGRORY_COMPLAINChanging(value)
				Me.SendPropertyChanging
				Me._CATEGRORY_COMPLAIN = value
				Me.SendPropertyChanged("CATEGRORY_COMPLAIN")
				Me.OnCATEGRORY_COMPLAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_FIND", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_FIND() As System.Nullable(Of Date)
		Get
			Return Me._DATE_FIND
		End Get
		Set
			If (Me._DATE_FIND.Equals(value) = false) Then
				Me.OnDATE_FINDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_FIND = value
				Me.SendPropertyChanged("DATE_FIND")
				Me.OnDATE_FINDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_SENT", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NUMBER_SENT() As String
		Get
			Return Me._NUMBER_SENT
		End Get
		Set
			If (String.Equals(Me._NUMBER_SENT, value) = false) Then
				Me.OnNUMBER_SENTChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_SENT = value
				Me.SendPropertyChanged("NUMBER_SENT")
				Me.OnNUMBER_SENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_REQUES", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property STATUS_REQUES() As String
		Get
			Return Me._STATUS_REQUES
		End Get
		Set
			If (String.Equals(Me._STATUS_REQUES, value) = false) Then
				Me.OnSTATUS_REQUESChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_REQUES = value
				Me.SendPropertyChanged("STATUS_REQUES")
				Me.OnSTATUS_REQUESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_CHALLEN", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property GROUP_CHALLEN() As String
		Get
			Return Me._GROUP_CHALLEN
		End Get
		Set
			If (String.Equals(Me._GROUP_CHALLEN, value) = false) Then
				Me.OnGROUP_CHALLENChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_CHALLEN = value
				Me.SendPropertyChanged("GROUP_CHALLEN")
				Me.OnGROUP_CHALLENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_PROCESS", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_PROCESS() As System.Nullable(Of Date)
		Get
			Return Me._DATE_PROCESS
		End Get
		Set
			If (Me._DATE_PROCESS.Equals(value) = false) Then
				Me.OnDATE_PROCESSChanging(value)
				Me.SendPropertyChanging
				Me._DATE_PROCESS = value
				Me.SendPropertyChanged("DATE_PROCESS")
				Me.OnDATE_PROCESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_RESULT", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATE_RESULT() As System.Nullable(Of Date)
		Get
			Return Me._DATE_RESULT
		End Get
		Set
			If (Me._DATE_RESULT.Equals(value) = false) Then
				Me.OnDATE_RESULTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_RESULT = value
				Me.SendPropertyChanged("DATE_RESULT")
				Me.OnDATE_RESULTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIC_OR_FILE", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PIC_OR_FILE() As String
		Get
			Return Me._PIC_OR_FILE
		End Get
		Set
			If (String.Equals(Me._PIC_OR_FILE, value) = false) Then
				Me.OnPIC_OR_FILEChanging(value)
				Me.SendPropertyChanging
				Me._PIC_OR_FILE = value
				Me.SendPropertyChanged("PIC_OR_FILE")
				Me.OnPIC_OR_FILEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_CORPORATE", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATA_CORPORATE() As String
		Get
			Return Me._DATA_CORPORATE
		End Get
		Set
			If (String.Equals(Me._DATA_CORPORATE, value) = false) Then
				Me.OnDATA_CORPORATEChanging(value)
				Me.SendPropertyChanging
				Me._DATA_CORPORATE = value
				Me.SendPropertyChanged("DATA_CORPORATE")
				Me.OnDATA_CORPORATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPYE_OF_ACT", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TPYE_OF_ACT() As String
		Get
			Return Me._TPYE_OF_ACT
		End Get
		Set
			If (String.Equals(Me._TPYE_OF_ACT, value) = false) Then
				Me.OnTPYE_OF_ACTChanging(value)
				Me.SendPropertyChanging
				Me._TPYE_OF_ACT = value
				Me.SendPropertyChanged("TPYE_OF_ACT")
				Me.OnTPYE_OF_ACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECTION_MISTAKE", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SECTION_MISTAKE() As String
		Get
			Return Me._SECTION_MISTAKE
		End Get
		Set
			If (String.Equals(Me._SECTION_MISTAKE, value) = false) Then
				Me.OnSECTION_MISTAKEChanging(value)
				Me.SendPropertyChanging
				Me._SECTION_MISTAKE = value
				Me.SendPropertyChanged("SECTION_MISTAKE")
				Me.OnSECTION_MISTAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECTION_PENALTY", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SECTION_PENALTY() As String
		Get
			Return Me._SECTION_PENALTY
		End Get
		Set
			If (String.Equals(Me._SECTION_PENALTY, value) = false) Then
				Me.OnSECTION_PENALTYChanging(value)
				Me.SendPropertyChanging
				Me._SECTION_PENALTY = value
				Me.SendPropertyChanged("SECTION_PENALTY")
				Me.OnSECTION_PENALTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_LICENSEE", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DATA_LICENSEE() As String
		Get
			Return Me._DATA_LICENSEE
		End Get
		Set
			If (String.Equals(Me._DATA_LICENSEE, value) = false) Then
				Me.OnDATA_LICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._DATA_LICENSEE = value
				Me.SendPropertyChanged("DATA_LICENSEE")
				Me.OnDATA_LICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DEPAR", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DESCRIPTION_DEPAR() As String
		Get
			Return Me._DESCRIPTION_DEPAR
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION_DEPAR, value) = false) Then
				Me.OnDESCRIPTION_DEPARChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DEPAR = value
				Me.SendPropertyChanged("DESCRIPTION_DEPAR")
				Me.OnDESCRIPTION_DEPARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_CONSIDE", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NUMBER_CONSIDE() As String
		Get
			Return Me._NUMBER_CONSIDE
		End Get
		Set
			If (String.Equals(Me._NUMBER_CONSIDE, value) = false) Then
				Me.OnNUMBER_CONSIDEChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_CONSIDE = value
				Me.SendPropertyChanged("NUMBER_CONSIDE")
				Me.OnNUMBER_CONSIDEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPERRATE_PLACE", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OPERRATE_PLACE() As String
		Get
			Return Me._OPERRATE_PLACE
		End Get
		Set
			If (String.Equals(Me._OPERRATE_PLACE, value) = false) Then
				Me.OnOPERRATE_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._OPERRATE_PLACE = value
				Me.SendPropertyChanged("OPERRATE_PLACE")
				Me.OnOPERRATE_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER1", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OTHER1() As String
		Get
			Return Me._OTHER1
		End Get
		Set
			If (String.Equals(Me._OTHER1, value) = false) Then
				Me.OnOTHER1Changing(value)
				Me.SendPropertyChanging
				Me._OTHER1 = value
				Me.SendPropertyChanged("OTHER1")
				Me.OnOTHER1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER2", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OTHER2() As String
		Get
			Return Me._OTHER2
		End Get
		Set
			If (String.Equals(Me._OTHER2, value) = false) Then
				Me.OnOTHER2Changing(value)
				Me.SendPropertyChanging
				Me._OTHER2 = value
				Me.SendPropertyChanged("OTHER2")
				Me.OnOTHER2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER2_2", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OTHER2_2() As String
		Get
			Return Me._OTHER2_2
		End Get
		Set
			If (String.Equals(Me._OTHER2_2, value) = false) Then
				Me.OnOTHER2_2Changing(value)
				Me.SendPropertyChanging
				Me._OTHER2_2 = value
				Me.SendPropertyChanged("OTHER2_2")
				Me.OnOTHER2_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER3", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OTHER3() As String
		Get
			Return Me._OTHER3
		End Get
		Set
			If (String.Equals(Me._OTHER3, value) = false) Then
				Me.OnOTHER3Changing(value)
				Me.SendPropertyChanging
				Me._OTHER3 = value
				Me.SendPropertyChanged("OTHER3")
				Me.OnOTHER3Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COMPLAIN_LOT")>  _
Partial Public Class COMPLAIN_LOT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _FKIDA As String
	
	Private _mfd_date As System.Nullable(Of Date)
	
	Private _mfd_date_th As String
	
	Private _exp_date As System.Nullable(Of Date)
	
	Private _exp_date_th As String
	
	Private _LOT_NO As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As String)
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub Onmfd_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmfd_dateChanged()
    End Sub
    Partial Private Sub Onmfd_date_thChanging(value As String)
    End Sub
    Partial Private Sub Onmfd_date_thChanged()
    End Sub
    Partial Private Sub Onexp_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onexp_dateChanged()
    End Sub
    Partial Private Sub Onexp_date_thChanging(value As String)
    End Sub
    Partial Private Sub Onexp_date_thChanged()
    End Sub
    Partial Private Sub OnLOT_NOChanging(value As String)
    End Sub
    Partial Private Sub OnLOT_NOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="NVarChar(MAX)")>  _
	Public Property FKIDA() As String
		Get
			Return Me._FKIDA
		End Get
		Set
			If (String.Equals(Me._FKIDA, value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mfd_date", DbType:="DateTime")>  _
	Public Property mfd_date() As System.Nullable(Of Date)
		Get
			Return Me._mfd_date
		End Get
		Set
			If (Me._mfd_date.Equals(value) = false) Then
				Me.Onmfd_dateChanging(value)
				Me.SendPropertyChanging
				Me._mfd_date = value
				Me.SendPropertyChanged("mfd_date")
				Me.Onmfd_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mfd_date_th", DbType:="NVarChar(MAX)")>  _
	Public Property mfd_date_th() As String
		Get
			Return Me._mfd_date_th
		End Get
		Set
			If (String.Equals(Me._mfd_date_th, value) = false) Then
				Me.Onmfd_date_thChanging(value)
				Me.SendPropertyChanging
				Me._mfd_date_th = value
				Me.SendPropertyChanged("mfd_date_th")
				Me.Onmfd_date_thChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exp_date", DbType:="DateTime")>  _
	Public Property exp_date() As System.Nullable(Of Date)
		Get
			Return Me._exp_date
		End Get
		Set
			If (Me._exp_date.Equals(value) = false) Then
				Me.Onexp_dateChanging(value)
				Me.SendPropertyChanging
				Me._exp_date = value
				Me.SendPropertyChanged("exp_date")
				Me.Onexp_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exp_date_th", DbType:="NVarChar(MAX)")>  _
	Public Property exp_date_th() As String
		Get
			Return Me._exp_date_th
		End Get
		Set
			If (String.Equals(Me._exp_date_th, value) = false) Then
				Me.Onexp_date_thChanging(value)
				Me.SendPropertyChanging
				Me._exp_date_th = value
				Me.SendPropertyChanged("exp_date_th")
				Me.Onexp_date_thChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOT_NO", DbType:="NVarChar(MAX)")>  _
	Public Property LOT_NO() As String
		Get
			Return Me._LOT_NO
		End Get
		Set
			If (String.Equals(Me._LOT_NO, value) = false) Then
				Me.OnLOT_NOChanging(value)
				Me.SendPropertyChanging
				Me._LOT_NO = value
				Me.SendPropertyChanged("LOT_NO")
				Me.OnLOT_NOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COMPLAIN_LOT_RECHECK")>  _
Partial Public Class COMPLAIN_LOT_RECHECK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _FKIDA As String
	
	Private _mfd_date As System.Nullable(Of Date)
	
	Private _mfd_date_th As String
	
	Private _exp_date As System.Nullable(Of Date)
	
	Private _exp_date_th As String
	
	Private _LOT_NO As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As String)
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub Onmfd_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmfd_dateChanged()
    End Sub
    Partial Private Sub Onmfd_date_thChanging(value As String)
    End Sub
    Partial Private Sub Onmfd_date_thChanged()
    End Sub
    Partial Private Sub Onexp_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onexp_dateChanged()
    End Sub
    Partial Private Sub Onexp_date_thChanging(value As String)
    End Sub
    Partial Private Sub Onexp_date_thChanged()
    End Sub
    Partial Private Sub OnLOT_NOChanging(value As String)
    End Sub
    Partial Private Sub OnLOT_NOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="NVarChar(MAX)")>  _
	Public Property FKIDA() As String
		Get
			Return Me._FKIDA
		End Get
		Set
			If (String.Equals(Me._FKIDA, value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mfd_date", DbType:="DateTime")>  _
	Public Property mfd_date() As System.Nullable(Of Date)
		Get
			Return Me._mfd_date
		End Get
		Set
			If (Me._mfd_date.Equals(value) = false) Then
				Me.Onmfd_dateChanging(value)
				Me.SendPropertyChanging
				Me._mfd_date = value
				Me.SendPropertyChanged("mfd_date")
				Me.Onmfd_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mfd_date_th", DbType:="NVarChar(MAX)")>  _
	Public Property mfd_date_th() As String
		Get
			Return Me._mfd_date_th
		End Get
		Set
			If (String.Equals(Me._mfd_date_th, value) = false) Then
				Me.Onmfd_date_thChanging(value)
				Me.SendPropertyChanging
				Me._mfd_date_th = value
				Me.SendPropertyChanged("mfd_date_th")
				Me.Onmfd_date_thChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exp_date", DbType:="DateTime")>  _
	Public Property exp_date() As System.Nullable(Of Date)
		Get
			Return Me._exp_date
		End Get
		Set
			If (Me._exp_date.Equals(value) = false) Then
				Me.Onexp_dateChanging(value)
				Me.SendPropertyChanging
				Me._exp_date = value
				Me.SendPropertyChanged("exp_date")
				Me.Onexp_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exp_date_th", DbType:="NVarChar(MAX)")>  _
	Public Property exp_date_th() As String
		Get
			Return Me._exp_date_th
		End Get
		Set
			If (String.Equals(Me._exp_date_th, value) = false) Then
				Me.Onexp_date_thChanging(value)
				Me.SendPropertyChanging
				Me._exp_date_th = value
				Me.SendPropertyChanged("exp_date_th")
				Me.Onexp_date_thChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOT_NO", DbType:="NVarChar(MAX)")>  _
	Public Property LOT_NO() As String
		Get
			Return Me._LOT_NO
		End Get
		Set
			If (String.Equals(Me._LOT_NO, value) = false) Then
				Me.OnLOT_NOChanging(value)
				Me.SendPropertyChanging
				Me._LOT_NO = value
				Me.SendPropertyChanged("LOT_NO")
				Me.OnLOT_NOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COMPLAIN_MAS")>  _
Partial Public Class COMPLAIN_MA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PATH_XML As String
	
	Private _PATH_PDF As String
	
	Private _DRUG_NM As String
	
	Private _DRUG_NMM As String
	
	Private _DRUG_FORMAT As String
	
	Private _DRUG_FORMAT_OTHER As String
	
	Private _DRUG_CRITICON As String
	
	Private _DRUG_TYPE_CONT As String
	
	Private _DRUG_REGISTER As String
	
	Private _DRUG_MANUF As String
	
	Private _DRUG_COUNTRY As String
	
	Private _DRUG_IMPNM As String
	
	Private _DRUG_DEALER As String
	
	Private _DRUG_DIST As String
	
	Private _DRUG_DIST_OTHER As String
	
	Private _DRUG_STCONDI As String
	
	Private _DRUG_STCONDI_OTHER As String
	
	Private _DATE_DETECT As System.Nullable(Of Date)
	
	Private _DATE_DETECT_TH As String
	
	Private _DATE_FIND_CHK As String
	
	Private _DATE_FIND_CHK_OTHER As String
	
	Private _COMPLAIN_BY As String
	
	Private _POSITION As String
	
	Private _DEPARTMENT As String
	
	Private _FULL_ADDR As String
	
	Private _TEL As String
	
	Private _TEL1 As String
	
	Private _EMAIL As String
	
	Private _LINE_ID As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _CREATE_BY_TH As String
	
	Private _TR_ID As String
	
	Private _PHYSICAL1 As System.Nullable(Of Integer)
	
	Private _PHYSICAL2 As System.Nullable(Of Integer)
	
	Private _PHYSICAL3 As System.Nullable(Of Integer)
	
	Private _PHYSICAL4 As System.Nullable(Of Integer)
	
	Private _PHYSICAL5 As System.Nullable(Of Integer)
	
	Private _PHYSICAL6 As System.Nullable(Of Integer)
	
	Private _PHYSICAL7 As System.Nullable(Of Integer)
	
	Private _PHYSICAL8 As System.Nullable(Of Integer)
	
	Private _PHYSICAL9 As System.Nullable(Of Integer)
	
	Private _PHYSICAL10 As System.Nullable(Of Integer)
	
	Private _PHYSICAL11 As System.Nullable(Of Integer)
	
	Private _PHYSICAL12 As System.Nullable(Of Integer)
	
	Private _PHYSICAL13 As System.Nullable(Of Integer)
	
	Private _PHYSICAL13_OTHER As String
	
	Private _CONTRAINER As System.Nullable(Of Integer)
	
	Private _CONTRAINER_TEXT As String
	
	Private _LABEL As System.Nullable(Of Integer)
	
	Private _LABEL_INPUT1 As String
	
	Private _LABEL_INPUT2 As String
	
	Private _LABEL_INPUT3 As String
	
	Private _INFORM As System.Nullable(Of Integer)
	
	Private _ANALYSIS As System.Nullable(Of Integer)
	
	Private _ANALYSIS_INPUT1 As String
	
	Private _ANALYSIS_INPUT2 As String
	
	Private _ANALYSIS_INPUT3 As String
	
	Private _OTHER_PLOBLEM As String
	
	Private _EX_PLOBLEM As String
	
	Private _EX_PLOBLEM_TEXT As String
	
	Private _EX_DRUG As String
	
	Private _EX_PIC As String
	
	Private _INFORM_NAME As String
	
	Private _INFORM_TEL As String
	
	Private _INFORM_TEL1 As String
	
	Private _INFORM_EMAIL As String
	
	Private _PRE_ACTION As String
	
	Private _CITIZEN_ID As String
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _REMARK As String
	
	Private _SYSTEM_ID As String
	
	Private _IDENTIFY As String
	
	Private _SOURCH As String
	
	Private _SOURCH_ID As String
	
	Private _LOT_CHK As String
	
	Private _RECALL_STATUS As String
	
	Private _COLOR_STATUS As String
	
	Private _STATUS_ID As String
	
	Private _STATUS As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPATH_XMLChanging(value As String)
    End Sub
    Partial Private Sub OnPATH_XMLChanged()
    End Sub
    Partial Private Sub OnPATH_PDFChanging(value As String)
    End Sub
    Partial Private Sub OnPATH_PDFChanged()
    End Sub
    Partial Private Sub OnDRUG_NMChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NMChanged()
    End Sub
    Partial Private Sub OnDRUG_NMMChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NMMChanged()
    End Sub
    Partial Private Sub OnDRUG_FORMATChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_FORMATChanged()
    End Sub
    Partial Private Sub OnDRUG_FORMAT_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_FORMAT_OTHERChanged()
    End Sub
    Partial Private Sub OnDRUG_CRITICONChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_CRITICONChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPE_CONTChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_TYPE_CONTChanged()
    End Sub
    Partial Private Sub OnDRUG_REGISTERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_REGISTERChanged()
    End Sub
    Partial Private Sub OnDRUG_MANUFChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_MANUFChanged()
    End Sub
    Partial Private Sub OnDRUG_COUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_COUNTRYChanged()
    End Sub
    Partial Private Sub OnDRUG_IMPNMChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_IMPNMChanged()
    End Sub
    Partial Private Sub OnDRUG_DEALERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_DEALERChanged()
    End Sub
    Partial Private Sub OnDRUG_DISTChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_DISTChanged()
    End Sub
    Partial Private Sub OnDRUG_DIST_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_DIST_OTHERChanged()
    End Sub
    Partial Private Sub OnDRUG_STCONDIChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_STCONDIChanged()
    End Sub
    Partial Private Sub OnDRUG_STCONDI_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_STCONDI_OTHERChanged()
    End Sub
    Partial Private Sub OnDATE_DETECTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_DETECTChanged()
    End Sub
    Partial Private Sub OnDATE_DETECT_THChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_DETECT_THChanged()
    End Sub
    Partial Private Sub OnDATE_FIND_CHKChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_FIND_CHKChanged()
    End Sub
    Partial Private Sub OnDATE_FIND_CHK_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_FIND_CHK_OTHERChanged()
    End Sub
    Partial Private Sub OnCOMPLAIN_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPLAIN_BYChanged()
    End Sub
    Partial Private Sub OnPOSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnFULL_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnFULL_ADDRChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnTEL1Changing(value As String)
    End Sub
    Partial Private Sub OnTEL1Changed()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnLINE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnLINE_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnCREATE_BY_THChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BY_THChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnPHYSICAL1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL1Changed()
    End Sub
    Partial Private Sub OnPHYSICAL2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL2Changed()
    End Sub
    Partial Private Sub OnPHYSICAL3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL3Changed()
    End Sub
    Partial Private Sub OnPHYSICAL4Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL4Changed()
    End Sub
    Partial Private Sub OnPHYSICAL5Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL5Changed()
    End Sub
    Partial Private Sub OnPHYSICAL6Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL6Changed()
    End Sub
    Partial Private Sub OnPHYSICAL7Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL7Changed()
    End Sub
    Partial Private Sub OnPHYSICAL8Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL8Changed()
    End Sub
    Partial Private Sub OnPHYSICAL9Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL9Changed()
    End Sub
    Partial Private Sub OnPHYSICAL10Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL10Changed()
    End Sub
    Partial Private Sub OnPHYSICAL11Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL11Changed()
    End Sub
    Partial Private Sub OnPHYSICAL12Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL12Changed()
    End Sub
    Partial Private Sub OnPHYSICAL13Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL13Changed()
    End Sub
    Partial Private Sub OnPHYSICAL13_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnPHYSICAL13_OTHERChanged()
    End Sub
    Partial Private Sub OnCONTRAINERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCONTRAINERChanged()
    End Sub
    Partial Private Sub OnCONTRAINER_TEXTChanging(value As String)
    End Sub
    Partial Private Sub OnCONTRAINER_TEXTChanged()
    End Sub
    Partial Private Sub OnLABELChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABELChanged()
    End Sub
    Partial Private Sub OnLABEL_INPUT1Changing(value As String)
    End Sub
    Partial Private Sub OnLABEL_INPUT1Changed()
    End Sub
    Partial Private Sub OnLABEL_INPUT2Changing(value As String)
    End Sub
    Partial Private Sub OnLABEL_INPUT2Changed()
    End Sub
    Partial Private Sub OnLABEL_INPUT3Changing(value As String)
    End Sub
    Partial Private Sub OnLABEL_INPUT3Changed()
    End Sub
    Partial Private Sub OnINFORMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINFORMChanged()
    End Sub
    Partial Private Sub OnANALYSISChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnANALYSISChanged()
    End Sub
    Partial Private Sub OnANALYSIS_INPUT1Changing(value As String)
    End Sub
    Partial Private Sub OnANALYSIS_INPUT1Changed()
    End Sub
    Partial Private Sub OnANALYSIS_INPUT2Changing(value As String)
    End Sub
    Partial Private Sub OnANALYSIS_INPUT2Changed()
    End Sub
    Partial Private Sub OnANALYSIS_INPUT3Changing(value As String)
    End Sub
    Partial Private Sub OnANALYSIS_INPUT3Changed()
    End Sub
    Partial Private Sub OnOTHER_PLOBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_PLOBLEMChanged()
    End Sub
    Partial Private Sub OnEX_PLOBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnEX_PLOBLEMChanged()
    End Sub
    Partial Private Sub OnEX_PLOBLEM_TEXTChanging(value As String)
    End Sub
    Partial Private Sub OnEX_PLOBLEM_TEXTChanged()
    End Sub
    Partial Private Sub OnEX_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnEX_DRUGChanged()
    End Sub
    Partial Private Sub OnEX_PICChanging(value As String)
    End Sub
    Partial Private Sub OnEX_PICChanged()
    End Sub
    Partial Private Sub OnINFORM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_NAMEChanged()
    End Sub
    Partial Private Sub OnINFORM_TELChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_TELChanged()
    End Sub
    Partial Private Sub OnINFORM_TEL1Changing(value As String)
    End Sub
    Partial Private Sub OnINFORM_TEL1Changed()
    End Sub
    Partial Private Sub OnINFORM_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_EMAILChanged()
    End Sub
    Partial Private Sub OnPRE_ACTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPRE_ACTIONChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnSYSTEM_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSYSTEM_IDChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnSOURCHChanging(value As String)
    End Sub
    Partial Private Sub OnSOURCHChanged()
    End Sub
    Partial Private Sub OnSOURCH_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSOURCH_IDChanged()
    End Sub
    Partial Private Sub OnLOT_CHKChanging(value As String)
    End Sub
    Partial Private Sub OnLOT_CHKChanged()
    End Sub
    Partial Private Sub OnRECALL_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnRECALL_STATUSChanged()
    End Sub
    Partial Private Sub OnCOLOR_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnCOLOR_STATUSChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATH_XML", DbType:="NVarChar(MAX)")>  _
	Public Property PATH_XML() As String
		Get
			Return Me._PATH_XML
		End Get
		Set
			If (String.Equals(Me._PATH_XML, value) = false) Then
				Me.OnPATH_XMLChanging(value)
				Me.SendPropertyChanging
				Me._PATH_XML = value
				Me.SendPropertyChanged("PATH_XML")
				Me.OnPATH_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATH_PDF", DbType:="NVarChar(MAX)")>  _
	Public Property PATH_PDF() As String
		Get
			Return Me._PATH_PDF
		End Get
		Set
			If (String.Equals(Me._PATH_PDF, value) = false) Then
				Me.OnPATH_PDFChanging(value)
				Me.SendPropertyChanging
				Me._PATH_PDF = value
				Me.SendPropertyChanged("PATH_PDF")
				Me.OnPATH_PDFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NM", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NM() As String
		Get
			Return Me._DRUG_NM
		End Get
		Set
			If (String.Equals(Me._DRUG_NM, value) = false) Then
				Me.OnDRUG_NMChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NM = value
				Me.SendPropertyChanged("DRUG_NM")
				Me.OnDRUG_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NMM", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NMM() As String
		Get
			Return Me._DRUG_NMM
		End Get
		Set
			If (String.Equals(Me._DRUG_NMM, value) = false) Then
				Me.OnDRUG_NMMChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NMM = value
				Me.SendPropertyChanged("DRUG_NMM")
				Me.OnDRUG_NMMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_FORMAT", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_FORMAT() As String
		Get
			Return Me._DRUG_FORMAT
		End Get
		Set
			If (String.Equals(Me._DRUG_FORMAT, value) = false) Then
				Me.OnDRUG_FORMATChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_FORMAT = value
				Me.SendPropertyChanged("DRUG_FORMAT")
				Me.OnDRUG_FORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_FORMAT_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_FORMAT_OTHER() As String
		Get
			Return Me._DRUG_FORMAT_OTHER
		End Get
		Set
			If (String.Equals(Me._DRUG_FORMAT_OTHER, value) = false) Then
				Me.OnDRUG_FORMAT_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_FORMAT_OTHER = value
				Me.SendPropertyChanged("DRUG_FORMAT_OTHER")
				Me.OnDRUG_FORMAT_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_CRITICON", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_CRITICON() As String
		Get
			Return Me._DRUG_CRITICON
		End Get
		Set
			If (String.Equals(Me._DRUG_CRITICON, value) = false) Then
				Me.OnDRUG_CRITICONChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_CRITICON = value
				Me.SendPropertyChanged("DRUG_CRITICON")
				Me.OnDRUG_CRITICONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE_CONT", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_TYPE_CONT() As String
		Get
			Return Me._DRUG_TYPE_CONT
		End Get
		Set
			If (String.Equals(Me._DRUG_TYPE_CONT, value) = false) Then
				Me.OnDRUG_TYPE_CONTChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE_CONT = value
				Me.SendPropertyChanged("DRUG_TYPE_CONT")
				Me.OnDRUG_TYPE_CONTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_REGISTER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_REGISTER() As String
		Get
			Return Me._DRUG_REGISTER
		End Get
		Set
			If (String.Equals(Me._DRUG_REGISTER, value) = false) Then
				Me.OnDRUG_REGISTERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_REGISTER = value
				Me.SendPropertyChanged("DRUG_REGISTER")
				Me.OnDRUG_REGISTERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_MANUF", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_MANUF() As String
		Get
			Return Me._DRUG_MANUF
		End Get
		Set
			If (String.Equals(Me._DRUG_MANUF, value) = false) Then
				Me.OnDRUG_MANUFChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_MANUF = value
				Me.SendPropertyChanged("DRUG_MANUF")
				Me.OnDRUG_MANUFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_COUNTRY() As String
		Get
			Return Me._DRUG_COUNTRY
		End Get
		Set
			If (String.Equals(Me._DRUG_COUNTRY, value) = false) Then
				Me.OnDRUG_COUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_COUNTRY = value
				Me.SendPropertyChanged("DRUG_COUNTRY")
				Me.OnDRUG_COUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_IMPNM", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_IMPNM() As String
		Get
			Return Me._DRUG_IMPNM
		End Get
		Set
			If (String.Equals(Me._DRUG_IMPNM, value) = false) Then
				Me.OnDRUG_IMPNMChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_IMPNM = value
				Me.SendPropertyChanged("DRUG_IMPNM")
				Me.OnDRUG_IMPNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DEALER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_DEALER() As String
		Get
			Return Me._DRUG_DEALER
		End Get
		Set
			If (String.Equals(Me._DRUG_DEALER, value) = false) Then
				Me.OnDRUG_DEALERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DEALER = value
				Me.SendPropertyChanged("DRUG_DEALER")
				Me.OnDRUG_DEALERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DIST", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_DIST() As String
		Get
			Return Me._DRUG_DIST
		End Get
		Set
			If (String.Equals(Me._DRUG_DIST, value) = false) Then
				Me.OnDRUG_DISTChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DIST = value
				Me.SendPropertyChanged("DRUG_DIST")
				Me.OnDRUG_DISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DIST_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_DIST_OTHER() As String
		Get
			Return Me._DRUG_DIST_OTHER
		End Get
		Set
			If (String.Equals(Me._DRUG_DIST_OTHER, value) = false) Then
				Me.OnDRUG_DIST_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DIST_OTHER = value
				Me.SendPropertyChanged("DRUG_DIST_OTHER")
				Me.OnDRUG_DIST_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_STCONDI", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_STCONDI() As String
		Get
			Return Me._DRUG_STCONDI
		End Get
		Set
			If (String.Equals(Me._DRUG_STCONDI, value) = false) Then
				Me.OnDRUG_STCONDIChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_STCONDI = value
				Me.SendPropertyChanged("DRUG_STCONDI")
				Me.OnDRUG_STCONDIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_STCONDI_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_STCONDI_OTHER() As String
		Get
			Return Me._DRUG_STCONDI_OTHER
		End Get
		Set
			If (String.Equals(Me._DRUG_STCONDI_OTHER, value) = false) Then
				Me.OnDRUG_STCONDI_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_STCONDI_OTHER = value
				Me.SendPropertyChanged("DRUG_STCONDI_OTHER")
				Me.OnDRUG_STCONDI_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_DETECT", DbType:="Date")>  _
	Public Property DATE_DETECT() As System.Nullable(Of Date)
		Get
			Return Me._DATE_DETECT
		End Get
		Set
			If (Me._DATE_DETECT.Equals(value) = false) Then
				Me.OnDATE_DETECTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_DETECT = value
				Me.SendPropertyChanged("DATE_DETECT")
				Me.OnDATE_DETECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_DETECT_TH", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_DETECT_TH() As String
		Get
			Return Me._DATE_DETECT_TH
		End Get
		Set
			If (String.Equals(Me._DATE_DETECT_TH, value) = false) Then
				Me.OnDATE_DETECT_THChanging(value)
				Me.SendPropertyChanging
				Me._DATE_DETECT_TH = value
				Me.SendPropertyChanged("DATE_DETECT_TH")
				Me.OnDATE_DETECT_THChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_FIND_CHK", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_FIND_CHK() As String
		Get
			Return Me._DATE_FIND_CHK
		End Get
		Set
			If (String.Equals(Me._DATE_FIND_CHK, value) = false) Then
				Me.OnDATE_FIND_CHKChanging(value)
				Me.SendPropertyChanging
				Me._DATE_FIND_CHK = value
				Me.SendPropertyChanged("DATE_FIND_CHK")
				Me.OnDATE_FIND_CHKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_FIND_CHK_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_FIND_CHK_OTHER() As String
		Get
			Return Me._DATE_FIND_CHK_OTHER
		End Get
		Set
			If (String.Equals(Me._DATE_FIND_CHK_OTHER, value) = false) Then
				Me.OnDATE_FIND_CHK_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DATE_FIND_CHK_OTHER = value
				Me.SendPropertyChanged("DATE_FIND_CHK_OTHER")
				Me.OnDATE_FIND_CHK_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPLAIN_BY", DbType:="NVarChar(MAX)")>  _
	Public Property COMPLAIN_BY() As String
		Get
			Return Me._COMPLAIN_BY
		End Get
		Set
			If (String.Equals(Me._COMPLAIN_BY, value) = false) Then
				Me.OnCOMPLAIN_BYChanging(value)
				Me.SendPropertyChanging
				Me._COMPLAIN_BY = value
				Me.SendPropertyChanged("COMPLAIN_BY")
				Me.OnCOMPLAIN_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION", DbType:="NVarChar(50)")>  _
	Public Property POSITION() As String
		Get
			Return Me._POSITION
		End Get
		Set
			If (String.Equals(Me._POSITION, value) = false) Then
				Me.OnPOSITIONChanging(value)
				Me.SendPropertyChanging
				Me._POSITION = value
				Me.SendPropertyChanged("POSITION")
				Me.OnPOSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULL_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property FULL_ADDR() As String
		Get
			Return Me._FULL_ADDR
		End Get
		Set
			If (String.Equals(Me._FULL_ADDR, value) = false) Then
				Me.OnFULL_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._FULL_ADDR = value
				Me.SendPropertyChanged("FULL_ADDR")
				Me.OnFULL_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL1", DbType:="NVarChar(MAX)")>  _
	Public Property TEL1() As String
		Get
			Return Me._TEL1
		End Get
		Set
			If (String.Equals(Me._TEL1, value) = false) Then
				Me.OnTEL1Changing(value)
				Me.SendPropertyChanging
				Me._TEL1 = value
				Me.SendPropertyChanged("TEL1")
				Me.OnTEL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINE_ID", DbType:="NVarChar(MAX)")>  _
	Public Property LINE_ID() As String
		Get
			Return Me._LINE_ID
		End Get
		Set
			If (String.Equals(Me._LINE_ID, value) = false) Then
				Me.OnLINE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LINE_ID = value
				Me.SendPropertyChanged("LINE_ID")
				Me.OnLINE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY_TH", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY_TH() As String
		Get
			Return Me._CREATE_BY_TH
		End Get
		Set
			If (String.Equals(Me._CREATE_BY_TH, value) = false) Then
				Me.OnCREATE_BY_THChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY_TH = value
				Me.SendPropertyChanged("CREATE_BY_TH")
				Me.OnCREATE_BY_THChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL1", DbType:="Int")>  _
	Public Property PHYSICAL1() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL1
		End Get
		Set
			If (Me._PHYSICAL1.Equals(value) = false) Then
				Me.OnPHYSICAL1Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL1 = value
				Me.SendPropertyChanged("PHYSICAL1")
				Me.OnPHYSICAL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL2", DbType:="Int")>  _
	Public Property PHYSICAL2() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL2
		End Get
		Set
			If (Me._PHYSICAL2.Equals(value) = false) Then
				Me.OnPHYSICAL2Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL2 = value
				Me.SendPropertyChanged("PHYSICAL2")
				Me.OnPHYSICAL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL3", DbType:="Int")>  _
	Public Property PHYSICAL3() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL3
		End Get
		Set
			If (Me._PHYSICAL3.Equals(value) = false) Then
				Me.OnPHYSICAL3Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL3 = value
				Me.SendPropertyChanged("PHYSICAL3")
				Me.OnPHYSICAL3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL4", DbType:="Int")>  _
	Public Property PHYSICAL4() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL4
		End Get
		Set
			If (Me._PHYSICAL4.Equals(value) = false) Then
				Me.OnPHYSICAL4Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL4 = value
				Me.SendPropertyChanged("PHYSICAL4")
				Me.OnPHYSICAL4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL5", DbType:="Int")>  _
	Public Property PHYSICAL5() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL5
		End Get
		Set
			If (Me._PHYSICAL5.Equals(value) = false) Then
				Me.OnPHYSICAL5Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL5 = value
				Me.SendPropertyChanged("PHYSICAL5")
				Me.OnPHYSICAL5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL6", DbType:="Int")>  _
	Public Property PHYSICAL6() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL6
		End Get
		Set
			If (Me._PHYSICAL6.Equals(value) = false) Then
				Me.OnPHYSICAL6Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL6 = value
				Me.SendPropertyChanged("PHYSICAL6")
				Me.OnPHYSICAL6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL7", DbType:="Int")>  _
	Public Property PHYSICAL7() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL7
		End Get
		Set
			If (Me._PHYSICAL7.Equals(value) = false) Then
				Me.OnPHYSICAL7Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL7 = value
				Me.SendPropertyChanged("PHYSICAL7")
				Me.OnPHYSICAL7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL8", DbType:="Int")>  _
	Public Property PHYSICAL8() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL8
		End Get
		Set
			If (Me._PHYSICAL8.Equals(value) = false) Then
				Me.OnPHYSICAL8Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL8 = value
				Me.SendPropertyChanged("PHYSICAL8")
				Me.OnPHYSICAL8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL9", DbType:="Int")>  _
	Public Property PHYSICAL9() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL9
		End Get
		Set
			If (Me._PHYSICAL9.Equals(value) = false) Then
				Me.OnPHYSICAL9Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL9 = value
				Me.SendPropertyChanged("PHYSICAL9")
				Me.OnPHYSICAL9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL10", DbType:="Int")>  _
	Public Property PHYSICAL10() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL10
		End Get
		Set
			If (Me._PHYSICAL10.Equals(value) = false) Then
				Me.OnPHYSICAL10Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL10 = value
				Me.SendPropertyChanged("PHYSICAL10")
				Me.OnPHYSICAL10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL11", DbType:="Int")>  _
	Public Property PHYSICAL11() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL11
		End Get
		Set
			If (Me._PHYSICAL11.Equals(value) = false) Then
				Me.OnPHYSICAL11Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL11 = value
				Me.SendPropertyChanged("PHYSICAL11")
				Me.OnPHYSICAL11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL12", DbType:="Int")>  _
	Public Property PHYSICAL12() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL12
		End Get
		Set
			If (Me._PHYSICAL12.Equals(value) = false) Then
				Me.OnPHYSICAL12Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL12 = value
				Me.SendPropertyChanged("PHYSICAL12")
				Me.OnPHYSICAL12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL13", DbType:="Int")>  _
	Public Property PHYSICAL13() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL13
		End Get
		Set
			If (Me._PHYSICAL13.Equals(value) = false) Then
				Me.OnPHYSICAL13Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL13 = value
				Me.SendPropertyChanged("PHYSICAL13")
				Me.OnPHYSICAL13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL13_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property PHYSICAL13_OTHER() As String
		Get
			Return Me._PHYSICAL13_OTHER
		End Get
		Set
			If (String.Equals(Me._PHYSICAL13_OTHER, value) = false) Then
				Me.OnPHYSICAL13_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._PHYSICAL13_OTHER = value
				Me.SendPropertyChanged("PHYSICAL13_OTHER")
				Me.OnPHYSICAL13_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINER", DbType:="Int")>  _
	Public Property CONTRAINER() As System.Nullable(Of Integer)
		Get
			Return Me._CONTRAINER
		End Get
		Set
			If (Me._CONTRAINER.Equals(value) = false) Then
				Me.OnCONTRAINERChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINER = value
				Me.SendPropertyChanged("CONTRAINER")
				Me.OnCONTRAINERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINER_TEXT", DbType:="NVarChar(MAX)")>  _
	Public Property CONTRAINER_TEXT() As String
		Get
			Return Me._CONTRAINER_TEXT
		End Get
		Set
			If (String.Equals(Me._CONTRAINER_TEXT, value) = false) Then
				Me.OnCONTRAINER_TEXTChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINER_TEXT = value
				Me.SendPropertyChanged("CONTRAINER_TEXT")
				Me.OnCONTRAINER_TEXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL", DbType:="Int")>  _
	Public Property LABEL() As System.Nullable(Of Integer)
		Get
			Return Me._LABEL
		End Get
		Set
			If (Me._LABEL.Equals(value) = false) Then
				Me.OnLABELChanging(value)
				Me.SendPropertyChanging
				Me._LABEL = value
				Me.SendPropertyChanged("LABEL")
				Me.OnLABELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL_INPUT1", DbType:="NVarChar(MAX)")>  _
	Public Property LABEL_INPUT1() As String
		Get
			Return Me._LABEL_INPUT1
		End Get
		Set
			If (String.Equals(Me._LABEL_INPUT1, value) = false) Then
				Me.OnLABEL_INPUT1Changing(value)
				Me.SendPropertyChanging
				Me._LABEL_INPUT1 = value
				Me.SendPropertyChanged("LABEL_INPUT1")
				Me.OnLABEL_INPUT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL_INPUT2", DbType:="NVarChar(MAX)")>  _
	Public Property LABEL_INPUT2() As String
		Get
			Return Me._LABEL_INPUT2
		End Get
		Set
			If (String.Equals(Me._LABEL_INPUT2, value) = false) Then
				Me.OnLABEL_INPUT2Changing(value)
				Me.SendPropertyChanging
				Me._LABEL_INPUT2 = value
				Me.SendPropertyChanged("LABEL_INPUT2")
				Me.OnLABEL_INPUT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL_INPUT3", DbType:="NVarChar(MAX)")>  _
	Public Property LABEL_INPUT3() As String
		Get
			Return Me._LABEL_INPUT3
		End Get
		Set
			If (String.Equals(Me._LABEL_INPUT3, value) = false) Then
				Me.OnLABEL_INPUT3Changing(value)
				Me.SendPropertyChanging
				Me._LABEL_INPUT3 = value
				Me.SendPropertyChanged("LABEL_INPUT3")
				Me.OnLABEL_INPUT3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM", DbType:="Int")>  _
	Public Property INFORM() As System.Nullable(Of Integer)
		Get
			Return Me._INFORM
		End Get
		Set
			If (Me._INFORM.Equals(value) = false) Then
				Me.OnINFORMChanging(value)
				Me.SendPropertyChanging
				Me._INFORM = value
				Me.SendPropertyChanged("INFORM")
				Me.OnINFORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYSIS", DbType:="Int")>  _
	Public Property ANALYSIS() As System.Nullable(Of Integer)
		Get
			Return Me._ANALYSIS
		End Get
		Set
			If (Me._ANALYSIS.Equals(value) = false) Then
				Me.OnANALYSISChanging(value)
				Me.SendPropertyChanging
				Me._ANALYSIS = value
				Me.SendPropertyChanged("ANALYSIS")
				Me.OnANALYSISChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYSIS_INPUT1", DbType:="NVarChar(MAX)")>  _
	Public Property ANALYSIS_INPUT1() As String
		Get
			Return Me._ANALYSIS_INPUT1
		End Get
		Set
			If (String.Equals(Me._ANALYSIS_INPUT1, value) = false) Then
				Me.OnANALYSIS_INPUT1Changing(value)
				Me.SendPropertyChanging
				Me._ANALYSIS_INPUT1 = value
				Me.SendPropertyChanged("ANALYSIS_INPUT1")
				Me.OnANALYSIS_INPUT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYSIS_INPUT2", DbType:="NVarChar(MAX)")>  _
	Public Property ANALYSIS_INPUT2() As String
		Get
			Return Me._ANALYSIS_INPUT2
		End Get
		Set
			If (String.Equals(Me._ANALYSIS_INPUT2, value) = false) Then
				Me.OnANALYSIS_INPUT2Changing(value)
				Me.SendPropertyChanging
				Me._ANALYSIS_INPUT2 = value
				Me.SendPropertyChanged("ANALYSIS_INPUT2")
				Me.OnANALYSIS_INPUT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYSIS_INPUT3", DbType:="NVarChar(MAX)")>  _
	Public Property ANALYSIS_INPUT3() As String
		Get
			Return Me._ANALYSIS_INPUT3
		End Get
		Set
			If (String.Equals(Me._ANALYSIS_INPUT3, value) = false) Then
				Me.OnANALYSIS_INPUT3Changing(value)
				Me.SendPropertyChanging
				Me._ANALYSIS_INPUT3 = value
				Me.SendPropertyChanged("ANALYSIS_INPUT3")
				Me.OnANALYSIS_INPUT3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_PLOBLEM", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_PLOBLEM() As String
		Get
			Return Me._OTHER_PLOBLEM
		End Get
		Set
			If (String.Equals(Me._OTHER_PLOBLEM, value) = false) Then
				Me.OnOTHER_PLOBLEMChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_PLOBLEM = value
				Me.SendPropertyChanged("OTHER_PLOBLEM")
				Me.OnOTHER_PLOBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_PLOBLEM", DbType:="NVarChar(MAX)")>  _
	Public Property EX_PLOBLEM() As String
		Get
			Return Me._EX_PLOBLEM
		End Get
		Set
			If (String.Equals(Me._EX_PLOBLEM, value) = false) Then
				Me.OnEX_PLOBLEMChanging(value)
				Me.SendPropertyChanging
				Me._EX_PLOBLEM = value
				Me.SendPropertyChanged("EX_PLOBLEM")
				Me.OnEX_PLOBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_PLOBLEM_TEXT", DbType:="NVarChar(MAX)")>  _
	Public Property EX_PLOBLEM_TEXT() As String
		Get
			Return Me._EX_PLOBLEM_TEXT
		End Get
		Set
			If (String.Equals(Me._EX_PLOBLEM_TEXT, value) = false) Then
				Me.OnEX_PLOBLEM_TEXTChanging(value)
				Me.SendPropertyChanging
				Me._EX_PLOBLEM_TEXT = value
				Me.SendPropertyChanged("EX_PLOBLEM_TEXT")
				Me.OnEX_PLOBLEM_TEXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property EX_DRUG() As String
		Get
			Return Me._EX_DRUG
		End Get
		Set
			If (String.Equals(Me._EX_DRUG, value) = false) Then
				Me.OnEX_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._EX_DRUG = value
				Me.SendPropertyChanged("EX_DRUG")
				Me.OnEX_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_PIC", DbType:="NVarChar(MAX)")>  _
	Public Property EX_PIC() As String
		Get
			Return Me._EX_PIC
		End Get
		Set
			If (String.Equals(Me._EX_PIC, value) = false) Then
				Me.OnEX_PICChanging(value)
				Me.SendPropertyChanging
				Me._EX_PIC = value
				Me.SendPropertyChanged("EX_PIC")
				Me.OnEX_PICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property INFORM_NAME() As String
		Get
			Return Me._INFORM_NAME
		End Get
		Set
			If (String.Equals(Me._INFORM_NAME, value) = false) Then
				Me.OnINFORM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_NAME = value
				Me.SendPropertyChanged("INFORM_NAME")
				Me.OnINFORM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_TEL", DbType:="NVarChar(50)")>  _
	Public Property INFORM_TEL() As String
		Get
			Return Me._INFORM_TEL
		End Get
		Set
			If (String.Equals(Me._INFORM_TEL, value) = false) Then
				Me.OnINFORM_TELChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_TEL = value
				Me.SendPropertyChanged("INFORM_TEL")
				Me.OnINFORM_TELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_TEL1", DbType:="NVarChar(50)")>  _
	Public Property INFORM_TEL1() As String
		Get
			Return Me._INFORM_TEL1
		End Get
		Set
			If (String.Equals(Me._INFORM_TEL1, value) = false) Then
				Me.OnINFORM_TEL1Changing(value)
				Me.SendPropertyChanging
				Me._INFORM_TEL1 = value
				Me.SendPropertyChanged("INFORM_TEL1")
				Me.OnINFORM_TEL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property INFORM_EMAIL() As String
		Get
			Return Me._INFORM_EMAIL
		End Get
		Set
			If (String.Equals(Me._INFORM_EMAIL, value) = false) Then
				Me.OnINFORM_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_EMAIL = value
				Me.SendPropertyChanged("INFORM_EMAIL")
				Me.OnINFORM_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRE_ACTION", DbType:="NVarChar(50)")>  _
	Public Property PRE_ACTION() As String
		Get
			Return Me._PRE_ACTION
		End Get
		Set
			If (String.Equals(Me._PRE_ACTION, value) = false) Then
				Me.OnPRE_ACTIONChanging(value)
				Me.SendPropertyChanging
				Me._PRE_ACTION = value
				Me.SendPropertyChanged("PRE_ACTION")
				Me.OnPRE_ACTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="Date")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(50)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_ID", DbType:="NVarChar(50)")>  _
	Public Property SYSTEM_ID() As String
		Get
			Return Me._SYSTEM_ID
		End Get
		Set
			If (String.Equals(Me._SYSTEM_ID, value) = false) Then
				Me.OnSYSTEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_ID = value
				Me.SendPropertyChanged("SYSTEM_ID")
				Me.OnSYSTEM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(50)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOURCH", DbType:="NVarChar(MAX)")>  _
	Public Property SOURCH() As String
		Get
			Return Me._SOURCH
		End Get
		Set
			If (String.Equals(Me._SOURCH, value) = false) Then
				Me.OnSOURCHChanging(value)
				Me.SendPropertyChanging
				Me._SOURCH = value
				Me.SendPropertyChanged("SOURCH")
				Me.OnSOURCHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOURCH_ID", DbType:="NVarChar(50)")>  _
	Public Property SOURCH_ID() As String
		Get
			Return Me._SOURCH_ID
		End Get
		Set
			If (String.Equals(Me._SOURCH_ID, value) = false) Then
				Me.OnSOURCH_IDChanging(value)
				Me.SendPropertyChanging
				Me._SOURCH_ID = value
				Me.SendPropertyChanged("SOURCH_ID")
				Me.OnSOURCH_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOT_CHK", DbType:="NVarChar(50)")>  _
	Public Property LOT_CHK() As String
		Get
			Return Me._LOT_CHK
		End Get
		Set
			If (String.Equals(Me._LOT_CHK, value) = false) Then
				Me.OnLOT_CHKChanging(value)
				Me.SendPropertyChanging
				Me._LOT_CHK = value
				Me.SendPropertyChanged("LOT_CHK")
				Me.OnLOT_CHKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECALL_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property RECALL_STATUS() As String
		Get
			Return Me._RECALL_STATUS
		End Get
		Set
			If (String.Equals(Me._RECALL_STATUS, value) = false) Then
				Me.OnRECALL_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._RECALL_STATUS = value
				Me.SendPropertyChanged("RECALL_STATUS")
				Me.OnRECALL_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_STATUS", DbType:="NVarChar(50)")>  _
	Public Property COLOR_STATUS() As String
		Get
			Return Me._COLOR_STATUS
		End Get
		Set
			If (String.Equals(Me._COLOR_STATUS, value) = false) Then
				Me.OnCOLOR_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._COLOR_STATUS = value
				Me.SendPropertyChanged("COLOR_STATUS")
				Me.OnCOLOR_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="NVarChar(50)")>  _
	Public Property STATUS_ID() As String
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (String.Equals(Me._STATUS_ID, value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="Date")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COMPLAIN_MAS_RECHECK")>  _
Partial Public Class COMPLAIN_MAS_RECHECK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _PATH_XML As String
	
	Private _PATH_PDF As String
	
	Private _DRUG_NM As String
	
	Private _DRUG_NMM As String
	
	Private _DRUG_FORMAT As String
	
	Private _DRUG_FORMAT_OTHER As String
	
	Private _DRUG_CRITICON As String
	
	Private _DRUG_TYPE_CONT As String
	
	Private _DRUG_REGISTER As String
	
	Private _DRUG_MANUF As String
	
	Private _DRUG_COUNTRY As String
	
	Private _DRUG_IMPNM As String
	
	Private _DRUG_DEALER As String
	
	Private _DRUG_DIST As String
	
	Private _DRUG_DIST_OTHER As String
	
	Private _DRUG_STCONDI As String
	
	Private _DRUG_STCONDI_OTHER As String
	
	Private _DATE_DETECT As System.Nullable(Of Date)
	
	Private _DATE_DETECT_TH As String
	
	Private _DATE_FIND_CHK As String
	
	Private _DATE_FIND_CHK_OTHER As String
	
	Private _COMPLAIN_BY As String
	
	Private _POSITION As String
	
	Private _DEPARTMENT As String
	
	Private _FULL_ADDR As String
	
	Private _TEL As String
	
	Private _TEL1 As String
	
	Private _EMAIL As String
	
	Private _LINE_ID As String
	
	Private _STATUS As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _CREATE_BY_TH As String
	
	Private _TR_ID As String
	
	Private _PHYSICAL1 As System.Nullable(Of Integer)
	
	Private _PHYSICAL2 As System.Nullable(Of Integer)
	
	Private _PHYSICAL3 As System.Nullable(Of Integer)
	
	Private _PHYSICAL4 As System.Nullable(Of Integer)
	
	Private _PHYSICAL5 As System.Nullable(Of Integer)
	
	Private _PHYSICAL6 As System.Nullable(Of Integer)
	
	Private _PHYSICAL7 As System.Nullable(Of Integer)
	
	Private _PHYSICAL8 As System.Nullable(Of Integer)
	
	Private _PHYSICAL9 As System.Nullable(Of Integer)
	
	Private _PHYSICAL10 As System.Nullable(Of Integer)
	
	Private _PHYSICAL11 As System.Nullable(Of Integer)
	
	Private _PHYSICAL12 As System.Nullable(Of Integer)
	
	Private _PHYSICAL13 As System.Nullable(Of Integer)
	
	Private _PHYSICAL13_OTHER As String
	
	Private _CONTRAINER As System.Nullable(Of Integer)
	
	Private _CONTRAINER_TEXT As String
	
	Private _LABEL As System.Nullable(Of Integer)
	
	Private _LABEL_INPUT1 As String
	
	Private _LABEL_INPUT2 As String
	
	Private _LABEL_INPUT3 As String
	
	Private _INFORM As System.Nullable(Of Integer)
	
	Private _ANALYSIS As System.Nullable(Of Integer)
	
	Private _ANALYSIS_INPUT1 As String
	
	Private _ANALYSIS_INPUT2 As String
	
	Private _ANALYSIS_INPUT3 As String
	
	Private _OTHER_PLOBLEM As String
	
	Private _EX_PLOBLEM As String
	
	Private _EX_PLOBLEM_TEXT As String
	
	Private _EX_DRUG As String
	
	Private _EX_PIC As String
	
	Private _INFORM_NAME As String
	
	Private _INFORM_TEL As String
	
	Private _INFORM_TEL1 As String
	
	Private _INFORM_EMAIL As String
	
	Private _PRE_ACTION As String
	
	Private _CITIZEN_ID As String
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _REMARK As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnPATH_XMLChanging(value As String)
    End Sub
    Partial Private Sub OnPATH_XMLChanged()
    End Sub
    Partial Private Sub OnPATH_PDFChanging(value As String)
    End Sub
    Partial Private Sub OnPATH_PDFChanged()
    End Sub
    Partial Private Sub OnDRUG_NMChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NMChanged()
    End Sub
    Partial Private Sub OnDRUG_NMMChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NMMChanged()
    End Sub
    Partial Private Sub OnDRUG_FORMATChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_FORMATChanged()
    End Sub
    Partial Private Sub OnDRUG_FORMAT_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_FORMAT_OTHERChanged()
    End Sub
    Partial Private Sub OnDRUG_CRITICONChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_CRITICONChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPE_CONTChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_TYPE_CONTChanged()
    End Sub
    Partial Private Sub OnDRUG_REGISTERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_REGISTERChanged()
    End Sub
    Partial Private Sub OnDRUG_MANUFChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_MANUFChanged()
    End Sub
    Partial Private Sub OnDRUG_COUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_COUNTRYChanged()
    End Sub
    Partial Private Sub OnDRUG_IMPNMChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_IMPNMChanged()
    End Sub
    Partial Private Sub OnDRUG_DEALERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_DEALERChanged()
    End Sub
    Partial Private Sub OnDRUG_DISTChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_DISTChanged()
    End Sub
    Partial Private Sub OnDRUG_DIST_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_DIST_OTHERChanged()
    End Sub
    Partial Private Sub OnDRUG_STCONDIChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_STCONDIChanged()
    End Sub
    Partial Private Sub OnDRUG_STCONDI_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_STCONDI_OTHERChanged()
    End Sub
    Partial Private Sub OnDATE_DETECTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_DETECTChanged()
    End Sub
    Partial Private Sub OnDATE_DETECT_THChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_DETECT_THChanged()
    End Sub
    Partial Private Sub OnDATE_FIND_CHKChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_FIND_CHKChanged()
    End Sub
    Partial Private Sub OnDATE_FIND_CHK_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_FIND_CHK_OTHERChanged()
    End Sub
    Partial Private Sub OnCOMPLAIN_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPLAIN_BYChanged()
    End Sub
    Partial Private Sub OnPOSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnFULL_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnFULL_ADDRChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnTEL1Changing(value As String)
    End Sub
    Partial Private Sub OnTEL1Changed()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnLINE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnLINE_IDChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnCREATE_BY_THChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BY_THChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnPHYSICAL1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL1Changed()
    End Sub
    Partial Private Sub OnPHYSICAL2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL2Changed()
    End Sub
    Partial Private Sub OnPHYSICAL3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL3Changed()
    End Sub
    Partial Private Sub OnPHYSICAL4Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL4Changed()
    End Sub
    Partial Private Sub OnPHYSICAL5Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL5Changed()
    End Sub
    Partial Private Sub OnPHYSICAL6Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL6Changed()
    End Sub
    Partial Private Sub OnPHYSICAL7Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL7Changed()
    End Sub
    Partial Private Sub OnPHYSICAL8Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL8Changed()
    End Sub
    Partial Private Sub OnPHYSICAL9Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL9Changed()
    End Sub
    Partial Private Sub OnPHYSICAL10Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL10Changed()
    End Sub
    Partial Private Sub OnPHYSICAL11Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL11Changed()
    End Sub
    Partial Private Sub OnPHYSICAL12Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL12Changed()
    End Sub
    Partial Private Sub OnPHYSICAL13Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSICAL13Changed()
    End Sub
    Partial Private Sub OnPHYSICAL13_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnPHYSICAL13_OTHERChanged()
    End Sub
    Partial Private Sub OnCONTRAINERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCONTRAINERChanged()
    End Sub
    Partial Private Sub OnCONTRAINER_TEXTChanging(value As String)
    End Sub
    Partial Private Sub OnCONTRAINER_TEXTChanged()
    End Sub
    Partial Private Sub OnLABELChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABELChanged()
    End Sub
    Partial Private Sub OnLABEL_INPUT1Changing(value As String)
    End Sub
    Partial Private Sub OnLABEL_INPUT1Changed()
    End Sub
    Partial Private Sub OnLABEL_INPUT2Changing(value As String)
    End Sub
    Partial Private Sub OnLABEL_INPUT2Changed()
    End Sub
    Partial Private Sub OnLABEL_INPUT3Changing(value As String)
    End Sub
    Partial Private Sub OnLABEL_INPUT3Changed()
    End Sub
    Partial Private Sub OnINFORMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINFORMChanged()
    End Sub
    Partial Private Sub OnANALYSISChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnANALYSISChanged()
    End Sub
    Partial Private Sub OnANALYSIS_INPUT1Changing(value As String)
    End Sub
    Partial Private Sub OnANALYSIS_INPUT1Changed()
    End Sub
    Partial Private Sub OnANALYSIS_INPUT2Changing(value As String)
    End Sub
    Partial Private Sub OnANALYSIS_INPUT2Changed()
    End Sub
    Partial Private Sub OnANALYSIS_INPUT3Changing(value As String)
    End Sub
    Partial Private Sub OnANALYSIS_INPUT3Changed()
    End Sub
    Partial Private Sub OnOTHER_PLOBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_PLOBLEMChanged()
    End Sub
    Partial Private Sub OnEX_PLOBLEMChanging(value As String)
    End Sub
    Partial Private Sub OnEX_PLOBLEMChanged()
    End Sub
    Partial Private Sub OnEX_PLOBLEM_TEXTChanging(value As String)
    End Sub
    Partial Private Sub OnEX_PLOBLEM_TEXTChanged()
    End Sub
    Partial Private Sub OnEX_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnEX_DRUGChanged()
    End Sub
    Partial Private Sub OnEX_PICChanging(value As String)
    End Sub
    Partial Private Sub OnEX_PICChanged()
    End Sub
    Partial Private Sub OnINFORM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_NAMEChanged()
    End Sub
    Partial Private Sub OnINFORM_TELChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_TELChanged()
    End Sub
    Partial Private Sub OnINFORM_TEL1Changing(value As String)
    End Sub
    Partial Private Sub OnINFORM_TEL1Changed()
    End Sub
    Partial Private Sub OnINFORM_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnINFORM_EMAILChanged()
    End Sub
    Partial Private Sub OnPRE_ACTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPRE_ACTIONChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATH_XML", DbType:="NVarChar(MAX)")>  _
	Public Property PATH_XML() As String
		Get
			Return Me._PATH_XML
		End Get
		Set
			If (String.Equals(Me._PATH_XML, value) = false) Then
				Me.OnPATH_XMLChanging(value)
				Me.SendPropertyChanging
				Me._PATH_XML = value
				Me.SendPropertyChanged("PATH_XML")
				Me.OnPATH_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATH_PDF", DbType:="NVarChar(MAX)")>  _
	Public Property PATH_PDF() As String
		Get
			Return Me._PATH_PDF
		End Get
		Set
			If (String.Equals(Me._PATH_PDF, value) = false) Then
				Me.OnPATH_PDFChanging(value)
				Me.SendPropertyChanging
				Me._PATH_PDF = value
				Me.SendPropertyChanged("PATH_PDF")
				Me.OnPATH_PDFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NM", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NM() As String
		Get
			Return Me._DRUG_NM
		End Get
		Set
			If (String.Equals(Me._DRUG_NM, value) = false) Then
				Me.OnDRUG_NMChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NM = value
				Me.SendPropertyChanged("DRUG_NM")
				Me.OnDRUG_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NMM", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NMM() As String
		Get
			Return Me._DRUG_NMM
		End Get
		Set
			If (String.Equals(Me._DRUG_NMM, value) = false) Then
				Me.OnDRUG_NMMChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NMM = value
				Me.SendPropertyChanged("DRUG_NMM")
				Me.OnDRUG_NMMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_FORMAT", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_FORMAT() As String
		Get
			Return Me._DRUG_FORMAT
		End Get
		Set
			If (String.Equals(Me._DRUG_FORMAT, value) = false) Then
				Me.OnDRUG_FORMATChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_FORMAT = value
				Me.SendPropertyChanged("DRUG_FORMAT")
				Me.OnDRUG_FORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_FORMAT_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_FORMAT_OTHER() As String
		Get
			Return Me._DRUG_FORMAT_OTHER
		End Get
		Set
			If (String.Equals(Me._DRUG_FORMAT_OTHER, value) = false) Then
				Me.OnDRUG_FORMAT_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_FORMAT_OTHER = value
				Me.SendPropertyChanged("DRUG_FORMAT_OTHER")
				Me.OnDRUG_FORMAT_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_CRITICON", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_CRITICON() As String
		Get
			Return Me._DRUG_CRITICON
		End Get
		Set
			If (String.Equals(Me._DRUG_CRITICON, value) = false) Then
				Me.OnDRUG_CRITICONChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_CRITICON = value
				Me.SendPropertyChanged("DRUG_CRITICON")
				Me.OnDRUG_CRITICONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE_CONT", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_TYPE_CONT() As String
		Get
			Return Me._DRUG_TYPE_CONT
		End Get
		Set
			If (String.Equals(Me._DRUG_TYPE_CONT, value) = false) Then
				Me.OnDRUG_TYPE_CONTChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE_CONT = value
				Me.SendPropertyChanged("DRUG_TYPE_CONT")
				Me.OnDRUG_TYPE_CONTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_REGISTER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_REGISTER() As String
		Get
			Return Me._DRUG_REGISTER
		End Get
		Set
			If (String.Equals(Me._DRUG_REGISTER, value) = false) Then
				Me.OnDRUG_REGISTERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_REGISTER = value
				Me.SendPropertyChanged("DRUG_REGISTER")
				Me.OnDRUG_REGISTERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_MANUF", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_MANUF() As String
		Get
			Return Me._DRUG_MANUF
		End Get
		Set
			If (String.Equals(Me._DRUG_MANUF, value) = false) Then
				Me.OnDRUG_MANUFChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_MANUF = value
				Me.SendPropertyChanged("DRUG_MANUF")
				Me.OnDRUG_MANUFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_COUNTRY() As String
		Get
			Return Me._DRUG_COUNTRY
		End Get
		Set
			If (String.Equals(Me._DRUG_COUNTRY, value) = false) Then
				Me.OnDRUG_COUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_COUNTRY = value
				Me.SendPropertyChanged("DRUG_COUNTRY")
				Me.OnDRUG_COUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_IMPNM", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_IMPNM() As String
		Get
			Return Me._DRUG_IMPNM
		End Get
		Set
			If (String.Equals(Me._DRUG_IMPNM, value) = false) Then
				Me.OnDRUG_IMPNMChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_IMPNM = value
				Me.SendPropertyChanged("DRUG_IMPNM")
				Me.OnDRUG_IMPNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DEALER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_DEALER() As String
		Get
			Return Me._DRUG_DEALER
		End Get
		Set
			If (String.Equals(Me._DRUG_DEALER, value) = false) Then
				Me.OnDRUG_DEALERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DEALER = value
				Me.SendPropertyChanged("DRUG_DEALER")
				Me.OnDRUG_DEALERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DIST", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_DIST() As String
		Get
			Return Me._DRUG_DIST
		End Get
		Set
			If (String.Equals(Me._DRUG_DIST, value) = false) Then
				Me.OnDRUG_DISTChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DIST = value
				Me.SendPropertyChanged("DRUG_DIST")
				Me.OnDRUG_DISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DIST_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_DIST_OTHER() As String
		Get
			Return Me._DRUG_DIST_OTHER
		End Get
		Set
			If (String.Equals(Me._DRUG_DIST_OTHER, value) = false) Then
				Me.OnDRUG_DIST_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DIST_OTHER = value
				Me.SendPropertyChanged("DRUG_DIST_OTHER")
				Me.OnDRUG_DIST_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_STCONDI", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_STCONDI() As String
		Get
			Return Me._DRUG_STCONDI
		End Get
		Set
			If (String.Equals(Me._DRUG_STCONDI, value) = false) Then
				Me.OnDRUG_STCONDIChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_STCONDI = value
				Me.SendPropertyChanged("DRUG_STCONDI")
				Me.OnDRUG_STCONDIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_STCONDI_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_STCONDI_OTHER() As String
		Get
			Return Me._DRUG_STCONDI_OTHER
		End Get
		Set
			If (String.Equals(Me._DRUG_STCONDI_OTHER, value) = false) Then
				Me.OnDRUG_STCONDI_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_STCONDI_OTHER = value
				Me.SendPropertyChanged("DRUG_STCONDI_OTHER")
				Me.OnDRUG_STCONDI_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_DETECT", DbType:="Date")>  _
	Public Property DATE_DETECT() As System.Nullable(Of Date)
		Get
			Return Me._DATE_DETECT
		End Get
		Set
			If (Me._DATE_DETECT.Equals(value) = false) Then
				Me.OnDATE_DETECTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_DETECT = value
				Me.SendPropertyChanged("DATE_DETECT")
				Me.OnDATE_DETECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_DETECT_TH", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_DETECT_TH() As String
		Get
			Return Me._DATE_DETECT_TH
		End Get
		Set
			If (String.Equals(Me._DATE_DETECT_TH, value) = false) Then
				Me.OnDATE_DETECT_THChanging(value)
				Me.SendPropertyChanging
				Me._DATE_DETECT_TH = value
				Me.SendPropertyChanged("DATE_DETECT_TH")
				Me.OnDATE_DETECT_THChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_FIND_CHK", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_FIND_CHK() As String
		Get
			Return Me._DATE_FIND_CHK
		End Get
		Set
			If (String.Equals(Me._DATE_FIND_CHK, value) = false) Then
				Me.OnDATE_FIND_CHKChanging(value)
				Me.SendPropertyChanging
				Me._DATE_FIND_CHK = value
				Me.SendPropertyChanged("DATE_FIND_CHK")
				Me.OnDATE_FIND_CHKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_FIND_CHK_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_FIND_CHK_OTHER() As String
		Get
			Return Me._DATE_FIND_CHK_OTHER
		End Get
		Set
			If (String.Equals(Me._DATE_FIND_CHK_OTHER, value) = false) Then
				Me.OnDATE_FIND_CHK_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DATE_FIND_CHK_OTHER = value
				Me.SendPropertyChanged("DATE_FIND_CHK_OTHER")
				Me.OnDATE_FIND_CHK_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPLAIN_BY", DbType:="NVarChar(MAX)")>  _
	Public Property COMPLAIN_BY() As String
		Get
			Return Me._COMPLAIN_BY
		End Get
		Set
			If (String.Equals(Me._COMPLAIN_BY, value) = false) Then
				Me.OnCOMPLAIN_BYChanging(value)
				Me.SendPropertyChanging
				Me._COMPLAIN_BY = value
				Me.SendPropertyChanged("COMPLAIN_BY")
				Me.OnCOMPLAIN_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION", DbType:="NVarChar(50)")>  _
	Public Property POSITION() As String
		Get
			Return Me._POSITION
		End Get
		Set
			If (String.Equals(Me._POSITION, value) = false) Then
				Me.OnPOSITIONChanging(value)
				Me.SendPropertyChanging
				Me._POSITION = value
				Me.SendPropertyChanged("POSITION")
				Me.OnPOSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULL_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property FULL_ADDR() As String
		Get
			Return Me._FULL_ADDR
		End Get
		Set
			If (String.Equals(Me._FULL_ADDR, value) = false) Then
				Me.OnFULL_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._FULL_ADDR = value
				Me.SendPropertyChanged("FULL_ADDR")
				Me.OnFULL_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL1", DbType:="NVarChar(MAX)")>  _
	Public Property TEL1() As String
		Get
			Return Me._TEL1
		End Get
		Set
			If (String.Equals(Me._TEL1, value) = false) Then
				Me.OnTEL1Changing(value)
				Me.SendPropertyChanging
				Me._TEL1 = value
				Me.SendPropertyChanged("TEL1")
				Me.OnTEL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINE_ID", DbType:="NVarChar(MAX)")>  _
	Public Property LINE_ID() As String
		Get
			Return Me._LINE_ID
		End Get
		Set
			If (String.Equals(Me._LINE_ID, value) = false) Then
				Me.OnLINE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LINE_ID = value
				Me.SendPropertyChanged("LINE_ID")
				Me.OnLINE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY_TH", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY_TH() As String
		Get
			Return Me._CREATE_BY_TH
		End Get
		Set
			If (String.Equals(Me._CREATE_BY_TH, value) = false) Then
				Me.OnCREATE_BY_THChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY_TH = value
				Me.SendPropertyChanged("CREATE_BY_TH")
				Me.OnCREATE_BY_THChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL1", DbType:="Int")>  _
	Public Property PHYSICAL1() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL1
		End Get
		Set
			If (Me._PHYSICAL1.Equals(value) = false) Then
				Me.OnPHYSICAL1Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL1 = value
				Me.SendPropertyChanged("PHYSICAL1")
				Me.OnPHYSICAL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL2", DbType:="Int")>  _
	Public Property PHYSICAL2() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL2
		End Get
		Set
			If (Me._PHYSICAL2.Equals(value) = false) Then
				Me.OnPHYSICAL2Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL2 = value
				Me.SendPropertyChanged("PHYSICAL2")
				Me.OnPHYSICAL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL3", DbType:="Int")>  _
	Public Property PHYSICAL3() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL3
		End Get
		Set
			If (Me._PHYSICAL3.Equals(value) = false) Then
				Me.OnPHYSICAL3Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL3 = value
				Me.SendPropertyChanged("PHYSICAL3")
				Me.OnPHYSICAL3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL4", DbType:="Int")>  _
	Public Property PHYSICAL4() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL4
		End Get
		Set
			If (Me._PHYSICAL4.Equals(value) = false) Then
				Me.OnPHYSICAL4Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL4 = value
				Me.SendPropertyChanged("PHYSICAL4")
				Me.OnPHYSICAL4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL5", DbType:="Int")>  _
	Public Property PHYSICAL5() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL5
		End Get
		Set
			If (Me._PHYSICAL5.Equals(value) = false) Then
				Me.OnPHYSICAL5Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL5 = value
				Me.SendPropertyChanged("PHYSICAL5")
				Me.OnPHYSICAL5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL6", DbType:="Int")>  _
	Public Property PHYSICAL6() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL6
		End Get
		Set
			If (Me._PHYSICAL6.Equals(value) = false) Then
				Me.OnPHYSICAL6Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL6 = value
				Me.SendPropertyChanged("PHYSICAL6")
				Me.OnPHYSICAL6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL7", DbType:="Int")>  _
	Public Property PHYSICAL7() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL7
		End Get
		Set
			If (Me._PHYSICAL7.Equals(value) = false) Then
				Me.OnPHYSICAL7Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL7 = value
				Me.SendPropertyChanged("PHYSICAL7")
				Me.OnPHYSICAL7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL8", DbType:="Int")>  _
	Public Property PHYSICAL8() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL8
		End Get
		Set
			If (Me._PHYSICAL8.Equals(value) = false) Then
				Me.OnPHYSICAL8Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL8 = value
				Me.SendPropertyChanged("PHYSICAL8")
				Me.OnPHYSICAL8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL9", DbType:="Int")>  _
	Public Property PHYSICAL9() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL9
		End Get
		Set
			If (Me._PHYSICAL9.Equals(value) = false) Then
				Me.OnPHYSICAL9Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL9 = value
				Me.SendPropertyChanged("PHYSICAL9")
				Me.OnPHYSICAL9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL10", DbType:="Int")>  _
	Public Property PHYSICAL10() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL10
		End Get
		Set
			If (Me._PHYSICAL10.Equals(value) = false) Then
				Me.OnPHYSICAL10Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL10 = value
				Me.SendPropertyChanged("PHYSICAL10")
				Me.OnPHYSICAL10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL11", DbType:="Int")>  _
	Public Property PHYSICAL11() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL11
		End Get
		Set
			If (Me._PHYSICAL11.Equals(value) = false) Then
				Me.OnPHYSICAL11Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL11 = value
				Me.SendPropertyChanged("PHYSICAL11")
				Me.OnPHYSICAL11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL12", DbType:="Int")>  _
	Public Property PHYSICAL12() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL12
		End Get
		Set
			If (Me._PHYSICAL12.Equals(value) = false) Then
				Me.OnPHYSICAL12Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL12 = value
				Me.SendPropertyChanged("PHYSICAL12")
				Me.OnPHYSICAL12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL13", DbType:="Int")>  _
	Public Property PHYSICAL13() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSICAL13
		End Get
		Set
			If (Me._PHYSICAL13.Equals(value) = false) Then
				Me.OnPHYSICAL13Changing(value)
				Me.SendPropertyChanging
				Me._PHYSICAL13 = value
				Me.SendPropertyChanged("PHYSICAL13")
				Me.OnPHYSICAL13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSICAL13_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property PHYSICAL13_OTHER() As String
		Get
			Return Me._PHYSICAL13_OTHER
		End Get
		Set
			If (String.Equals(Me._PHYSICAL13_OTHER, value) = false) Then
				Me.OnPHYSICAL13_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._PHYSICAL13_OTHER = value
				Me.SendPropertyChanged("PHYSICAL13_OTHER")
				Me.OnPHYSICAL13_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINER", DbType:="Int")>  _
	Public Property CONTRAINER() As System.Nullable(Of Integer)
		Get
			Return Me._CONTRAINER
		End Get
		Set
			If (Me._CONTRAINER.Equals(value) = false) Then
				Me.OnCONTRAINERChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINER = value
				Me.SendPropertyChanged("CONTRAINER")
				Me.OnCONTRAINERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINER_TEXT", DbType:="NVarChar(MAX)")>  _
	Public Property CONTRAINER_TEXT() As String
		Get
			Return Me._CONTRAINER_TEXT
		End Get
		Set
			If (String.Equals(Me._CONTRAINER_TEXT, value) = false) Then
				Me.OnCONTRAINER_TEXTChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINER_TEXT = value
				Me.SendPropertyChanged("CONTRAINER_TEXT")
				Me.OnCONTRAINER_TEXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL", DbType:="Int")>  _
	Public Property LABEL() As System.Nullable(Of Integer)
		Get
			Return Me._LABEL
		End Get
		Set
			If (Me._LABEL.Equals(value) = false) Then
				Me.OnLABELChanging(value)
				Me.SendPropertyChanging
				Me._LABEL = value
				Me.SendPropertyChanged("LABEL")
				Me.OnLABELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL_INPUT1", DbType:="NVarChar(MAX)")>  _
	Public Property LABEL_INPUT1() As String
		Get
			Return Me._LABEL_INPUT1
		End Get
		Set
			If (String.Equals(Me._LABEL_INPUT1, value) = false) Then
				Me.OnLABEL_INPUT1Changing(value)
				Me.SendPropertyChanging
				Me._LABEL_INPUT1 = value
				Me.SendPropertyChanged("LABEL_INPUT1")
				Me.OnLABEL_INPUT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL_INPUT2", DbType:="NVarChar(MAX)")>  _
	Public Property LABEL_INPUT2() As String
		Get
			Return Me._LABEL_INPUT2
		End Get
		Set
			If (String.Equals(Me._LABEL_INPUT2, value) = false) Then
				Me.OnLABEL_INPUT2Changing(value)
				Me.SendPropertyChanging
				Me._LABEL_INPUT2 = value
				Me.SendPropertyChanged("LABEL_INPUT2")
				Me.OnLABEL_INPUT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL_INPUT3", DbType:="NVarChar(MAX)")>  _
	Public Property LABEL_INPUT3() As String
		Get
			Return Me._LABEL_INPUT3
		End Get
		Set
			If (String.Equals(Me._LABEL_INPUT3, value) = false) Then
				Me.OnLABEL_INPUT3Changing(value)
				Me.SendPropertyChanging
				Me._LABEL_INPUT3 = value
				Me.SendPropertyChanged("LABEL_INPUT3")
				Me.OnLABEL_INPUT3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM", DbType:="Int")>  _
	Public Property INFORM() As System.Nullable(Of Integer)
		Get
			Return Me._INFORM
		End Get
		Set
			If (Me._INFORM.Equals(value) = false) Then
				Me.OnINFORMChanging(value)
				Me.SendPropertyChanging
				Me._INFORM = value
				Me.SendPropertyChanged("INFORM")
				Me.OnINFORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYSIS", DbType:="Int")>  _
	Public Property ANALYSIS() As System.Nullable(Of Integer)
		Get
			Return Me._ANALYSIS
		End Get
		Set
			If (Me._ANALYSIS.Equals(value) = false) Then
				Me.OnANALYSISChanging(value)
				Me.SendPropertyChanging
				Me._ANALYSIS = value
				Me.SendPropertyChanged("ANALYSIS")
				Me.OnANALYSISChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYSIS_INPUT1", DbType:="NVarChar(MAX)")>  _
	Public Property ANALYSIS_INPUT1() As String
		Get
			Return Me._ANALYSIS_INPUT1
		End Get
		Set
			If (String.Equals(Me._ANALYSIS_INPUT1, value) = false) Then
				Me.OnANALYSIS_INPUT1Changing(value)
				Me.SendPropertyChanging
				Me._ANALYSIS_INPUT1 = value
				Me.SendPropertyChanged("ANALYSIS_INPUT1")
				Me.OnANALYSIS_INPUT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYSIS_INPUT2", DbType:="NVarChar(MAX)")>  _
	Public Property ANALYSIS_INPUT2() As String
		Get
			Return Me._ANALYSIS_INPUT2
		End Get
		Set
			If (String.Equals(Me._ANALYSIS_INPUT2, value) = false) Then
				Me.OnANALYSIS_INPUT2Changing(value)
				Me.SendPropertyChanging
				Me._ANALYSIS_INPUT2 = value
				Me.SendPropertyChanged("ANALYSIS_INPUT2")
				Me.OnANALYSIS_INPUT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYSIS_INPUT3", DbType:="NVarChar(MAX)")>  _
	Public Property ANALYSIS_INPUT3() As String
		Get
			Return Me._ANALYSIS_INPUT3
		End Get
		Set
			If (String.Equals(Me._ANALYSIS_INPUT3, value) = false) Then
				Me.OnANALYSIS_INPUT3Changing(value)
				Me.SendPropertyChanging
				Me._ANALYSIS_INPUT3 = value
				Me.SendPropertyChanged("ANALYSIS_INPUT3")
				Me.OnANALYSIS_INPUT3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_PLOBLEM", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_PLOBLEM() As String
		Get
			Return Me._OTHER_PLOBLEM
		End Get
		Set
			If (String.Equals(Me._OTHER_PLOBLEM, value) = false) Then
				Me.OnOTHER_PLOBLEMChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_PLOBLEM = value
				Me.SendPropertyChanged("OTHER_PLOBLEM")
				Me.OnOTHER_PLOBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_PLOBLEM", DbType:="NVarChar(MAX)")>  _
	Public Property EX_PLOBLEM() As String
		Get
			Return Me._EX_PLOBLEM
		End Get
		Set
			If (String.Equals(Me._EX_PLOBLEM, value) = false) Then
				Me.OnEX_PLOBLEMChanging(value)
				Me.SendPropertyChanging
				Me._EX_PLOBLEM = value
				Me.SendPropertyChanged("EX_PLOBLEM")
				Me.OnEX_PLOBLEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_PLOBLEM_TEXT", DbType:="NVarChar(MAX)")>  _
	Public Property EX_PLOBLEM_TEXT() As String
		Get
			Return Me._EX_PLOBLEM_TEXT
		End Get
		Set
			If (String.Equals(Me._EX_PLOBLEM_TEXT, value) = false) Then
				Me.OnEX_PLOBLEM_TEXTChanging(value)
				Me.SendPropertyChanging
				Me._EX_PLOBLEM_TEXT = value
				Me.SendPropertyChanged("EX_PLOBLEM_TEXT")
				Me.OnEX_PLOBLEM_TEXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property EX_DRUG() As String
		Get
			Return Me._EX_DRUG
		End Get
		Set
			If (String.Equals(Me._EX_DRUG, value) = false) Then
				Me.OnEX_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._EX_DRUG = value
				Me.SendPropertyChanged("EX_DRUG")
				Me.OnEX_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_PIC", DbType:="NVarChar(MAX)")>  _
	Public Property EX_PIC() As String
		Get
			Return Me._EX_PIC
		End Get
		Set
			If (String.Equals(Me._EX_PIC, value) = false) Then
				Me.OnEX_PICChanging(value)
				Me.SendPropertyChanging
				Me._EX_PIC = value
				Me.SendPropertyChanged("EX_PIC")
				Me.OnEX_PICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property INFORM_NAME() As String
		Get
			Return Me._INFORM_NAME
		End Get
		Set
			If (String.Equals(Me._INFORM_NAME, value) = false) Then
				Me.OnINFORM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_NAME = value
				Me.SendPropertyChanged("INFORM_NAME")
				Me.OnINFORM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_TEL", DbType:="NVarChar(50)")>  _
	Public Property INFORM_TEL() As String
		Get
			Return Me._INFORM_TEL
		End Get
		Set
			If (String.Equals(Me._INFORM_TEL, value) = false) Then
				Me.OnINFORM_TELChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_TEL = value
				Me.SendPropertyChanged("INFORM_TEL")
				Me.OnINFORM_TELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_TEL1", DbType:="NVarChar(50)")>  _
	Public Property INFORM_TEL1() As String
		Get
			Return Me._INFORM_TEL1
		End Get
		Set
			If (String.Equals(Me._INFORM_TEL1, value) = false) Then
				Me.OnINFORM_TEL1Changing(value)
				Me.SendPropertyChanging
				Me._INFORM_TEL1 = value
				Me.SendPropertyChanged("INFORM_TEL1")
				Me.OnINFORM_TEL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORM_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property INFORM_EMAIL() As String
		Get
			Return Me._INFORM_EMAIL
		End Get
		Set
			If (String.Equals(Me._INFORM_EMAIL, value) = false) Then
				Me.OnINFORM_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._INFORM_EMAIL = value
				Me.SendPropertyChanged("INFORM_EMAIL")
				Me.OnINFORM_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRE_ACTION", DbType:="NVarChar(50)")>  _
	Public Property PRE_ACTION() As String
		Get
			Return Me._PRE_ACTION
		End Get
		Set
			If (String.Equals(Me._PRE_ACTION, value) = false) Then
				Me.OnPRE_ACTIONChanging(value)
				Me.SendPropertyChanging
				Me._PRE_ACTION = value
				Me.SendPropertyChanged("PRE_ACTION")
				Me.OnPRE_ACTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="Date")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(50)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COMPLAIN_STATUS")>  _
Partial Public Class COMPLAIN_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_NAME As String
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _CREATE_NAME As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _REMARK_STATUS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnCREATE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_NAMEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnREMARK_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARK_STATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_NAME() As String
		Get
			Return Me._STATUS_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME, value) = false) Then
				Me.OnSTATUS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME = value
				Me.SendPropertyChanged("STATUS_NAME")
				Me.OnSTATUS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="Date")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(50)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_NAME() As String
		Get
			Return Me._CREATE_NAME
		End Get
		Set
			If (String.Equals(Me._CREATE_NAME, value) = false) Then
				Me.OnCREATE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_NAME = value
				Me.SendPropertyChanged("CREATE_NAME")
				Me.OnCREATE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK_STATUS() As String
		Get
			Return Me._REMARK_STATUS
		End Get
		Set
			If (String.Equals(Me._REMARK_STATUS, value) = false) Then
				Me.OnREMARK_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._REMARK_STATUS = value
				Me.SendPropertyChanged("REMARK_STATUS")
				Me.OnREMARK_STATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COMPLAIN_STATUS_MAS")>  _
Partial Public Class COMPLAIN_STATUS_MA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_NAME As String
	
	Private _STATUS_ID As String
	
	Private _STATUS_GROUP As String
	
	Private _PROCESS_ID As String
	
	Private _GROUP_DDL_SHOW As String
	
	Private _STAFF_TYPE As String
	
	Private _REF_STATUS As String
	
	Private _SEQ As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnGROUP_DDL_SHOWChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_DDL_SHOWChanged()
    End Sub
    Partial Private Sub OnSTAFF_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_TYPEChanged()
    End Sub
    Partial Private Sub OnREF_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnREF_STATUSChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_NAME() As String
		Get
			Return Me._STATUS_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME, value) = false) Then
				Me.OnSTATUS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME = value
				Me.SendPropertyChanged("STATUS_NAME")
				Me.OnSTATUS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="NVarChar(50)")>  _
	Public Property STATUS_ID() As String
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (String.Equals(Me._STATUS_ID, value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_GROUP", DbType:="NVarChar(50)")>  _
	Public Property STATUS_GROUP() As String
		Get
			Return Me._STATUS_GROUP
		End Get
		Set
			If (String.Equals(Me._STATUS_GROUP, value) = false) Then
				Me.OnSTATUS_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_GROUP = value
				Me.SendPropertyChanged("STATUS_GROUP")
				Me.OnSTATUS_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_DDL_SHOW", DbType:="NVarChar(50)")>  _
	Public Property GROUP_DDL_SHOW() As String
		Get
			Return Me._GROUP_DDL_SHOW
		End Get
		Set
			If (String.Equals(Me._GROUP_DDL_SHOW, value) = false) Then
				Me.OnGROUP_DDL_SHOWChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_DDL_SHOW = value
				Me.SendPropertyChanged("GROUP_DDL_SHOW")
				Me.OnGROUP_DDL_SHOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_TYPE", DbType:="NVarChar(50)")>  _
	Public Property STAFF_TYPE() As String
		Get
			Return Me._STAFF_TYPE
		End Get
		Set
			If (String.Equals(Me._STAFF_TYPE, value) = false) Then
				Me.OnSTAFF_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_TYPE = value
				Me.SendPropertyChanged("STAFF_TYPE")
				Me.OnSTAFF_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_STATUS", DbType:="NVarChar(50)")>  _
	Public Property REF_STATUS() As String
		Get
			Return Me._REF_STATUS
		End Get
		Set
			If (String.Equals(Me._REF_STATUS, value) = false) Then
				Me.OnREF_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._REF_STATUS = value
				Me.SendPropertyChanged("REF_STATUS")
				Me.OnREF_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTER")>  _
Partial Public Class DRUG_REGISTER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _thargttpnm As String
	
	Private _engrgttpnm As String
	
	Private _GROUPNAME As String
	
	Private _register_no As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _thanm_license As String
	
	Private _fulladdr As String
	
	Private _lcntpcd As String
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _cnccd As System.Nullable(Of Integer)
	
	Private _thadsgnm As String
	
	Private _ctgthanm As String
	
	Private _ctgcd As System.Nullable(Of Integer)
	
	Private _agent As String
	
	Private _cnccsnm As String
	
	Private _cnsdnm As String
	
	Private _engfrgnnm As String
	
	Private _drgchrtha As String
	
	Private _lmdfdate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnthargttpnmChanging(value As String)
    End Sub
    Partial Private Sub OnthargttpnmChanged()
    End Sub
    Partial Private Sub OnengrgttpnmChanging(value As String)
    End Sub
    Partial Private Sub OnengrgttpnmChanged()
    End Sub
    Partial Private Sub OnGROUPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPNAMEChanged()
    End Sub
    Partial Private Sub Onregister_noChanging(value As String)
    End Sub
    Partial Private Sub Onregister_noChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub Onthanm_licenseChanging(value As String)
    End Sub
    Partial Private Sub Onthanm_licenseChanged()
    End Sub
    Partial Private Sub OnfulladdrChanging(value As String)
    End Sub
    Partial Private Sub OnfulladdrChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OnthadsgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadsgnmChanged()
    End Sub
    Partial Private Sub OnctgthanmChanging(value As String)
    End Sub
    Partial Private Sub OnctgthanmChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    Partial Private Sub OnagentChanging(value As String)
    End Sub
    Partial Private Sub OnagentChanged()
    End Sub
    Partial Private Sub OncnccsnmChanging(value As String)
    End Sub
    Partial Private Sub OncnccsnmChanged()
    End Sub
    Partial Private Sub OncnsdnmChanging(value As String)
    End Sub
    Partial Private Sub OncnsdnmChanged()
    End Sub
    Partial Private Sub OnengfrgnnmChanging(value As String)
    End Sub
    Partial Private Sub OnengfrgnnmChanged()
    End Sub
    Partial Private Sub OndrgchrthaChanging(value As String)
    End Sub
    Partial Private Sub OndrgchrthaChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thargttpnm", DbType:="NVarChar(MAX)")>  _
	Public Property thargttpnm() As String
		Get
			Return Me._thargttpnm
		End Get
		Set
			If (String.Equals(Me._thargttpnm, value) = false) Then
				Me.OnthargttpnmChanging(value)
				Me.SendPropertyChanging
				Me._thargttpnm = value
				Me.SendPropertyChanged("thargttpnm")
				Me.OnthargttpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engrgttpnm", DbType:="NVarChar(MAX)")>  _
	Public Property engrgttpnm() As String
		Get
			Return Me._engrgttpnm
		End Get
		Set
			If (String.Equals(Me._engrgttpnm, value) = false) Then
				Me.OnengrgttpnmChanging(value)
				Me.SendPropertyChanging
				Me._engrgttpnm = value
				Me.SendPropertyChanged("engrgttpnm")
				Me.OnengrgttpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPNAME", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPNAME() As String
		Get
			Return Me._GROUPNAME
		End Get
		Set
			If (String.Equals(Me._GROUPNAME, value) = false) Then
				Me.OnGROUPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPNAME = value
				Me.SendPropertyChanged("GROUPNAME")
				Me.OnGROUPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_register_no", DbType:="NVarChar(50)")>  _
	Public Property register_no() As String
		Get
			Return Me._register_no
		End Get
		Set
			If (String.Equals(Me._register_no, value) = false) Then
				Me.Onregister_noChanging(value)
				Me.SendPropertyChanging
				Me._register_no = value
				Me.SendPropertyChanged("register_no")
				Me.Onregister_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(13)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm_license", DbType:="NVarChar(MAX)")>  _
	Public Property thanm_license() As String
		Get
			Return Me._thanm_license
		End Get
		Set
			If (String.Equals(Me._thanm_license, value) = false) Then
				Me.Onthanm_licenseChanging(value)
				Me.SendPropertyChanging
				Me._thanm_license = value
				Me.SendPropertyChanged("thanm_license")
				Me.Onthanm_licenseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fulladdr", DbType:="NVarChar(MAX)")>  _
	Public Property fulladdr() As String
		Get
			Return Me._fulladdr
		End Get
		Set
			If (String.Equals(Me._fulladdr, value) = false) Then
				Me.OnfulladdrChanging(value)
				Me.SendPropertyChanging
				Me._fulladdr = value
				Me.SendPropertyChanged("fulladdr")
				Me.OnfulladdrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(50)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="Int")>  _
	Public Property cnccd() As System.Nullable(Of Integer)
		Get
			Return Me._cnccd
		End Get
		Set
			If (Me._cnccd.Equals(value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadsgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadsgnm() As String
		Get
			Return Me._thadsgnm
		End Get
		Set
			If (String.Equals(Me._thadsgnm, value) = false) Then
				Me.OnthadsgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadsgnm = value
				Me.SendPropertyChanged("thadsgnm")
				Me.OnthadsgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgthanm", DbType:="NVarChar(MAX)")>  _
	Public Property ctgthanm() As String
		Get
			Return Me._ctgthanm
		End Get
		Set
			If (String.Equals(Me._ctgthanm, value) = false) Then
				Me.OnctgthanmChanging(value)
				Me.SendPropertyChanging
				Me._ctgthanm = value
				Me.SendPropertyChanged("ctgthanm")
				Me.OnctgthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="Int")>  _
	Public Property ctgcd() As System.Nullable(Of Integer)
		Get
			Return Me._ctgcd
		End Get
		Set
			If (Me._ctgcd.Equals(value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_agent", DbType:="NVarChar(MAX)")>  _
	Public Property agent() As String
		Get
			Return Me._agent
		End Get
		Set
			If (String.Equals(Me._agent, value) = false) Then
				Me.OnagentChanging(value)
				Me.SendPropertyChanging
				Me._agent = value
				Me.SendPropertyChanged("agent")
				Me.OnagentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccsnm", DbType:="NVarChar(MAX)")>  _
	Public Property cnccsnm() As String
		Get
			Return Me._cnccsnm
		End Get
		Set
			If (String.Equals(Me._cnccsnm, value) = false) Then
				Me.OncnccsnmChanging(value)
				Me.SendPropertyChanging
				Me._cnccsnm = value
				Me.SendPropertyChanged("cnccsnm")
				Me.OncnccsnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdnm", DbType:="NVarChar(MAX)")>  _
	Public Property cnsdnm() As String
		Get
			Return Me._cnsdnm
		End Get
		Set
			If (String.Equals(Me._cnsdnm, value) = false) Then
				Me.OncnsdnmChanging(value)
				Me.SendPropertyChanging
				Me._cnsdnm = value
				Me.SendPropertyChanged("cnsdnm")
				Me.OncnsdnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfrgnnm", DbType:="NVarChar(MAX)")>  _
	Public Property engfrgnnm() As String
		Get
			Return Me._engfrgnnm
		End Get
		Set
			If (String.Equals(Me._engfrgnnm, value) = false) Then
				Me.OnengfrgnnmChanging(value)
				Me.SendPropertyChanging
				Me._engfrgnnm = value
				Me.SendPropertyChanged("engfrgnnm")
				Me.OnengfrgnnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgchrtha", DbType:="NVarChar(MAX)")>  _
	Public Property drgchrtha() As String
		Get
			Return Me._drgchrtha
		End Get
		Set
			If (String.Equals(Me._drgchrtha, value) = false) Then
				Me.OndrgchrthaChanging(value)
				Me.SendPropertyChanging
				Me._drgchrtha = value
				Me.SendPropertyChanged("drgchrtha")
				Me.OndrgchrthaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Events")>  _
Partial Public Class [Event]
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EventID As Integer
	
	Private _Subject As String
	
	Private _Description As String
	
	Private _Start As System.Nullable(Of Date)
	
	Private _End_date As System.Nullable(Of Date)
	
	Private _ThemeColor As String
	
	Private _IsFullDay As System.Nullable(Of Boolean)
	
	Private _REF_CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEventIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEventIDChanged()
    End Sub
    Partial Private Sub OnSubjectChanging(value As String)
    End Sub
    Partial Private Sub OnSubjectChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnStartChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartChanged()
    End Sub
    Partial Private Sub OnEnd_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEnd_dateChanged()
    End Sub
    Partial Private Sub OnThemeColorChanging(value As String)
    End Sub
    Partial Private Sub OnThemeColorChanged()
    End Sub
    Partial Private Sub OnIsFullDayChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsFullDayChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EventID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property EventID() As Integer
		Get
			Return Me._EventID
		End Get
		Set
			If ((Me._EventID = value)  _
						= false) Then
				Me.OnEventIDChanging(value)
				Me.SendPropertyChanging
				Me._EventID = value
				Me.SendPropertyChanged("EventID")
				Me.OnEventIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subject", DbType:="NVarChar(MAX)")>  _
	Public Property Subject() As String
		Get
			Return Me._Subject
		End Get
		Set
			If (String.Equals(Me._Subject, value) = false) Then
				Me.OnSubjectChanging(value)
				Me.SendPropertyChanging
				Me._Subject = value
				Me.SendPropertyChanged("Subject")
				Me.OnSubjectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Start", DbType:="DateTime")>  _
	Public Property Start() As System.Nullable(Of Date)
		Get
			Return Me._Start
		End Get
		Set
			If (Me._Start.Equals(value) = false) Then
				Me.OnStartChanging(value)
				Me.SendPropertyChanging
				Me._Start = value
				Me.SendPropertyChanged("Start")
				Me.OnStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_End_date", DbType:="DateTime")>  _
	Public Property End_date() As System.Nullable(Of Date)
		Get
			Return Me._End_date
		End Get
		Set
			If (Me._End_date.Equals(value) = false) Then
				Me.OnEnd_dateChanging(value)
				Me.SendPropertyChanging
				Me._End_date = value
				Me.SendPropertyChanged("End_date")
				Me.OnEnd_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThemeColor", DbType:="NVarChar(MAX)")>  _
	Public Property ThemeColor() As String
		Get
			Return Me._ThemeColor
		End Get
		Set
			If (String.Equals(Me._ThemeColor, value) = false) Then
				Me.OnThemeColorChanging(value)
				Me.SendPropertyChanging
				Me._ThemeColor = value
				Me.SendPropertyChanged("ThemeColor")
				Me.OnThemeColorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsFullDay", DbType:="Bit")>  _
	Public Property IsFullDay() As System.Nullable(Of Boolean)
		Get
			Return Me._IsFullDay
		End Get
		Set
			If (Me._IsFullDay.Equals(value) = false) Then
				Me.OnIsFullDayChanging(value)
				Me.SendPropertyChanging
				Me._IsFullDay = value
				Me.SendPropertyChanged("IsFullDay")
				Me.OnIsFullDayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EX_DRUG_RESULT")>  _
Partial Public Class EX_DRUG_RESULT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DOC_NO As String
	
	Private _DOC_DATE As System.Nullable(Of Date)
	
	Private _DMSC_DOC_NO As String
	
	Private _DMSC_DOC_DATE As System.Nullable(Of Date)
	
	Private _LAB_NO As String
	
	Private _LABTDMSC_NAME As String
	
	Private _RESULT_FLAG As String
	
	Private _RESULT As String
	
	Private _LAB_DESC As String
	
	Private _FORMAT_RESULT As String
	
	Private _NUMERIC_RESULT As String
	
	Private _UNIT_RESULT As String
	
	Private _ANALYSIS_DESC As String
	
	Private _RESULT_DESC As String
	
	Private _REF_CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDOC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnDOC_NOChanged()
    End Sub
    Partial Private Sub OnDOC_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOC_DATEChanged()
    End Sub
    Partial Private Sub OnDMSC_DOC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnDMSC_DOC_NOChanged()
    End Sub
    Partial Private Sub OnDMSC_DOC_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDMSC_DOC_DATEChanged()
    End Sub
    Partial Private Sub OnLAB_NOChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_NOChanged()
    End Sub
    Partial Private Sub OnLABTDMSC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLABTDMSC_NAMEChanged()
    End Sub
    Partial Private Sub OnRESULT_FLAGChanging(value As String)
    End Sub
    Partial Private Sub OnRESULT_FLAGChanged()
    End Sub
    Partial Private Sub OnRESULTChanging(value As String)
    End Sub
    Partial Private Sub OnRESULTChanged()
    End Sub
    Partial Private Sub OnLAB_DESCChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_DESCChanged()
    End Sub
    Partial Private Sub OnFORMAT_RESULTChanging(value As String)
    End Sub
    Partial Private Sub OnFORMAT_RESULTChanged()
    End Sub
    Partial Private Sub OnNUMERIC_RESULTChanging(value As String)
    End Sub
    Partial Private Sub OnNUMERIC_RESULTChanged()
    End Sub
    Partial Private Sub OnUNIT_RESULTChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_RESULTChanged()
    End Sub
    Partial Private Sub OnANALYSIS_DESCChanging(value As String)
    End Sub
    Partial Private Sub OnANALYSIS_DESCChanged()
    End Sub
    Partial Private Sub OnRESULT_DESCChanging(value As String)
    End Sub
    Partial Private Sub OnRESULT_DESCChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_NO", DbType:="NVarChar(MAX)")>  _
	Public Property DOC_NO() As String
		Get
			Return Me._DOC_NO
		End Get
		Set
			If (String.Equals(Me._DOC_NO, value) = false) Then
				Me.OnDOC_NOChanging(value)
				Me.SendPropertyChanging
				Me._DOC_NO = value
				Me.SendPropertyChanged("DOC_NO")
				Me.OnDOC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_DATE", DbType:="DateTime")>  _
	Public Property DOC_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOC_DATE
		End Get
		Set
			If (Me._DOC_DATE.Equals(value) = false) Then
				Me.OnDOC_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOC_DATE = value
				Me.SendPropertyChanged("DOC_DATE")
				Me.OnDOC_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DMSC_DOC_NO", DbType:="NVarChar(MAX)")>  _
	Public Property DMSC_DOC_NO() As String
		Get
			Return Me._DMSC_DOC_NO
		End Get
		Set
			If (String.Equals(Me._DMSC_DOC_NO, value) = false) Then
				Me.OnDMSC_DOC_NOChanging(value)
				Me.SendPropertyChanging
				Me._DMSC_DOC_NO = value
				Me.SendPropertyChanged("DMSC_DOC_NO")
				Me.OnDMSC_DOC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DMSC_DOC_DATE", DbType:="DateTime")>  _
	Public Property DMSC_DOC_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DMSC_DOC_DATE
		End Get
		Set
			If (Me._DMSC_DOC_DATE.Equals(value) = false) Then
				Me.OnDMSC_DOC_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DMSC_DOC_DATE = value
				Me.SendPropertyChanged("DMSC_DOC_DATE")
				Me.OnDMSC_DOC_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_NO", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_NO() As String
		Get
			Return Me._LAB_NO
		End Get
		Set
			If (String.Equals(Me._LAB_NO, value) = false) Then
				Me.OnLAB_NOChanging(value)
				Me.SendPropertyChanging
				Me._LAB_NO = value
				Me.SendPropertyChanged("LAB_NO")
				Me.OnLAB_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABTDMSC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LABTDMSC_NAME() As String
		Get
			Return Me._LABTDMSC_NAME
		End Get
		Set
			If (String.Equals(Me._LABTDMSC_NAME, value) = false) Then
				Me.OnLABTDMSC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LABTDMSC_NAME = value
				Me.SendPropertyChanged("LABTDMSC_NAME")
				Me.OnLABTDMSC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULT_FLAG", DbType:="NVarChar(MAX)")>  _
	Public Property RESULT_FLAG() As String
		Get
			Return Me._RESULT_FLAG
		End Get
		Set
			If (String.Equals(Me._RESULT_FLAG, value) = false) Then
				Me.OnRESULT_FLAGChanging(value)
				Me.SendPropertyChanging
				Me._RESULT_FLAG = value
				Me.SendPropertyChanged("RESULT_FLAG")
				Me.OnRESULT_FLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULT", DbType:="NVarChar(MAX)")>  _
	Public Property RESULT() As String
		Get
			Return Me._RESULT
		End Get
		Set
			If (String.Equals(Me._RESULT, value) = false) Then
				Me.OnRESULTChanging(value)
				Me.SendPropertyChanging
				Me._RESULT = value
				Me.SendPropertyChanged("RESULT")
				Me.OnRESULTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_DESC", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_DESC() As String
		Get
			Return Me._LAB_DESC
		End Get
		Set
			If (String.Equals(Me._LAB_DESC, value) = false) Then
				Me.OnLAB_DESCChanging(value)
				Me.SendPropertyChanging
				Me._LAB_DESC = value
				Me.SendPropertyChanged("LAB_DESC")
				Me.OnLAB_DESCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT_RESULT", DbType:="NVarChar(MAX)")>  _
	Public Property FORMAT_RESULT() As String
		Get
			Return Me._FORMAT_RESULT
		End Get
		Set
			If (String.Equals(Me._FORMAT_RESULT, value) = false) Then
				Me.OnFORMAT_RESULTChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT_RESULT = value
				Me.SendPropertyChanged("FORMAT_RESULT")
				Me.OnFORMAT_RESULTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMERIC_RESULT", DbType:="NVarChar(MAX)")>  _
	Public Property NUMERIC_RESULT() As String
		Get
			Return Me._NUMERIC_RESULT
		End Get
		Set
			If (String.Equals(Me._NUMERIC_RESULT, value) = false) Then
				Me.OnNUMERIC_RESULTChanging(value)
				Me.SendPropertyChanging
				Me._NUMERIC_RESULT = value
				Me.SendPropertyChanged("NUMERIC_RESULT")
				Me.OnNUMERIC_RESULTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_RESULT", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_RESULT() As String
		Get
			Return Me._UNIT_RESULT
		End Get
		Set
			If (String.Equals(Me._UNIT_RESULT, value) = false) Then
				Me.OnUNIT_RESULTChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_RESULT = value
				Me.SendPropertyChanged("UNIT_RESULT")
				Me.OnUNIT_RESULTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYSIS_DESC", DbType:="NVarChar(MAX)")>  _
	Public Property ANALYSIS_DESC() As String
		Get
			Return Me._ANALYSIS_DESC
		End Get
		Set
			If (String.Equals(Me._ANALYSIS_DESC, value) = false) Then
				Me.OnANALYSIS_DESCChanging(value)
				Me.SendPropertyChanging
				Me._ANALYSIS_DESC = value
				Me.SendPropertyChanged("ANALYSIS_DESC")
				Me.OnANALYSIS_DESCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULT_DESC", DbType:="NVarChar(MAX)")>  _
	Public Property RESULT_DESC() As String
		Get
			Return Me._RESULT_DESC
		End Get
		Set
			If (String.Equals(Me._RESULT_DESC, value) = false) Then
				Me.OnRESULT_DESCChanging(value)
				Me.SendPropertyChanging
				Me._RESULT_DESC = value
				Me.SendPropertyChanged("RESULT_DESC")
				Me.OnRESULT_DESCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FILE_ATTACH")>  _
Partial Public Class FILE_ATTACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PATH As String
	
	Private _NAME_FAKE As String
	
	Private _NAME_REAL As String
	
	Private _TYPE As String
	
	Private _TRANSACTION_ID As System.Nullable(Of Integer)
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPATHChanging(value As String)
    End Sub
    Partial Private Sub OnPATHChanged()
    End Sub
    Partial Private Sub OnNAME_FAKEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_FAKEChanged()
    End Sub
    Partial Private Sub OnNAME_REALChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_REALChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property PATH() As String
		Get
			Return Me._PATH
		End Get
		Set
			If (String.Equals(Me._PATH, value) = false) Then
				Me.OnPATHChanging(value)
				Me.SendPropertyChanging
				Me._PATH = value
				Me.SendPropertyChanged("PATH")
				Me.OnPATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_FAKE", DbType:="VarChar(MAX)")>  _
	Public Property NAME_FAKE() As String
		Get
			Return Me._NAME_FAKE
		End Get
		Set
			If (String.Equals(Me._NAME_FAKE, value) = false) Then
				Me.OnNAME_FAKEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_FAKE = value
				Me.SendPropertyChanged("NAME_FAKE")
				Me.OnNAME_FAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_REAL", DbType:="VarChar(MAX)")>  _
	Public Property NAME_REAL() As String
		Get
			Return Me._NAME_REAL
		End Get
		Set
			If (String.Equals(Me._NAME_REAL, value) = false) Then
				Me.OnNAME_REALChanging(value)
				Me.SendPropertyChanging
				Me._NAME_REAL = value
				Me.SendPropertyChanged("NAME_REAL")
				Me.OnNAME_REALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="VarChar(MAX)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSACTION_ID", DbType:="Int")>  _
	Public Property TRANSACTION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TRANSACTION_ID
		End Get
		Set
			If (Me._TRANSACTION_ID.Equals(value) = false) Then
				Me.OnTRANSACTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSACTION_ID = value
				Me.SendPropertyChanged("TRANSACTION_ID")
				Me.OnTRANSACTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GMP_CLEARANCE")>  _
Partial Public Class GMP_CLEARANCE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _IMPORT_COMPANY_NAME As String
	
	Private _LCNNO As String
	
	Private _COMPANY_NAME As String
	
	Private _ADDRESS As String
	
	Private _COUNTRY As String
	
	Private _DEPARTMENT As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _EXPIRE_DATE As System.Nullable(Of Date)
	
	Private _CER_TYPE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnIMPORT_COMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnIMPORT_COMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnEXPIRE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXPIRE_DATEChanged()
    End Sub
    Partial Private Sub OnCER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCER_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMPORT_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property IMPORT_COMPANY_NAME() As String
		Get
			Return Me._IMPORT_COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._IMPORT_COMPANY_NAME, value) = false) Then
				Me.OnIMPORT_COMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._IMPORT_COMPANY_NAME = value
				Me.SendPropertyChanged("IMPORT_COMPANY_NAME")
				Me.OnIMPORT_COMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS() As String
		Get
			Return Me._ADDRESS
		End Get
		Set
			If (String.Equals(Me._ADDRESS, value) = false) Then
				Me.OnADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS = value
				Me.SendPropertyChanged("ADDRESS")
				Me.OnADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPIRE_DATE", DbType:="DateTime")>  _
	Public Property EXPIRE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXPIRE_DATE
		End Get
		Set
			If (Me._EXPIRE_DATE.Equals(value) = false) Then
				Me.OnEXPIRE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXPIRE_DATE = value
				Me.SendPropertyChanged("EXPIRE_DATE")
				Me.OnEXPIRE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property CER_TYPE() As String
		Get
			Return Me._CER_TYPE
		End Get
		Set
			If (String.Equals(Me._CER_TYPE, value) = false) Then
				Me.OnCER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_TYPE = value
				Me.SendPropertyChanged("CER_TYPE")
				Me.OnCER_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GMP_CLEARANCE_MANUFACTURING")>  _
Partial Public Class GMP_CLEARANCE_MANUFACTURING
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _DOSAGE As String
	
	Private _TYPE As String
	
	Private _MANUFACTURING_TYPE As String
	
	Private _ETC As String
	
	Private _HUMAN_OR_ANIMAL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnDOSAGEChanging(value As String)
    End Sub
    Partial Private Sub OnDOSAGEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnMANUFACTURING_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFACTURING_TYPEChanged()
    End Sub
    Partial Private Sub OnETCChanging(value As String)
    End Sub
    Partial Private Sub OnETCChanged()
    End Sub
    Partial Private Sub OnHUMAN_OR_ANIMALChanging(value As String)
    End Sub
    Partial Private Sub OnHUMAN_OR_ANIMALChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOSAGE", DbType:="NVarChar(MAX)")>  _
	Public Property DOSAGE() As String
		Get
			Return Me._DOSAGE
		End Get
		Set
			If (String.Equals(Me._DOSAGE, value) = false) Then
				Me.OnDOSAGEChanging(value)
				Me.SendPropertyChanging
				Me._DOSAGE = value
				Me.SendPropertyChanged("DOSAGE")
				Me.OnDOSAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTURING_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFACTURING_TYPE() As String
		Get
			Return Me._MANUFACTURING_TYPE
		End Get
		Set
			If (String.Equals(Me._MANUFACTURING_TYPE, value) = false) Then
				Me.OnMANUFACTURING_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTURING_TYPE = value
				Me.SendPropertyChanged("MANUFACTURING_TYPE")
				Me.OnMANUFACTURING_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ETC", DbType:="NVarChar(MAX)")>  _
	Public Property ETC() As String
		Get
			Return Me._ETC
		End Get
		Set
			If (String.Equals(Me._ETC, value) = false) Then
				Me.OnETCChanging(value)
				Me.SendPropertyChanging
				Me._ETC = value
				Me.SendPropertyChanged("ETC")
				Me.OnETCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HUMAN_OR_ANIMAL", DbType:="NVarChar(MAX)")>  _
	Public Property HUMAN_OR_ANIMAL() As String
		Get
			Return Me._HUMAN_OR_ANIMAL
		End Get
		Set
			If (String.Equals(Me._HUMAN_OR_ANIMAL, value) = false) Then
				Me.OnHUMAN_OR_ANIMALChanging(value)
				Me.SendPropertyChanging
				Me._HUMAN_OR_ANIMAL = value
				Me.SendPropertyChanged("HUMAN_OR_ANIMAL")
				Me.OnHUMAN_OR_ANIMALChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GMP_STANDARD")>  _
Partial Public Class GMP_STANDARD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Check__pattern As String
	
	Private _Check__scope As String
	
	Private _Check_Data As String
	
	Private _check_simple As String
	
	Private _drug_lable As String
	
	Private _Sample_Analysis As String
	
	Private _Sample_consultation As String
	
	Private _drughold As String
	
	Private _drugFreeze As String
	
	Private _drugrevoke As String
	
	Private _Destroy_drugs As String
	
	Private _Advertising As String
	
	Private _Audit As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_PLAN_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _REF_CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCheck__patternChanging(value As String)
    End Sub
    Partial Private Sub OnCheck__patternChanged()
    End Sub
    Partial Private Sub OnCheck__scopeChanging(value As String)
    End Sub
    Partial Private Sub OnCheck__scopeChanged()
    End Sub
    Partial Private Sub OnCheck_DataChanging(value As String)
    End Sub
    Partial Private Sub OnCheck_DataChanged()
    End Sub
    Partial Private Sub Oncheck_simpleChanging(value As String)
    End Sub
    Partial Private Sub Oncheck_simpleChanged()
    End Sub
    Partial Private Sub Ondrug_lableChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_lableChanged()
    End Sub
    Partial Private Sub OnSample_AnalysisChanging(value As String)
    End Sub
    Partial Private Sub OnSample_AnalysisChanged()
    End Sub
    Partial Private Sub OnSample_consultationChanging(value As String)
    End Sub
    Partial Private Sub OnSample_consultationChanged()
    End Sub
    Partial Private Sub OndrugholdChanging(value As String)
    End Sub
    Partial Private Sub OndrugholdChanged()
    End Sub
    Partial Private Sub OndrugFreezeChanging(value As String)
    End Sub
    Partial Private Sub OndrugFreezeChanged()
    End Sub
    Partial Private Sub OndrugrevokeChanging(value As String)
    End Sub
    Partial Private Sub OndrugrevokeChanged()
    End Sub
    Partial Private Sub OnDestroy_drugsChanging(value As String)
    End Sub
    Partial Private Sub OnDestroy_drugsChanged()
    End Sub
    Partial Private Sub OnAdvertisingChanging(value As String)
    End Sub
    Partial Private Sub OnAdvertisingChanged()
    End Sub
    Partial Private Sub OnAuditChanging(value As String)
    End Sub
    Partial Private Sub OnAuditChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_PLAN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Check_ pattern]", Storage:="_Check__pattern", DbType:="NVarChar(MAX)")>  _
	Public Property Check__pattern() As String
		Get
			Return Me._Check__pattern
		End Get
		Set
			If (String.Equals(Me._Check__pattern, value) = false) Then
				Me.OnCheck__patternChanging(value)
				Me.SendPropertyChanging
				Me._Check__pattern = value
				Me.SendPropertyChanged("Check__pattern")
				Me.OnCheck__patternChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Check _scope]", Storage:="_Check__scope", DbType:="NVarChar(MAX)")>  _
	Public Property Check__scope() As String
		Get
			Return Me._Check__scope
		End Get
		Set
			If (String.Equals(Me._Check__scope, value) = false) Then
				Me.OnCheck__scopeChanging(value)
				Me.SendPropertyChanging
				Me._Check__scope = value
				Me.SendPropertyChanged("Check__scope")
				Me.OnCheck__scopeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Check Data]", Storage:="_Check_Data", DbType:="NVarChar(MAX)")>  _
	Public Property Check_Data() As String
		Get
			Return Me._Check_Data
		End Get
		Set
			If (String.Equals(Me._Check_Data, value) = false) Then
				Me.OnCheck_DataChanging(value)
				Me.SendPropertyChanging
				Me._Check_Data = value
				Me.SendPropertyChanged("Check_Data")
				Me.OnCheck_DataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_check_simple", DbType:="NVarChar(MAX)")>  _
	Public Property check_simple() As String
		Get
			Return Me._check_simple
		End Get
		Set
			If (String.Equals(Me._check_simple, value) = false) Then
				Me.Oncheck_simpleChanging(value)
				Me.SendPropertyChanging
				Me._check_simple = value
				Me.SendPropertyChanged("check_simple")
				Me.Oncheck_simpleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_lable", DbType:="NVarChar(MAX)")>  _
	Public Property drug_lable() As String
		Get
			Return Me._drug_lable
		End Get
		Set
			If (String.Equals(Me._drug_lable, value) = false) Then
				Me.Ondrug_lableChanging(value)
				Me.SendPropertyChanging
				Me._drug_lable = value
				Me.SendPropertyChanged("drug_lable")
				Me.Ondrug_lableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Sample Analysis]", Storage:="_Sample_Analysis", DbType:="NVarChar(MAX)")>  _
	Public Property Sample_Analysis() As String
		Get
			Return Me._Sample_Analysis
		End Get
		Set
			If (String.Equals(Me._Sample_Analysis, value) = false) Then
				Me.OnSample_AnalysisChanging(value)
				Me.SendPropertyChanging
				Me._Sample_Analysis = value
				Me.SendPropertyChanged("Sample_Analysis")
				Me.OnSample_AnalysisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sample_consultation", DbType:="NVarChar(MAX)")>  _
	Public Property Sample_consultation() As String
		Get
			Return Me._Sample_consultation
		End Get
		Set
			If (String.Equals(Me._Sample_consultation, value) = false) Then
				Me.OnSample_consultationChanging(value)
				Me.SendPropertyChanging
				Me._Sample_consultation = value
				Me.SendPropertyChanged("Sample_consultation")
				Me.OnSample_consultationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drughold", DbType:="NVarChar(MAX)")>  _
	Public Property drughold() As String
		Get
			Return Me._drughold
		End Get
		Set
			If (String.Equals(Me._drughold, value) = false) Then
				Me.OndrugholdChanging(value)
				Me.SendPropertyChanging
				Me._drughold = value
				Me.SendPropertyChanged("drughold")
				Me.OndrugholdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drugFreeze", DbType:="NVarChar(MAX)")>  _
	Public Property drugFreeze() As String
		Get
			Return Me._drugFreeze
		End Get
		Set
			If (String.Equals(Me._drugFreeze, value) = false) Then
				Me.OndrugFreezeChanging(value)
				Me.SendPropertyChanging
				Me._drugFreeze = value
				Me.SendPropertyChanged("drugFreeze")
				Me.OndrugFreezeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drugrevoke", DbType:="NVarChar(MAX)")>  _
	Public Property drugrevoke() As String
		Get
			Return Me._drugrevoke
		End Get
		Set
			If (String.Equals(Me._drugrevoke, value) = false) Then
				Me.OndrugrevokeChanging(value)
				Me.SendPropertyChanging
				Me._drugrevoke = value
				Me.SendPropertyChanged("drugrevoke")
				Me.OndrugrevokeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destroy_drugs", DbType:="NVarChar(MAX)")>  _
	Public Property Destroy_drugs() As String
		Get
			Return Me._Destroy_drugs
		End Get
		Set
			If (String.Equals(Me._Destroy_drugs, value) = false) Then
				Me.OnDestroy_drugsChanging(value)
				Me.SendPropertyChanging
				Me._Destroy_drugs = value
				Me.SendPropertyChanged("Destroy_drugs")
				Me.OnDestroy_drugsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Advertising", DbType:="NVarChar(MAX)")>  _
	Public Property Advertising() As String
		Get
			Return Me._Advertising
		End Get
		Set
			If (String.Equals(Me._Advertising, value) = false) Then
				Me.OnAdvertisingChanging(value)
				Me.SendPropertyChanging
				Me._Advertising = value
				Me.SendPropertyChanged("Advertising")
				Me.OnAdvertisingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Audit", DbType:="NVarChar(MAX)")>  _
	Public Property Audit() As String
		Get
			Return Me._Audit
		End Get
		Set
			If (String.Equals(Me._Audit, value) = false) Then
				Me.OnAuditChanging(value)
				Me.SendPropertyChanging
				Me._Audit = value
				Me.SendPropertyChanged("Audit")
				Me.OnAuditChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PLAN_ID", DbType:="Int")>  _
	Public Property FK_PLAN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PLAN_ID
		End Get
		Set
			If (Me._FK_PLAN_ID.Equals(value) = false) Then
				Me.OnFK_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_PLAN_ID = value
				Me.SendPropertyChanged("FK_PLAN_ID")
				Me.OnFK_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GMP_STATUS")>  _
Partial Public Class GMP_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _Cerrificate_Expire As System.Nullable(Of Date)
	
	Private _Certificate_Date As System.Nullable(Of Date)
	
	Private _Certificate_Type As String
	
	Private _Certificate_Condition As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCerrificate_ExpireChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCerrificate_ExpireChanged()
    End Sub
    Partial Private Sub OnCertificate_DateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCertificate_DateChanged()
    End Sub
    Partial Private Sub OnCertificate_TypeChanging(value As String)
    End Sub
    Partial Private Sub OnCertificate_TypeChanged()
    End Sub
    Partial Private Sub OnCertificate_ConditionChanging(value As String)
    End Sub
    Partial Private Sub OnCertificate_ConditionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cerrificate_Expire", DbType:="DateTime")>  _
	Public Property Cerrificate_Expire() As System.Nullable(Of Date)
		Get
			Return Me._Cerrificate_Expire
		End Get
		Set
			If (Me._Cerrificate_Expire.Equals(value) = false) Then
				Me.OnCerrificate_ExpireChanging(value)
				Me.SendPropertyChanging
				Me._Cerrificate_Expire = value
				Me.SendPropertyChanged("Cerrificate_Expire")
				Me.OnCerrificate_ExpireChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Certificate_Date", DbType:="DateTime")>  _
	Public Property Certificate_Date() As System.Nullable(Of Date)
		Get
			Return Me._Certificate_Date
		End Get
		Set
			If (Me._Certificate_Date.Equals(value) = false) Then
				Me.OnCertificate_DateChanging(value)
				Me.SendPropertyChanging
				Me._Certificate_Date = value
				Me.SendPropertyChanged("Certificate_Date")
				Me.OnCertificate_DateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Certificate_Type", DbType:="NVarChar(MAX)")>  _
	Public Property Certificate_Type() As String
		Get
			Return Me._Certificate_Type
		End Get
		Set
			If (String.Equals(Me._Certificate_Type, value) = false) Then
				Me.OnCertificate_TypeChanging(value)
				Me.SendPropertyChanging
				Me._Certificate_Type = value
				Me.SendPropertyChanged("Certificate_Type")
				Me.OnCertificate_TypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Certificate_Condition", DbType:="NVarChar(MAX)")>  _
	Public Property Certificate_Condition() As String
		Get
			Return Me._Certificate_Condition
		End Get
		Set
			If (String.Equals(Me._Certificate_Condition, value) = false) Then
				Me.OnCertificate_ConditionChanging(value)
				Me.SendPropertyChanging
				Me._Certificate_Condition = value
				Me.SendPropertyChanged("Certificate_Condition")
				Me.OnCertificate_ConditionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Inspection")>  _
Partial Public Class Inspection
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _REF_CODE As String
	
	Private _INSPECTOR_SUBJECT As String
	
	Private _INSPECTOR_CD As System.Nullable(Of Integer)
	
	Private _INSPECTOR_NM As String
	
	Private _INSPECTOR_IDENTIFY As String
	
	Private _REPORT As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnINSPECTOR_SUBJECTChanging(value As String)
    End Sub
    Partial Private Sub OnINSPECTOR_SUBJECTChanged()
    End Sub
    Partial Private Sub OnINSPECTOR_CDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINSPECTOR_CDChanged()
    End Sub
    Partial Private Sub OnINSPECTOR_NMChanging(value As String)
    End Sub
    Partial Private Sub OnINSPECTOR_NMChanged()
    End Sub
    Partial Private Sub OnINSPECTOR_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnINSPECTOR_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnREPORTChanging(value As String)
    End Sub
    Partial Private Sub OnREPORTChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSPECTOR_SUBJECT", DbType:="NVarChar(MAX)")>  _
	Public Property INSPECTOR_SUBJECT() As String
		Get
			Return Me._INSPECTOR_SUBJECT
		End Get
		Set
			If (String.Equals(Me._INSPECTOR_SUBJECT, value) = false) Then
				Me.OnINSPECTOR_SUBJECTChanging(value)
				Me.SendPropertyChanging
				Me._INSPECTOR_SUBJECT = value
				Me.SendPropertyChanged("INSPECTOR_SUBJECT")
				Me.OnINSPECTOR_SUBJECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSPECTOR_CD", DbType:="Int")>  _
	Public Property INSPECTOR_CD() As System.Nullable(Of Integer)
		Get
			Return Me._INSPECTOR_CD
		End Get
		Set
			If (Me._INSPECTOR_CD.Equals(value) = false) Then
				Me.OnINSPECTOR_CDChanging(value)
				Me.SendPropertyChanging
				Me._INSPECTOR_CD = value
				Me.SendPropertyChanged("INSPECTOR_CD")
				Me.OnINSPECTOR_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSPECTOR_NM", DbType:="NVarChar(MAX)")>  _
	Public Property INSPECTOR_NM() As String
		Get
			Return Me._INSPECTOR_NM
		End Get
		Set
			If (String.Equals(Me._INSPECTOR_NM, value) = false) Then
				Me.OnINSPECTOR_NMChanging(value)
				Me.SendPropertyChanging
				Me._INSPECTOR_NM = value
				Me.SendPropertyChanged("INSPECTOR_NM")
				Me.OnINSPECTOR_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSPECTOR_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property INSPECTOR_IDENTIFY() As String
		Get
			Return Me._INSPECTOR_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._INSPECTOR_IDENTIFY, value) = false) Then
				Me.OnINSPECTOR_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._INSPECTOR_IDENTIFY = value
				Me.SendPropertyChanged("INSPECTOR_IDENTIFY")
				Me.OnINSPECTOR_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT", DbType:="NVarChar(MAX)")>  _
	Public Property REPORT() As String
		Get
			Return Me._REPORT
		End Get
		Set
			If (String.Equals(Me._REPORT, value) = false) Then
				Me.OnREPORTChanging(value)
				Me.SendPropertyChanging
				Me._REPORT = value
				Me.SendPropertyChanged("REPORT")
				Me.OnREPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LEAD_INSPECTOR")>  _
Partial Public Class LEAD_INSPECTOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _REF_CODE As String
	
	Private _LEAD_FK As System.Nullable(Of Integer)
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _QSM_CAPA As System.Nullable(Of Integer)
	
	Private _REPORT As System.Nullable(Of Integer)
	
	Private _REPORT_FILENAME As String
	
	Private _REPORT_FILENAME_REAL As String
	
	Private _SAMPLE_DRUG_KEEP As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnLEAD_FKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLEAD_FKChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnQSM_CAPAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQSM_CAPAChanged()
    End Sub
    Partial Private Sub OnREPORTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREPORTChanged()
    End Sub
    Partial Private Sub OnREPORT_FILENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnREPORT_FILENAMEChanged()
    End Sub
    Partial Private Sub OnREPORT_FILENAME_REALChanging(value As String)
    End Sub
    Partial Private Sub OnREPORT_FILENAME_REALChanged()
    End Sub
    Partial Private Sub OnSAMPLE_DRUG_KEEPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSAMPLE_DRUG_KEEPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_FK", DbType:="Int")>  _
	Public Property LEAD_FK() As System.Nullable(Of Integer)
		Get
			Return Me._LEAD_FK
		End Get
		Set
			If (Me._LEAD_FK.Equals(value) = false) Then
				Me.OnLEAD_FKChanging(value)
				Me.SendPropertyChanging
				Me._LEAD_FK = value
				Me.SendPropertyChanged("LEAD_FK")
				Me.OnLEAD_FKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QSM_CAPA", DbType:="Int")>  _
	Public Property QSM_CAPA() As System.Nullable(Of Integer)
		Get
			Return Me._QSM_CAPA
		End Get
		Set
			If (Me._QSM_CAPA.Equals(value) = false) Then
				Me.OnQSM_CAPAChanging(value)
				Me.SendPropertyChanging
				Me._QSM_CAPA = value
				Me.SendPropertyChanged("QSM_CAPA")
				Me.OnQSM_CAPAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT", DbType:="Int")>  _
	Public Property REPORT() As System.Nullable(Of Integer)
		Get
			Return Me._REPORT
		End Get
		Set
			If (Me._REPORT.Equals(value) = false) Then
				Me.OnREPORTChanging(value)
				Me.SendPropertyChanging
				Me._REPORT = value
				Me.SendPropertyChanged("REPORT")
				Me.OnREPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT_FILENAME", DbType:="NVarChar(MAX)")>  _
	Public Property REPORT_FILENAME() As String
		Get
			Return Me._REPORT_FILENAME
		End Get
		Set
			If (String.Equals(Me._REPORT_FILENAME, value) = false) Then
				Me.OnREPORT_FILENAMEChanging(value)
				Me.SendPropertyChanging
				Me._REPORT_FILENAME = value
				Me.SendPropertyChanged("REPORT_FILENAME")
				Me.OnREPORT_FILENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT_FILENAME_REAL", DbType:="NVarChar(MAX)")>  _
	Public Property REPORT_FILENAME_REAL() As String
		Get
			Return Me._REPORT_FILENAME_REAL
		End Get
		Set
			If (String.Equals(Me._REPORT_FILENAME_REAL, value) = false) Then
				Me.OnREPORT_FILENAME_REALChanging(value)
				Me.SendPropertyChanging
				Me._REPORT_FILENAME_REAL = value
				Me.SendPropertyChanged("REPORT_FILENAME_REAL")
				Me.OnREPORT_FILENAME_REALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAMPLE_DRUG_KEEP", DbType:="Int")>  _
	Public Property SAMPLE_DRUG_KEEP() As System.Nullable(Of Integer)
		Get
			Return Me._SAMPLE_DRUG_KEEP
		End Get
		Set
			If (Me._SAMPLE_DRUG_KEEP.Equals(value) = false) Then
				Me.OnSAMPLE_DRUG_KEEPChanging(value)
				Me.SendPropertyChanging
				Me._SAMPLE_DRUG_KEEP = value
				Me.SendPropertyChanged("SAMPLE_DRUG_KEEP")
				Me.OnSAMPLE_DRUG_KEEPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LEAD_POSTPONE_INSPECTION")>  _
Partial Public Class LEAD_POSTPONE_INSPECTION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _REF_CODE As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _POSTPONE_DATE As System.Nullable(Of Date)
	
	Private _ORIGINAL_INSPECTION_DATE As System.Nullable(Of Date)
	
	Private _POSTPONE_REMARK As String
	
	Private _REQUSET_DATE As System.Nullable(Of Date)
	
	Private _YEAR As String
	
	Private _QSM_RESPONSE_DATE As System.Nullable(Of Date)
	
	Private _QSM_CITIZEN_IDA As String
	
	Private _QSM_REMARK As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnPOSTPONE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPOSTPONE_DATEChanged()
    End Sub
    Partial Private Sub OnORIGINAL_INSPECTION_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnORIGINAL_INSPECTION_DATEChanged()
    End Sub
    Partial Private Sub OnPOSTPONE_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnPOSTPONE_REMARKChanged()
    End Sub
    Partial Private Sub OnREQUSET_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUSET_DATEChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnQSM_RESPONSE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQSM_RESPONSE_DATEChanged()
    End Sub
    Partial Private Sub OnQSM_CITIZEN_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnQSM_CITIZEN_IDAChanged()
    End Sub
    Partial Private Sub OnQSM_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnQSM_REMARKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE_DATE", DbType:="DateTime")>  _
	Public Property POSTPONE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._POSTPONE_DATE
		End Get
		Set
			If (Me._POSTPONE_DATE.Equals(value) = false) Then
				Me.OnPOSTPONE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE_DATE = value
				Me.SendPropertyChanged("POSTPONE_DATE")
				Me.OnPOSTPONE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIGINAL_INSPECTION_DATE", DbType:="DateTime")>  _
	Public Property ORIGINAL_INSPECTION_DATE() As System.Nullable(Of Date)
		Get
			Return Me._ORIGINAL_INSPECTION_DATE
		End Get
		Set
			If (Me._ORIGINAL_INSPECTION_DATE.Equals(value) = false) Then
				Me.OnORIGINAL_INSPECTION_DATEChanging(value)
				Me.SendPropertyChanging
				Me._ORIGINAL_INSPECTION_DATE = value
				Me.SendPropertyChanged("ORIGINAL_INSPECTION_DATE")
				Me.OnORIGINAL_INSPECTION_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property POSTPONE_REMARK() As String
		Get
			Return Me._POSTPONE_REMARK
		End Get
		Set
			If (String.Equals(Me._POSTPONE_REMARK, value) = false) Then
				Me.OnPOSTPONE_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE_REMARK = value
				Me.SendPropertyChanged("POSTPONE_REMARK")
				Me.OnPOSTPONE_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUSET_DATE", DbType:="DateTime")>  _
	Public Property REQUSET_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUSET_DATE
		End Get
		Set
			If (Me._REQUSET_DATE.Equals(value) = false) Then
				Me.OnREQUSET_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUSET_DATE = value
				Me.SendPropertyChanged("REQUSET_DATE")
				Me.OnREQUSET_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(4)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QSM_RESPONSE_DATE", DbType:="DateTime")>  _
	Public Property QSM_RESPONSE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._QSM_RESPONSE_DATE
		End Get
		Set
			If (Me._QSM_RESPONSE_DATE.Equals(value) = false) Then
				Me.OnQSM_RESPONSE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._QSM_RESPONSE_DATE = value
				Me.SendPropertyChanged("QSM_RESPONSE_DATE")
				Me.OnQSM_RESPONSE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QSM_CITIZEN_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property QSM_CITIZEN_IDA() As String
		Get
			Return Me._QSM_CITIZEN_IDA
		End Get
		Set
			If (String.Equals(Me._QSM_CITIZEN_IDA, value) = false) Then
				Me.OnQSM_CITIZEN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._QSM_CITIZEN_IDA = value
				Me.SendPropertyChanged("QSM_CITIZEN_IDA")
				Me.OnQSM_CITIZEN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QSM_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property QSM_REMARK() As String
		Get
			Return Me._QSM_REMARK
		End Get
		Set
			If (String.Equals(Me._QSM_REMARK, value) = false) Then
				Me.OnQSM_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._QSM_REMARK = value
				Me.SendPropertyChanged("QSM_REMARK")
				Me.OnQSM_REMARKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LICENSE_LOCATION_ADDRESS")>  _
Partial Public Class LICENSE_LOCATION_ADDRESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _IDENTIFY As String
	
	Private _LOCATION_ADDRESS_thanameplace As String
	
	Private _LOCATION_ADDRESS_thaaddr As String
	
	Private _LOCATION_ADDRESS_thasoi As String
	
	Private _LOCATION_ADDRESS_tharoad As String
	
	Private _LOCATION_ADDRESS_thamu As String
	
	Private _LOCATION_ADDRESS_thathmblnm As String
	
	Private _LOCATION_ADDRESS_thaamphrnm As String
	
	Private _LOCATION_ADDRESS_thachngwtnm As String
	
	Private _LOCATION_ADDRESS_tel As String
	
	Private _LOCATION_ADDRESS_fax As String
	
	Private _LOCATION_ADDRESS_tharoom As String
	
	Private _LOCATION_ADDRESS_thafloor As String
	
	Private _LOCATION_ADDRESS_thabuilding As String
	
	Private _LOCATION_ADDRESS_zipcode As String
	
	Private _LOCATION_ADDRESS_engnameplace As String
	
	Private _LOCATION_ADDRESS_HOUSENO As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_engthmblnm As String
	
	Private _LOCATION_ADDRESS_engamphrnm As String
	
	Private _LOCATION_ADDRESS_engchngwtnm As String
	
	Private _LOCATION_ADDRESS_Mobile As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thanameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddrChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thasoiChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thasoiChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoadChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoadChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thamuChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thamuChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thathmblnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaamphrnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thachngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_telChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_telChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_faxChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_faxChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoomChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoomChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thafloorChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thafloorChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thabuildingChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thabuildingChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_zipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_zipcodeChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engnameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_HOUSENOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_HOUSENOChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engthmblnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engamphrnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engchngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_MobileChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_MobileChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(13)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thanameplace() As String
		Get
			Return Me._LOCATION_ADDRESS_thanameplace
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thanameplace, value) = false) Then
				Me.OnLOCATION_ADDRESS_thanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thanameplace = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thanameplace")
				Me.OnLOCATION_ADDRESS_thanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaaddr() As String
		Get
			Return Me._LOCATION_ADDRESS_thaaddr
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaaddr, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaaddrChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaaddr = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaaddr")
				Me.OnLOCATION_ADDRESS_thaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thasoi() As String
		Get
			Return Me._LOCATION_ADDRESS_thasoi
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thasoi, value) = false) Then
				Me.OnLOCATION_ADDRESS_thasoiChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thasoi = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thasoi")
				Me.OnLOCATION_ADDRESS_thasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tharoad() As String
		Get
			Return Me._LOCATION_ADDRESS_tharoad
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tharoad, value) = false) Then
				Me.OnLOCATION_ADDRESS_tharoadChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tharoad = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tharoad")
				Me.OnLOCATION_ADDRESS_tharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thamu() As String
		Get
			Return Me._LOCATION_ADDRESS_thamu
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thamu, value) = false) Then
				Me.OnLOCATION_ADDRESS_thamuChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thamu = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thamu")
				Me.OnLOCATION_ADDRESS_thamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thathmblnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thathmblnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thathmblnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thathmblnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thathmblnm")
				Me.OnLOCATION_ADDRESS_thathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaamphrnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thaamphrnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaamphrnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaamphrnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaamphrnm")
				Me.OnLOCATION_ADDRESS_thaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thachngwtnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thachngwtnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thachngwtnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thachngwtnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thachngwtnm")
				Me.OnLOCATION_ADDRESS_thachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tel", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tel() As String
		Get
			Return Me._LOCATION_ADDRESS_tel
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tel, value) = false) Then
				Me.OnLOCATION_ADDRESS_telChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tel = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tel")
				Me.OnLOCATION_ADDRESS_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_fax", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_fax() As String
		Get
			Return Me._LOCATION_ADDRESS_fax
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_fax, value) = false) Then
				Me.OnLOCATION_ADDRESS_faxChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_fax = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_fax")
				Me.OnLOCATION_ADDRESS_faxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tharoom", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tharoom() As String
		Get
			Return Me._LOCATION_ADDRESS_tharoom
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tharoom, value) = false) Then
				Me.OnLOCATION_ADDRESS_tharoomChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tharoom = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tharoom")
				Me.OnLOCATION_ADDRESS_tharoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thafloor", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thafloor() As String
		Get
			Return Me._LOCATION_ADDRESS_thafloor
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thafloor, value) = false) Then
				Me.OnLOCATION_ADDRESS_thafloorChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thafloor = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thafloor")
				Me.OnLOCATION_ADDRESS_thafloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thabuilding", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thabuilding() As String
		Get
			Return Me._LOCATION_ADDRESS_thabuilding
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thabuilding, value) = false) Then
				Me.OnLOCATION_ADDRESS_thabuildingChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thabuilding = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thabuilding")
				Me.OnLOCATION_ADDRESS_thabuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_zipcode", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_zipcode() As String
		Get
			Return Me._LOCATION_ADDRESS_zipcode
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_zipcode, value) = false) Then
				Me.OnLOCATION_ADDRESS_zipcodeChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_zipcode = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_zipcode")
				Me.OnLOCATION_ADDRESS_zipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engnameplace", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engnameplace() As String
		Get
			Return Me._LOCATION_ADDRESS_engnameplace
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engnameplace, value) = false) Then
				Me.OnLOCATION_ADDRESS_engnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engnameplace = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engnameplace")
				Me.OnLOCATION_ADDRESS_engnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_HOUSENO", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_HOUSENO() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_HOUSENO
		End Get
		Set
			If (Me._LOCATION_ADDRESS_HOUSENO.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_HOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_HOUSENO = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_HOUSENO")
				Me.OnLOCATION_ADDRESS_HOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engthmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engthmblnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engthmblnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engthmblnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engthmblnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engthmblnm")
				Me.OnLOCATION_ADDRESS_engthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engamphrnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engamphrnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engamphrnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engamphrnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engamphrnm")
				Me.OnLOCATION_ADDRESS_engamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engchngwtnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engchngwtnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engchngwtnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engchngwtnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engchngwtnm")
				Me.OnLOCATION_ADDRESS_engchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_Mobile", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_Mobile() As String
		Get
			Return Me._LOCATION_ADDRESS_Mobile
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_Mobile, value) = false) Then
				Me.OnLOCATION_ADDRESS_MobileChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_Mobile = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_Mobile")
				Me.OnLOCATION_ADDRESS_MobileChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LICENSE_LOCATION_ADDRESS_KEEP")>  _
Partial Public Class LICENSE_LOCATION_ADDRESS_KEEP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _IDENTIFY As String
	
	Private _LOCATION_KEEPs__thanameplace As String
	
	Private _LOCATION_ADDRESS_thaaddr As String
	
	Private _LOCATION_KEEPs__thasoi As String
	
	Private _LOCATION_KEEPs__tharoad As String
	
	Private _LOCATION_KEEPs__thamu As String
	
	Private _LOCATION_KEEPs__thathmblnm As String
	
	Private _LOCATION_KEEPs__thaamphrnm As String
	
	Private _LOCATION_KEEPs__thachngwtnm As String
	
	Private _LOCATION_KEEPs__tel As String
	
	Private _LOCATION_KEEPs__fax As String
	
	Private _LOCATION_KEEPs__tharoom As String
	
	Private _LOCATION_KEEPs__thafloor As String
	
	Private _LOCATION_KEEPs__thabuilding As String
	
	Private _LOCATION_KEEPs__zipcode As String
	
	Private _LOCATION_KEEPs__engnameplace As String
	
	Private _LOCATION_KEEPs__HOUSENO As String
	
	Private _LOCATION_KEEPs__engthmblnm As String
	
	Private _LOCATION_KEEPs__engamphrnm As String
	
	Private _LOCATION_KEEPs__engchngwtnm As String
	
	Private _LOCATION_KEEPs__Mobile As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thanameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddrChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thasoiChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thasoiChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__tharoadChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__tharoadChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thamuChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thamuChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thathmblnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thaamphrnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thachngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__telChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__telChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__faxChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__faxChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__tharoomChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__tharoomChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thafloorChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thafloorChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thabuildingChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__thabuildingChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__zipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__zipcodeChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__engnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__engnameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__HOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__HOUSENOChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__engthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__engthmblnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__engamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__engamphrnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__engchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__engchngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__MobileChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEPs__MobileChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(13)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _thanameplace]", Storage:="_LOCATION_KEEPs__thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__thanameplace() As String
		Get
			Return Me._LOCATION_KEEPs__thanameplace
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__thanameplace, value) = false) Then
				Me.OnLOCATION_KEEPs__thanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__thanameplace = value
				Me.SendPropertyChanged("LOCATION_KEEPs__thanameplace")
				Me.OnLOCATION_KEEPs__thanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaaddr() As String
		Get
			Return Me._LOCATION_ADDRESS_thaaddr
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaaddr, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaaddrChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaaddr = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaaddr")
				Me.OnLOCATION_ADDRESS_thaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _thasoi]", Storage:="_LOCATION_KEEPs__thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__thasoi() As String
		Get
			Return Me._LOCATION_KEEPs__thasoi
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__thasoi, value) = false) Then
				Me.OnLOCATION_KEEPs__thasoiChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__thasoi = value
				Me.SendPropertyChanged("LOCATION_KEEPs__thasoi")
				Me.OnLOCATION_KEEPs__thasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _tharoad]", Storage:="_LOCATION_KEEPs__tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__tharoad() As String
		Get
			Return Me._LOCATION_KEEPs__tharoad
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__tharoad, value) = false) Then
				Me.OnLOCATION_KEEPs__tharoadChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__tharoad = value
				Me.SendPropertyChanged("LOCATION_KEEPs__tharoad")
				Me.OnLOCATION_KEEPs__tharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _thamu]", Storage:="_LOCATION_KEEPs__thamu", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__thamu() As String
		Get
			Return Me._LOCATION_KEEPs__thamu
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__thamu, value) = false) Then
				Me.OnLOCATION_KEEPs__thamuChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__thamu = value
				Me.SendPropertyChanged("LOCATION_KEEPs__thamu")
				Me.OnLOCATION_KEEPs__thamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _thathmblnm]", Storage:="_LOCATION_KEEPs__thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__thathmblnm() As String
		Get
			Return Me._LOCATION_KEEPs__thathmblnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__thathmblnm, value) = false) Then
				Me.OnLOCATION_KEEPs__thathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__thathmblnm = value
				Me.SendPropertyChanged("LOCATION_KEEPs__thathmblnm")
				Me.OnLOCATION_KEEPs__thathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _thaamphrnm]", Storage:="_LOCATION_KEEPs__thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__thaamphrnm() As String
		Get
			Return Me._LOCATION_KEEPs__thaamphrnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__thaamphrnm, value) = false) Then
				Me.OnLOCATION_KEEPs__thaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__thaamphrnm = value
				Me.SendPropertyChanged("LOCATION_KEEPs__thaamphrnm")
				Me.OnLOCATION_KEEPs__thaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _thachngwtnm]", Storage:="_LOCATION_KEEPs__thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__thachngwtnm() As String
		Get
			Return Me._LOCATION_KEEPs__thachngwtnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__thachngwtnm, value) = false) Then
				Me.OnLOCATION_KEEPs__thachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__thachngwtnm = value
				Me.SendPropertyChanged("LOCATION_KEEPs__thachngwtnm")
				Me.OnLOCATION_KEEPs__thachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _tel]", Storage:="_LOCATION_KEEPs__tel", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__tel() As String
		Get
			Return Me._LOCATION_KEEPs__tel
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__tel, value) = false) Then
				Me.OnLOCATION_KEEPs__telChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__tel = value
				Me.SendPropertyChanged("LOCATION_KEEPs__tel")
				Me.OnLOCATION_KEEPs__telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _fax]", Storage:="_LOCATION_KEEPs__fax", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__fax() As String
		Get
			Return Me._LOCATION_KEEPs__fax
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__fax, value) = false) Then
				Me.OnLOCATION_KEEPs__faxChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__fax = value
				Me.SendPropertyChanged("LOCATION_KEEPs__fax")
				Me.OnLOCATION_KEEPs__faxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _tharoom]", Storage:="_LOCATION_KEEPs__tharoom", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__tharoom() As String
		Get
			Return Me._LOCATION_KEEPs__tharoom
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__tharoom, value) = false) Then
				Me.OnLOCATION_KEEPs__tharoomChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__tharoom = value
				Me.SendPropertyChanged("LOCATION_KEEPs__tharoom")
				Me.OnLOCATION_KEEPs__tharoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _thafloor]", Storage:="_LOCATION_KEEPs__thafloor", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__thafloor() As String
		Get
			Return Me._LOCATION_KEEPs__thafloor
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__thafloor, value) = false) Then
				Me.OnLOCATION_KEEPs__thafloorChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__thafloor = value
				Me.SendPropertyChanged("LOCATION_KEEPs__thafloor")
				Me.OnLOCATION_KEEPs__thafloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _thabuilding]", Storage:="_LOCATION_KEEPs__thabuilding", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__thabuilding() As String
		Get
			Return Me._LOCATION_KEEPs__thabuilding
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__thabuilding, value) = false) Then
				Me.OnLOCATION_KEEPs__thabuildingChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__thabuilding = value
				Me.SendPropertyChanged("LOCATION_KEEPs__thabuilding")
				Me.OnLOCATION_KEEPs__thabuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _zipcode]", Storage:="_LOCATION_KEEPs__zipcode", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__zipcode() As String
		Get
			Return Me._LOCATION_KEEPs__zipcode
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__zipcode, value) = false) Then
				Me.OnLOCATION_KEEPs__zipcodeChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__zipcode = value
				Me.SendPropertyChanged("LOCATION_KEEPs__zipcode")
				Me.OnLOCATION_KEEPs__zipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _engnameplace]", Storage:="_LOCATION_KEEPs__engnameplace", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__engnameplace() As String
		Get
			Return Me._LOCATION_KEEPs__engnameplace
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__engnameplace, value) = false) Then
				Me.OnLOCATION_KEEPs__engnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__engnameplace = value
				Me.SendPropertyChanged("LOCATION_KEEPs__engnameplace")
				Me.OnLOCATION_KEEPs__engnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _HOUSENO]", Storage:="_LOCATION_KEEPs__HOUSENO", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__HOUSENO() As String
		Get
			Return Me._LOCATION_KEEPs__HOUSENO
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__HOUSENO, value) = false) Then
				Me.OnLOCATION_KEEPs__HOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__HOUSENO = value
				Me.SendPropertyChanged("LOCATION_KEEPs__HOUSENO")
				Me.OnLOCATION_KEEPs__HOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _engthmblnm]", Storage:="_LOCATION_KEEPs__engthmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__engthmblnm() As String
		Get
			Return Me._LOCATION_KEEPs__engthmblnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__engthmblnm, value) = false) Then
				Me.OnLOCATION_KEEPs__engthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__engthmblnm = value
				Me.SendPropertyChanged("LOCATION_KEEPs__engthmblnm")
				Me.OnLOCATION_KEEPs__engthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _engamphrnm]", Storage:="_LOCATION_KEEPs__engamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__engamphrnm() As String
		Get
			Return Me._LOCATION_KEEPs__engamphrnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__engamphrnm, value) = false) Then
				Me.OnLOCATION_KEEPs__engamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__engamphrnm = value
				Me.SendPropertyChanged("LOCATION_KEEPs__engamphrnm")
				Me.OnLOCATION_KEEPs__engamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _engchngwtnm]", Storage:="_LOCATION_KEEPs__engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__engchngwtnm() As String
		Get
			Return Me._LOCATION_KEEPs__engchngwtnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__engchngwtnm, value) = false) Then
				Me.OnLOCATION_KEEPs__engchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__engchngwtnm = value
				Me.SendPropertyChanged("LOCATION_KEEPs__engchngwtnm")
				Me.OnLOCATION_KEEPs__engchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[LOCATION_KEEPs _Mobile]", Storage:="_LOCATION_KEEPs__Mobile", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEPs__Mobile() As String
		Get
			Return Me._LOCATION_KEEPs__Mobile
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEPs__Mobile, value) = false) Then
				Me.OnLOCATION_KEEPs__MobileChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEPs__Mobile = value
				Me.SendPropertyChanged("LOCATION_KEEPs__Mobile")
				Me.OnLOCATION_KEEPs__MobileChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LICENSE_PHR")>  _
Partial Public Class LICENSE_PHR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PHR_NAME As String
	
	Private _PHR_CTZNO As String
	
	Private _PHR_LEVEL As String
	
	Private _PHR_CHK_JOB As String
	
	Private _PHR_TEXT_JOB As String
	
	Private _PHR_TEXT_NUM As String
	
	Private _PHR_TEXT_WORK_TIME As String
	
	Private _PHR_JOB_TYPE As String
	
	Private _PHR_PREFIX_NAME As String
	
	Private _PHR_VETERINARY_FIELD As String
	
	Private _PHR_MEDICAL_TYPE As String
	
	Private _PHR_CERTIFICATE_TRAINING As String
	
	Private _POSITION_NAME As String
	
	Private _IS_ACTIVE As System.Nullable(Of Integer)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _phr_status As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPHR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_NAMEChanged()
    End Sub
    Partial Private Sub OnPHR_CTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CTZNOChanged()
    End Sub
    Partial Private Sub OnPHR_LEVELChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_LEVELChanged()
    End Sub
    Partial Private Sub OnPHR_CHK_JOBChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CHK_JOBChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_JOBChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_JOBChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_NUMChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_NUMChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_WORK_TIMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_WORK_TIMEChanged()
    End Sub
    Partial Private Sub OnPHR_JOB_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_JOB_TYPEChanged()
    End Sub
    Partial Private Sub OnPHR_PREFIX_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_PREFIX_NAMEChanged()
    End Sub
    Partial Private Sub OnPHR_VETERINARY_FIELDChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_VETERINARY_FIELDChanged()
    End Sub
    Partial Private Sub OnPHR_MEDICAL_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_MEDICAL_TYPEChanged()
    End Sub
    Partial Private Sub OnPHR_CERTIFICATE_TRAININGChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CERTIFICATE_TRAININGChanged()
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanged()
    End Sub
    Partial Private Sub OnIS_ACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_ACTIVEChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onphr_statusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onphr_statusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_NAME() As String
		Get
			Return Me._PHR_NAME
		End Get
		Set
			If (String.Equals(Me._PHR_NAME, value) = false) Then
				Me.OnPHR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_NAME = value
				Me.SendPropertyChanged("PHR_NAME")
				Me.OnPHR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CTZNO", DbType:="NVarChar(13)")>  _
	Public Property PHR_CTZNO() As String
		Get
			Return Me._PHR_CTZNO
		End Get
		Set
			If (String.Equals(Me._PHR_CTZNO, value) = false) Then
				Me.OnPHR_CTZNOChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CTZNO = value
				Me.SendPropertyChanged("PHR_CTZNO")
				Me.OnPHR_CTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_LEVEL", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_LEVEL() As String
		Get
			Return Me._PHR_LEVEL
		End Get
		Set
			If (String.Equals(Me._PHR_LEVEL, value) = false) Then
				Me.OnPHR_LEVELChanging(value)
				Me.SendPropertyChanging
				Me._PHR_LEVEL = value
				Me.SendPropertyChanged("PHR_LEVEL")
				Me.OnPHR_LEVELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CHK_JOB", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CHK_JOB() As String
		Get
			Return Me._PHR_CHK_JOB
		End Get
		Set
			If (String.Equals(Me._PHR_CHK_JOB, value) = false) Then
				Me.OnPHR_CHK_JOBChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CHK_JOB = value
				Me.SendPropertyChanged("PHR_CHK_JOB")
				Me.OnPHR_CHK_JOBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_JOB", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_JOB() As String
		Get
			Return Me._PHR_TEXT_JOB
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_JOB, value) = false) Then
				Me.OnPHR_TEXT_JOBChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_JOB = value
				Me.SendPropertyChanged("PHR_TEXT_JOB")
				Me.OnPHR_TEXT_JOBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_NUM", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_NUM() As String
		Get
			Return Me._PHR_TEXT_NUM
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_NUM, value) = false) Then
				Me.OnPHR_TEXT_NUMChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_NUM = value
				Me.SendPropertyChanged("PHR_TEXT_NUM")
				Me.OnPHR_TEXT_NUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_WORK_TIME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_WORK_TIME() As String
		Get
			Return Me._PHR_TEXT_WORK_TIME
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_WORK_TIME, value) = false) Then
				Me.OnPHR_TEXT_WORK_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_WORK_TIME = value
				Me.SendPropertyChanged("PHR_TEXT_WORK_TIME")
				Me.OnPHR_TEXT_WORK_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_JOB_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_JOB_TYPE() As String
		Get
			Return Me._PHR_JOB_TYPE
		End Get
		Set
			If (String.Equals(Me._PHR_JOB_TYPE, value) = false) Then
				Me.OnPHR_JOB_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_JOB_TYPE = value
				Me.SendPropertyChanged("PHR_JOB_TYPE")
				Me.OnPHR_JOB_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_PREFIX_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_PREFIX_NAME() As String
		Get
			Return Me._PHR_PREFIX_NAME
		End Get
		Set
			If (String.Equals(Me._PHR_PREFIX_NAME, value) = false) Then
				Me.OnPHR_PREFIX_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_PREFIX_NAME = value
				Me.SendPropertyChanged("PHR_PREFIX_NAME")
				Me.OnPHR_PREFIX_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_VETERINARY_FIELD", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_VETERINARY_FIELD() As String
		Get
			Return Me._PHR_VETERINARY_FIELD
		End Get
		Set
			If (String.Equals(Me._PHR_VETERINARY_FIELD, value) = false) Then
				Me.OnPHR_VETERINARY_FIELDChanging(value)
				Me.SendPropertyChanging
				Me._PHR_VETERINARY_FIELD = value
				Me.SendPropertyChanged("PHR_VETERINARY_FIELD")
				Me.OnPHR_VETERINARY_FIELDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_MEDICAL_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_MEDICAL_TYPE() As String
		Get
			Return Me._PHR_MEDICAL_TYPE
		End Get
		Set
			If (String.Equals(Me._PHR_MEDICAL_TYPE, value) = false) Then
				Me.OnPHR_MEDICAL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_MEDICAL_TYPE = value
				Me.SendPropertyChanged("PHR_MEDICAL_TYPE")
				Me.OnPHR_MEDICAL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CERTIFICATE_TRAINING", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CERTIFICATE_TRAINING() As String
		Get
			Return Me._PHR_CERTIFICATE_TRAINING
		End Get
		Set
			If (String.Equals(Me._PHR_CERTIFICATE_TRAINING, value) = false) Then
				Me.OnPHR_CERTIFICATE_TRAININGChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CERTIFICATE_TRAINING = value
				Me.SendPropertyChanged("PHR_CERTIFICATE_TRAINING")
				Me.OnPHR_CERTIFICATE_TRAININGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_NAME() As String
		Get
			Return Me._POSITION_NAME
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME, value) = false) Then
				Me.OnPOSITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME = value
				Me.SendPropertyChanged("POSITION_NAME")
				Me.OnPOSITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ACTIVE", DbType:="Int")>  _
	Public Property IS_ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._IS_ACTIVE
		End Get
		Set
			If (Me._IS_ACTIVE.Equals(value) = false) Then
				Me.OnIS_ACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ACTIVE = value
				Me.SendPropertyChanged("IS_ACTIVE")
				Me.OnIS_ACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phr_status", DbType:="Int")>  _
	Public Property phr_status() As System.Nullable(Of Integer)
		Get
			Return Me._phr_status
		End Get
		Set
			If (Me._phr_status.Equals(value) = false) Then
				Me.Onphr_statusChanging(value)
				Me.SendPropertyChanging
				Me._phr_status = value
				Me.SendPropertyChanged("phr_status")
				Me.Onphr_statusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CER_TYPE")>  _
Partial Public Class MAS_CER_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CER_TYPE_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCER_TYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCER_TYPE_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CER_TYPE_NAME() As String
		Get
			Return Me._CER_TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._CER_TYPE_NAME, value) = false) Then
				Me.OnCER_TYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CER_TYPE_NAME = value
				Me.SendPropertyChanged("CER_TYPE_NAME")
				Me.OnCER_TYPE_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_FUNCTION_CENTER")>  _
Partial Public Class MAS_FUNCTION_CENTER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FUNCTION_CODE As String
	
	Private _FUNCTION_NAME As String
	
	Private _FUNCTION_DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFUNCTION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnFUNCTION_CODEChanged()
    End Sub
    Partial Private Sub OnFUNCTION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFUNCTION_NAMEChanged()
    End Sub
    Partial Private Sub OnFUNCTION_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnFUNCTION_DESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FUNCTION_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property FUNCTION_CODE() As String
		Get
			Return Me._FUNCTION_CODE
		End Get
		Set
			If (String.Equals(Me._FUNCTION_CODE, value) = false) Then
				Me.OnFUNCTION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._FUNCTION_CODE = value
				Me.SendPropertyChanged("FUNCTION_CODE")
				Me.OnFUNCTION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FUNCTION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FUNCTION_NAME() As String
		Get
			Return Me._FUNCTION_NAME
		End Get
		Set
			If (String.Equals(Me._FUNCTION_NAME, value) = false) Then
				Me.OnFUNCTION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FUNCTION_NAME = value
				Me.SendPropertyChanged("FUNCTION_NAME")
				Me.OnFUNCTION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FUNCTION_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property FUNCTION_DESCRIPTION() As String
		Get
			Return Me._FUNCTION_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._FUNCTION_DESCRIPTION, value) = false) Then
				Me.OnFUNCTION_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._FUNCTION_DESCRIPTION = value
				Me.SendPropertyChanged("FUNCTION_DESCRIPTION")
				Me.OnFUNCTION_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_POST_TYPE")>  _
Partial Public Class MAS_POST_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TYPE As System.Nullable(Of Integer)
	
	Private _TYPE_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="Int")>  _
	Public Property TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE
		End Get
		Set
			If (Me._TYPE.Equals(value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_NAME() As String
		Get
			Return Me._TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_NAME, value) = false) Then
				Me.OnTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_NAME = value
				Me.SendPropertyChanged("TYPE_NAME")
				Me.OnTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROCESS_TYPE")>  _
Partial Public Class MAS_PROCESS_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ROLE As String
	
	Private _TYPE As System.Nullable(Of Integer)
	
	Private _PROCESS_NAME As String
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnROLEChanging(value As String)
    End Sub
    Partial Private Sub OnROLEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROLE", DbType:="NVarChar(50)")>  _
	Public Property ROLE() As String
		Get
			Return Me._ROLE
		End Get
		Set
			If (String.Equals(Me._ROLE, value) = false) Then
				Me.OnROLEChanging(value)
				Me.SendPropertyChanging
				Me._ROLE = value
				Me.SendPropertyChanged("ROLE")
				Me.OnROLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="Int")>  _
	Public Property TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE
		End Get
		Set
			If (Me._TYPE.Equals(value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_NAME", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_NAME() As String
		Get
			Return Me._PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._PROCESS_NAME, value) = false) Then
				Me.OnPROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_NAME = value
				Me.SendPropertyChanged("PROCESS_NAME")
				Me.OnPROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STAFF")>  _
Partial Public Class MAS_STAFF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PREFIX As String
	
	Private _PREFIX_ID As System.Nullable(Of Integer)
	
	Private _STAFF_NAME As String
	
	Private _STAFF_LASTNAME As String
	
	Private _STAFF_FULLNAME As String
	
	Private _STAFF_POSITION As String
	
	Private _STAFF_ROLE As String
	
	Private _STAFF_ROLE_CD As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _TEAM As String
	
	Private _STATUS As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPREFIXChanging(value As String)
    End Sub
    Partial Private Sub OnPREFIXChanged()
    End Sub
    Partial Private Sub OnPREFIX_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREFIX_IDChanged()
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanged()
    End Sub
    Partial Private Sub OnSTAFF_LASTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_LASTNAMEChanged()
    End Sub
    Partial Private Sub OnSTAFF_FULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_FULLNAMEChanged()
    End Sub
    Partial Private Sub OnSTAFF_POSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_POSITIONChanged()
    End Sub
    Partial Private Sub OnSTAFF_ROLEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_ROLEChanged()
    End Sub
    Partial Private Sub OnSTAFF_ROLE_CDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTAFF_ROLE_CDChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnTEAMChanging(value As String)
    End Sub
    Partial Private Sub OnTEAMChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX", DbType:="NVarChar(MAX)")>  _
	Public Property PREFIX() As String
		Get
			Return Me._PREFIX
		End Get
		Set
			If (String.Equals(Me._PREFIX, value) = false) Then
				Me.OnPREFIXChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX = value
				Me.SendPropertyChanged("PREFIX")
				Me.OnPREFIXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX_ID", DbType:="Int")>  _
	Public Property PREFIX_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PREFIX_ID
		End Get
		Set
			If (Me._PREFIX_ID.Equals(value) = false) Then
				Me.OnPREFIX_IDChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX_ID = value
				Me.SendPropertyChanged("PREFIX_ID")
				Me.OnPREFIX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_NAME() As String
		Get
			Return Me._STAFF_NAME
		End Get
		Set
			If (String.Equals(Me._STAFF_NAME, value) = false) Then
				Me.OnSTAFF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_NAME = value
				Me.SendPropertyChanged("STAFF_NAME")
				Me.OnSTAFF_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_LASTNAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_LASTNAME() As String
		Get
			Return Me._STAFF_LASTNAME
		End Get
		Set
			If (String.Equals(Me._STAFF_LASTNAME, value) = false) Then
				Me.OnSTAFF_LASTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_LASTNAME = value
				Me.SendPropertyChanged("STAFF_LASTNAME")
				Me.OnSTAFF_LASTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_FULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_FULLNAME() As String
		Get
			Return Me._STAFF_FULLNAME
		End Get
		Set
			If (String.Equals(Me._STAFF_FULLNAME, value) = false) Then
				Me.OnSTAFF_FULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_FULLNAME = value
				Me.SendPropertyChanged("STAFF_FULLNAME")
				Me.OnSTAFF_FULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_POSITION", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_POSITION() As String
		Get
			Return Me._STAFF_POSITION
		End Get
		Set
			If (String.Equals(Me._STAFF_POSITION, value) = false) Then
				Me.OnSTAFF_POSITIONChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_POSITION = value
				Me.SendPropertyChanged("STAFF_POSITION")
				Me.OnSTAFF_POSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_ROLE", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_ROLE() As String
		Get
			Return Me._STAFF_ROLE
		End Get
		Set
			If (String.Equals(Me._STAFF_ROLE, value) = false) Then
				Me.OnSTAFF_ROLEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_ROLE = value
				Me.SendPropertyChanged("STAFF_ROLE")
				Me.OnSTAFF_ROLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_ROLE_CD", DbType:="Int")>  _
	Public Property STAFF_ROLE_CD() As System.Nullable(Of Integer)
		Get
			Return Me._STAFF_ROLE_CD
		End Get
		Set
			If (Me._STAFF_ROLE_CD.Equals(value) = false) Then
				Me.OnSTAFF_ROLE_CDChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_ROLE_CD = value
				Me.SendPropertyChanged("STAFF_ROLE_CD")
				Me.OnSTAFF_ROLE_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEAM", DbType:="NVarChar(MAX)")>  _
	Public Property TEAM() As String
		Get
			Return Me._TEAM
		End Get
		Set
			If (String.Equals(Me._TEAM, value) = false) Then
				Me.OnTEAMChanging(value)
				Me.SendPropertyChanging
				Me._TEAM = value
				Me.SendPropertyChanged("TEAM")
				Me.OnTEAMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Bit")>  _
	Public Property STATUS() As System.Nullable(Of Boolean)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STAFF_WORK")>  _
Partial Public Class MAS_STAFF_WORK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CTZNO As String
	
	Private _PVNCD As String
	
	Private _AMPHUR As String
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _NAME As String
	
	Private _SURNAME As String
	
	Private _PREFIX As String
	
	Private _REGION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNOChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As String)
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnAMPHURChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHURChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnSURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSURNAMEChanged()
    End Sub
    Partial Private Sub OnPREFIXChanging(value As String)
    End Sub
    Partial Private Sub OnPREFIXChanged()
    End Sub
    Partial Private Sub OnREGIONChanging(value As String)
    End Sub
    Partial Private Sub OnREGIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO() As String
		Get
			Return Me._CTZNO
		End Get
		Set
			If (String.Equals(Me._CTZNO, value) = false) Then
				Me.OnCTZNOChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO = value
				Me.SendPropertyChanged("CTZNO")
				Me.OnCTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="VarChar(50)")>  _
	Public Property PVNCD() As String
		Get
			Return Me._PVNCD
		End Get
		Set
			If (String.Equals(Me._PVNCD, value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR", DbType:="VarChar(50)")>  _
	Public Property AMPHUR() As String
		Get
			Return Me._AMPHUR
		End Get
		Set
			If (String.Equals(Me._AMPHUR, value) = false) Then
				Me.OnAMPHURChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR = value
				Me.SendPropertyChanged("AMPHUR")
				Me.OnAMPHURChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SURNAME() As String
		Get
			Return Me._SURNAME
		End Get
		Set
			If (String.Equals(Me._SURNAME, value) = false) Then
				Me.OnSURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SURNAME = value
				Me.SendPropertyChanged("SURNAME")
				Me.OnSURNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX", DbType:="NVarChar(MAX)")>  _
	Public Property PREFIX() As String
		Get
			Return Me._PREFIX
		End Get
		Set
			If (String.Equals(Me._PREFIX, value) = false) Then
				Me.OnPREFIXChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX = value
				Me.SendPropertyChanged("PREFIX")
				Me.OnPREFIXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGION", DbType:="NVarChar(MAX)")>  _
	Public Property REGION() As String
		Get
			Return Me._REGION
		End Get
		Set
			If (String.Equals(Me._REGION, value) = false) Then
				Me.OnREGIONChanging(value)
				Me.SendPropertyChanging
				Me._REGION = value
				Me.SendPropertyChanged("REGION")
				Me.OnREGIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STAFF_WORK_DTL")>  _
Partial Public Class MAS_STAFF_WORK_DTL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CTZNO As String
	
	Private _AMPHUR_NM As String
	
	Private _AMPHUR_CD As String
	
	Private _NAME As String
	
	Private _SURNAME As String
	
	Private _PVCODE As String
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _GMP As System.Nullable(Of Integer)
	
	Private _SUR As System.Nullable(Of Integer)
	
	Private _SAMPLE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNOChanged()
    End Sub
    Partial Private Sub OnAMPHUR_NMChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHUR_NMChanged()
    End Sub
    Partial Private Sub OnAMPHUR_CDChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHUR_CDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnSURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSURNAMEChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnGMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGMPChanged()
    End Sub
    Partial Private Sub OnSURChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSURChanged()
    End Sub
    Partial Private Sub OnSAMPLEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSAMPLEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO() As String
		Get
			Return Me._CTZNO
		End Get
		Set
			If (String.Equals(Me._CTZNO, value) = false) Then
				Me.OnCTZNOChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO = value
				Me.SendPropertyChanged("CTZNO")
				Me.OnCTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_NM", DbType:="NVarChar(MAX)")>  _
	Public Property AMPHUR_NM() As String
		Get
			Return Me._AMPHUR_NM
		End Get
		Set
			If (String.Equals(Me._AMPHUR_NM, value) = false) Then
				Me.OnAMPHUR_NMChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_NM = value
				Me.SendPropertyChanged("AMPHUR_NM")
				Me.OnAMPHUR_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_CD", DbType:="VarChar(50)")>  _
	Public Property AMPHUR_CD() As String
		Get
			Return Me._AMPHUR_CD
		End Get
		Set
			If (String.Equals(Me._AMPHUR_CD, value) = false) Then
				Me.OnAMPHUR_CDChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_CD = value
				Me.SendPropertyChanged("AMPHUR_CD")
				Me.OnAMPHUR_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SURNAME() As String
		Get
			Return Me._SURNAME
		End Get
		Set
			If (String.Equals(Me._SURNAME, value) = false) Then
				Me.OnSURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SURNAME = value
				Me.SendPropertyChanged("SURNAME")
				Me.OnSURNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="VarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GMP", DbType:="Int")>  _
	Public Property GMP() As System.Nullable(Of Integer)
		Get
			Return Me._GMP
		End Get
		Set
			If (Me._GMP.Equals(value) = false) Then
				Me.OnGMPChanging(value)
				Me.SendPropertyChanging
				Me._GMP = value
				Me.SendPropertyChanged("GMP")
				Me.OnGMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUR", DbType:="Int")>  _
	Public Property SUR() As System.Nullable(Of Integer)
		Get
			Return Me._SUR
		End Get
		Set
			If (Me._SUR.Equals(value) = false) Then
				Me.OnSURChanging(value)
				Me.SendPropertyChanging
				Me._SUR = value
				Me.SendPropertyChanged("SUR")
				Me.OnSURChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAMPLE", DbType:="Int")>  _
	Public Property SAMPLE() As System.Nullable(Of Integer)
		Get
			Return Me._SAMPLE
		End Get
		Set
			If (Me._SAMPLE.Equals(value) = false) Then
				Me.OnSAMPLEChanging(value)
				Me.SendPropertyChanging
				Me._SAMPLE = value
				Me.SendPropertyChanged("SAMPLE")
				Me.OnSAMPLEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STATUS")>  _
Partial Public Class MAS_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_NAME As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_GROUP As System.Nullable(Of Integer)
	
	Private _READ_ONLY_ID As System.Nullable(Of Integer)
	
	Private _CAL_TYPE As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _GROUP_DDL_SHOW As System.Nullable(Of Integer)
	
	Private _CAPAs As EntitySet(Of CAPA)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanged()
    End Sub
    Partial Private Sub OnREAD_ONLY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREAD_ONLY_IDChanged()
    End Sub
    Partial Private Sub OnCAL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAL_TYPEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnGROUP_DDL_SHOWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_DDL_SHOWChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._CAPAs = New EntitySet(Of CAPA)(AddressOf Me.attach_CAPAs, AddressOf Me.detach_CAPAs)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_NAME() As String
		Get
			Return Me._STATUS_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME, value) = false) Then
				Me.OnSTATUS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME = value
				Me.SendPropertyChanged("STATUS_NAME")
				Me.OnSTATUS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_GROUP", DbType:="Int")>  _
	Public Property STATUS_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_GROUP
		End Get
		Set
			If (Me._STATUS_GROUP.Equals(value) = false) Then
				Me.OnSTATUS_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_GROUP = value
				Me.SendPropertyChanged("STATUS_GROUP")
				Me.OnSTATUS_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_READ_ONLY_ID", DbType:="Int")>  _
	Public Property READ_ONLY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._READ_ONLY_ID
		End Get
		Set
			If (Me._READ_ONLY_ID.Equals(value) = false) Then
				Me.OnREAD_ONLY_IDChanging(value)
				Me.SendPropertyChanging
				Me._READ_ONLY_ID = value
				Me.SendPropertyChanged("READ_ONLY_ID")
				Me.OnREAD_ONLY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAL_TYPE", DbType:="Int")>  _
	Public Property CAL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CAL_TYPE
		End Get
		Set
			If (Me._CAL_TYPE.Equals(value) = false) Then
				Me.OnCAL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CAL_TYPE = value
				Me.SendPropertyChanged("CAL_TYPE")
				Me.OnCAL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_DDL_SHOW", DbType:="Int")>  _
	Public Property GROUP_DDL_SHOW() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_DDL_SHOW
		End Get
		Set
			If (Me._GROUP_DDL_SHOW.Equals(value) = false) Then
				Me.OnGROUP_DDL_SHOWChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_DDL_SHOW = value
				Me.SendPropertyChanged("GROUP_DDL_SHOW")
				Me.OnGROUP_DDL_SHOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MAS_STATUS_CAPA", Storage:="_CAPAs", ThisKey:="IDA", OtherKey:="STATUS_ID")>  _
	Public Property CAPAs() As EntitySet(Of CAPA)
		Get
			Return Me._CAPAs
		End Get
		Set
			Me._CAPAs.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_CAPAs(ByVal entity As CAPA)
		Me.SendPropertyChanging
		entity.MAS_STATUS = Me
	End Sub
	
	Private Sub detach_CAPAs(ByVal entity As CAPA)
		Me.SendPropertyChanging
		entity.MAS_STATUS = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TEMPLATE_PROCESS")>  _
Partial Public Class MAS_TEMPLATE_PROCESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _LCNTYPECD As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _GROUPS As System.Nullable(Of Integer)
	
	Private _PREVIEW As System.Nullable(Of Integer)
	
	Private _PDF_TEMPLATE As String
	
	Private _XML_PATH As String
	
	Private _PDF_OUTPUT As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnLCNTYPECDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTYPECDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnGROUPSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUPSChanged()
    End Sub
    Partial Private Sub OnPREVIEWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREVIEWChanged()
    End Sub
    Partial Private Sub OnPDF_TEMPLATEChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_TEMPLATEChanged()
    End Sub
    Partial Private Sub OnXML_PATHChanging(value As String)
    End Sub
    Partial Private Sub OnXML_PATHChanged()
    End Sub
    Partial Private Sub OnPDF_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_OUTPUTChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTYPECD", DbType:="NVarChar(10)")>  _
	Public Property LCNTYPECD() As String
		Get
			Return Me._LCNTYPECD
		End Get
		Set
			If (String.Equals(Me._LCNTYPECD, value) = false) Then
				Me.OnLCNTYPECDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTYPECD = value
				Me.SendPropertyChanged("LCNTYPECD")
				Me.OnLCNTYPECDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPS", DbType:="Int")>  _
	Public Property GROUPS() As System.Nullable(Of Integer)
		Get
			Return Me._GROUPS
		End Get
		Set
			If (Me._GROUPS.Equals(value) = false) Then
				Me.OnGROUPSChanging(value)
				Me.SendPropertyChanging
				Me._GROUPS = value
				Me.SendPropertyChanged("GROUPS")
				Me.OnGROUPSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREVIEW", DbType:="Int")>  _
	Public Property PREVIEW() As System.Nullable(Of Integer)
		Get
			Return Me._PREVIEW
		End Get
		Set
			If (Me._PREVIEW.Equals(value) = false) Then
				Me.OnPREVIEWChanging(value)
				Me.SendPropertyChanging
				Me._PREVIEW = value
				Me.SendPropertyChanged("PREVIEW")
				Me.OnPREVIEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_TEMPLATE", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_TEMPLATE() As String
		Get
			Return Me._PDF_TEMPLATE
		End Get
		Set
			If (String.Equals(Me._PDF_TEMPLATE, value) = false) Then
				Me.OnPDF_TEMPLATEChanging(value)
				Me.SendPropertyChanging
				Me._PDF_TEMPLATE = value
				Me.SendPropertyChanged("PDF_TEMPLATE")
				Me.OnPDF_TEMPLATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property XML_PATH() As String
		Get
			Return Me._XML_PATH
		End Get
		Set
			If (String.Equals(Me._XML_PATH, value) = false) Then
				Me.OnXML_PATHChanging(value)
				Me.SendPropertyChanging
				Me._XML_PATH = value
				Me.SendPropertyChanged("XML_PATH")
				Me.OnXML_PATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_OUTPUT() As String
		Get
			Return Me._PDF_OUTPUT
		End Get
		Set
			If (String.Equals(Me._PDF_OUTPUT, value) = false) Then
				Me.OnPDF_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._PDF_OUTPUT = value
				Me.SendPropertyChanged("PDF_OUTPUT")
				Me.OnPDF_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MEMO")>  _
Partial Public Class MEMO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _REF_CODE As String
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _PLAN_IDA As System.Nullable(Of Integer)
	
	Private _MEMO_MESSAGE As String
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _IDENTIFY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnPLAN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_IDAChanged()
    End Sub
    Partial Private Sub OnMEMO_MESSAGEChanging(value As String)
    End Sub
    Partial Private Sub OnMEMO_MESSAGEChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_IDA", DbType:="Int")>  _
	Public Property PLAN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_IDA
		End Get
		Set
			If (Me._PLAN_IDA.Equals(value) = false) Then
				Me.OnPLAN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_IDA = value
				Me.SendPropertyChanged("PLAN_IDA")
				Me.OnPLAN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEMO_MESSAGE", DbType:="NVarChar(MAX)")>  _
	Public Property MEMO_MESSAGE() As String
		Get
			Return Me._MEMO_MESSAGE
		End Get
		Set
			If (String.Equals(Me._MEMO_MESSAGE, value) = false) Then
				Me.OnMEMO_MESSAGEChanging(value)
				Me.SendPropertyChanging
				Me._MEMO_MESSAGE = value
				Me.SendPropertyChanged("MEMO_MESSAGE")
				Me.OnMEMO_MESSAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_CHECKPLACE_DRUGOLD")>  _
Partial Public Class MULTI_PDF_CHECKPLACE_DRUGOLD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _COPY_LICENSE As String
	
	Private _DATA_SMF As String
	
	Private _LIST_OF_SOPS As String
	
	Private _WARING_INTOP As String
	
	Private _OTHER As String
	
	Private _INCLUDE As String
	
	Private _NAME_OPER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnCOPY_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnCOPY_LICENSEChanged()
    End Sub
    Partial Private Sub OnDATA_SMFChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_SMFChanged()
    End Sub
    Partial Private Sub OnLIST_OF_SOPSChanging(value As String)
    End Sub
    Partial Private Sub OnLIST_OF_SOPSChanged()
    End Sub
    Partial Private Sub OnWARING_INTOPChanging(value As String)
    End Sub
    Partial Private Sub OnWARING_INTOPChanged()
    End Sub
    Partial Private Sub OnOTHERChanging(value As String)
    End Sub
    Partial Private Sub OnOTHERChanged()
    End Sub
    Partial Private Sub OnINCLUDEChanging(value As String)
    End Sub
    Partial Private Sub OnINCLUDEChanged()
    End Sub
    Partial Private Sub OnNAME_OPERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OPERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COPY_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property COPY_LICENSE() As String
		Get
			Return Me._COPY_LICENSE
		End Get
		Set
			If (String.Equals(Me._COPY_LICENSE, value) = false) Then
				Me.OnCOPY_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._COPY_LICENSE = value
				Me.SendPropertyChanged("COPY_LICENSE")
				Me.OnCOPY_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_SMF", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_SMF() As String
		Get
			Return Me._DATA_SMF
		End Get
		Set
			If (String.Equals(Me._DATA_SMF, value) = false) Then
				Me.OnDATA_SMFChanging(value)
				Me.SendPropertyChanging
				Me._DATA_SMF = value
				Me.SendPropertyChanged("DATA_SMF")
				Me.OnDATA_SMFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST_OF_SOPS", DbType:="NVarChar(MAX)")>  _
	Public Property LIST_OF_SOPS() As String
		Get
			Return Me._LIST_OF_SOPS
		End Get
		Set
			If (String.Equals(Me._LIST_OF_SOPS, value) = false) Then
				Me.OnLIST_OF_SOPSChanging(value)
				Me.SendPropertyChanging
				Me._LIST_OF_SOPS = value
				Me.SendPropertyChanged("LIST_OF_SOPS")
				Me.OnLIST_OF_SOPSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARING_INTOP", DbType:="NVarChar(MAX)")>  _
	Public Property WARING_INTOP() As String
		Get
			Return Me._WARING_INTOP
		End Get
		Set
			If (String.Equals(Me._WARING_INTOP, value) = false) Then
				Me.OnWARING_INTOPChanging(value)
				Me.SendPropertyChanging
				Me._WARING_INTOP = value
				Me.SendPropertyChanged("WARING_INTOP")
				Me.OnWARING_INTOPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER() As String
		Get
			Return Me._OTHER
		End Get
		Set
			If (String.Equals(Me._OTHER, value) = false) Then
				Me.OnOTHERChanging(value)
				Me.SendPropertyChanging
				Me._OTHER = value
				Me.SendPropertyChanged("OTHER")
				Me.OnOTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCLUDE", DbType:="NVarChar(MAX)")>  _
	Public Property INCLUDE() As String
		Get
			Return Me._INCLUDE
		End Get
		Set
			If (String.Equals(Me._INCLUDE, value) = false) Then
				Me.OnINCLUDEChanging(value)
				Me.SendPropertyChanging
				Me._INCLUDE = value
				Me.SendPropertyChanged("INCLUDE")
				Me.OnINCLUDEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OPER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OPER() As String
		Get
			Return Me._NAME_OPER
		End Get
		Set
			If (String.Equals(Me._NAME_OPER, value) = false) Then
				Me.OnNAME_OPERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OPER = value
				Me.SendPropertyChanged("NAME_OPER")
				Me.OnNAME_OPERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_CHECKPLACE_GMPCER")>  _
Partial Public Class MULTI_PDF_CHECKPLACE_GMPCER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _COPY_LICENSE As String
	
	Private _DATA_MASTERP As String
	
	Private _RECOM_QUALITY As String
	
	Private _LIST_OF_SOPS As String
	
	Private _OTHER As String
	
	Private _INCULED_OTHER As String
	
	Private _NAME_OPER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnCOPY_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnCOPY_LICENSEChanged()
    End Sub
    Partial Private Sub OnDATA_MASTERPChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_MASTERPChanged()
    End Sub
    Partial Private Sub OnRECOM_QUALITYChanging(value As String)
    End Sub
    Partial Private Sub OnRECOM_QUALITYChanged()
    End Sub
    Partial Private Sub OnLIST_OF_SOPSChanging(value As String)
    End Sub
    Partial Private Sub OnLIST_OF_SOPSChanged()
    End Sub
    Partial Private Sub OnOTHERChanging(value As String)
    End Sub
    Partial Private Sub OnOTHERChanged()
    End Sub
    Partial Private Sub OnINCULED_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnINCULED_OTHERChanged()
    End Sub
    Partial Private Sub OnNAME_OPERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OPERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COPY_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property COPY_LICENSE() As String
		Get
			Return Me._COPY_LICENSE
		End Get
		Set
			If (String.Equals(Me._COPY_LICENSE, value) = false) Then
				Me.OnCOPY_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._COPY_LICENSE = value
				Me.SendPropertyChanged("COPY_LICENSE")
				Me.OnCOPY_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_MASTERP", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_MASTERP() As String
		Get
			Return Me._DATA_MASTERP
		End Get
		Set
			If (String.Equals(Me._DATA_MASTERP, value) = false) Then
				Me.OnDATA_MASTERPChanging(value)
				Me.SendPropertyChanging
				Me._DATA_MASTERP = value
				Me.SendPropertyChanged("DATA_MASTERP")
				Me.OnDATA_MASTERPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECOM_QUALITY", DbType:="NVarChar(MAX)")>  _
	Public Property RECOM_QUALITY() As String
		Get
			Return Me._RECOM_QUALITY
		End Get
		Set
			If (String.Equals(Me._RECOM_QUALITY, value) = false) Then
				Me.OnRECOM_QUALITYChanging(value)
				Me.SendPropertyChanging
				Me._RECOM_QUALITY = value
				Me.SendPropertyChanged("RECOM_QUALITY")
				Me.OnRECOM_QUALITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST_OF_SOPS", DbType:="NVarChar(MAX)")>  _
	Public Property LIST_OF_SOPS() As String
		Get
			Return Me._LIST_OF_SOPS
		End Get
		Set
			If (String.Equals(Me._LIST_OF_SOPS, value) = false) Then
				Me.OnLIST_OF_SOPSChanging(value)
				Me.SendPropertyChanging
				Me._LIST_OF_SOPS = value
				Me.SendPropertyChanged("LIST_OF_SOPS")
				Me.OnLIST_OF_SOPSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER() As String
		Get
			Return Me._OTHER
		End Get
		Set
			If (String.Equals(Me._OTHER, value) = false) Then
				Me.OnOTHERChanging(value)
				Me.SendPropertyChanging
				Me._OTHER = value
				Me.SendPropertyChanged("OTHER")
				Me.OnOTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCULED_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property INCULED_OTHER() As String
		Get
			Return Me._INCULED_OTHER
		End Get
		Set
			If (String.Equals(Me._INCULED_OTHER, value) = false) Then
				Me.OnINCULED_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._INCULED_OTHER = value
				Me.SendPropertyChanged("INCULED_OTHER")
				Me.OnINCULED_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OPER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OPER() As String
		Get
			Return Me._NAME_OPER
		End Get
		Set
			If (String.Equals(Me._NAME_OPER, value) = false) Then
				Me.OnNAME_OPERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OPER = value
				Me.SendPropertyChanged("NAME_OPER")
				Me.OnNAME_OPERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_LIST_DRUGCHARGED")>  _
Partial Public Class MULTI_PDF_LIST_DRUGCHARGED
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _NAME_DRUG As String
	
	Private _NUMBER_CER As String
	
	Private _LOT_DATE As String
	
	Private _NUM_VOLUME As String
	
	Private _NAME_ADD As String
	
	Private _LOCATION_ADD As String
	
	Private _REASON As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnNAME_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_DRUGChanged()
    End Sub
    Partial Private Sub OnNUMBER_CERChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_CERChanged()
    End Sub
    Partial Private Sub OnLOT_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnLOT_DATEChanged()
    End Sub
    Partial Private Sub OnNUM_VOLUMEChanging(value As String)
    End Sub
    Partial Private Sub OnNUM_VOLUMEChanged()
    End Sub
    Partial Private Sub OnNAME_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDChanged()
    End Sub
    Partial Private Sub OnREASONChanging(value As String)
    End Sub
    Partial Private Sub OnREASONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_DRUG() As String
		Get
			Return Me._NAME_DRUG
		End Get
		Set
			If (String.Equals(Me._NAME_DRUG, value) = false) Then
				Me.OnNAME_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._NAME_DRUG = value
				Me.SendPropertyChanged("NAME_DRUG")
				Me.OnNAME_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_CER", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_CER() As String
		Get
			Return Me._NUMBER_CER
		End Get
		Set
			If (String.Equals(Me._NUMBER_CER, value) = false) Then
				Me.OnNUMBER_CERChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_CER = value
				Me.SendPropertyChanged("NUMBER_CER")
				Me.OnNUMBER_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOT_DATE", DbType:="NVarChar(MAX)")>  _
	Public Property LOT_DATE() As String
		Get
			Return Me._LOT_DATE
		End Get
		Set
			If (String.Equals(Me._LOT_DATE, value) = false) Then
				Me.OnLOT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LOT_DATE = value
				Me.SendPropertyChanged("LOT_DATE")
				Me.OnLOT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM_VOLUME", DbType:="NVarChar(MAX)")>  _
	Public Property NUM_VOLUME() As String
		Get
			Return Me._NUM_VOLUME
		End Get
		Set
			If (String.Equals(Me._NUM_VOLUME, value) = false) Then
				Me.OnNUM_VOLUMEChanging(value)
				Me.SendPropertyChanging
				Me._NUM_VOLUME = value
				Me.SendPropertyChanged("NUM_VOLUME")
				Me.OnNUM_VOLUMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADD() As String
		Get
			Return Me._NAME_ADD
		End Get
		Set
			If (String.Equals(Me._NAME_ADD, value) = false) Then
				Me.OnNAME_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADD = value
				Me.SendPropertyChanged("NAME_ADD")
				Me.OnNAME_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADD() As String
		Get
			Return Me._LOCATION_ADD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADD, value) = false) Then
				Me.OnLOCATION_ADDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADD = value
				Me.SendPropertyChanged("LOCATION_ADD")
				Me.OnLOCATION_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REASON", DbType:="NVarChar(MAX)")>  _
	Public Property REASON() As String
		Get
			Return Me._REASON
		End Get
		Set
			If (String.Equals(Me._REASON, value) = false) Then
				Me.OnREASONChanging(value)
				Me.SendPropertyChanging
				Me._REASON = value
				Me.SendPropertyChanged("REASON")
				Me.OnREASONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_PLANEDIT_DRUGOLD")>  _
Partial Public Class MULTI_PDF_PLANEDIT_DRUGOLD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _DATE_FOLLOW As System.Nullable(Of Date)
	
	Private _MISTAKE__SERIOUS As String
	
	Private _MISTAKE_IMPORTANT As String
	
	Private _MISTAKE_LITTLE As String
	
	Private _PEPLE_FOLLOW As String
	
	Private _DATE_FOLLOWNEXT As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnDATE_FOLLOWChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_FOLLOWChanged()
    End Sub
    Partial Private Sub OnMISTAKE__SERIOUSChanging(value As String)
    End Sub
    Partial Private Sub OnMISTAKE__SERIOUSChanged()
    End Sub
    Partial Private Sub OnMISTAKE_IMPORTANTChanging(value As String)
    End Sub
    Partial Private Sub OnMISTAKE_IMPORTANTChanged()
    End Sub
    Partial Private Sub OnMISTAKE_LITTLEChanging(value As String)
    End Sub
    Partial Private Sub OnMISTAKE_LITTLEChanged()
    End Sub
    Partial Private Sub OnPEPLE_FOLLOWChanging(value As String)
    End Sub
    Partial Private Sub OnPEPLE_FOLLOWChanged()
    End Sub
    Partial Private Sub OnDATE_FOLLOWNEXTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_FOLLOWNEXTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_FOLLOW", DbType:="DateTime")>  _
	Public Property DATE_FOLLOW() As System.Nullable(Of Date)
		Get
			Return Me._DATE_FOLLOW
		End Get
		Set
			If (Me._DATE_FOLLOW.Equals(value) = false) Then
				Me.OnDATE_FOLLOWChanging(value)
				Me.SendPropertyChanging
				Me._DATE_FOLLOW = value
				Me.SendPropertyChanged("DATE_FOLLOW")
				Me.OnDATE_FOLLOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[MISTAKE_ SERIOUS]", Storage:="_MISTAKE__SERIOUS", DbType:="NVarChar(MAX)")>  _
	Public Property MISTAKE__SERIOUS() As String
		Get
			Return Me._MISTAKE__SERIOUS
		End Get
		Set
			If (String.Equals(Me._MISTAKE__SERIOUS, value) = false) Then
				Me.OnMISTAKE__SERIOUSChanging(value)
				Me.SendPropertyChanging
				Me._MISTAKE__SERIOUS = value
				Me.SendPropertyChanged("MISTAKE__SERIOUS")
				Me.OnMISTAKE__SERIOUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MISTAKE_IMPORTANT", DbType:="NVarChar(MAX)")>  _
	Public Property MISTAKE_IMPORTANT() As String
		Get
			Return Me._MISTAKE_IMPORTANT
		End Get
		Set
			If (String.Equals(Me._MISTAKE_IMPORTANT, value) = false) Then
				Me.OnMISTAKE_IMPORTANTChanging(value)
				Me.SendPropertyChanging
				Me._MISTAKE_IMPORTANT = value
				Me.SendPropertyChanged("MISTAKE_IMPORTANT")
				Me.OnMISTAKE_IMPORTANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MISTAKE_LITTLE", DbType:="NVarChar(MAX)")>  _
	Public Property MISTAKE_LITTLE() As String
		Get
			Return Me._MISTAKE_LITTLE
		End Get
		Set
			If (String.Equals(Me._MISTAKE_LITTLE, value) = false) Then
				Me.OnMISTAKE_LITTLEChanging(value)
				Me.SendPropertyChanging
				Me._MISTAKE_LITTLE = value
				Me.SendPropertyChanged("MISTAKE_LITTLE")
				Me.OnMISTAKE_LITTLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PEPLE_FOLLOW", DbType:="NVarChar(MAX)")>  _
	Public Property PEPLE_FOLLOW() As String
		Get
			Return Me._PEPLE_FOLLOW
		End Get
		Set
			If (String.Equals(Me._PEPLE_FOLLOW, value) = false) Then
				Me.OnPEPLE_FOLLOWChanging(value)
				Me.SendPropertyChanging
				Me._PEPLE_FOLLOW = value
				Me.SendPropertyChanged("PEPLE_FOLLOW")
				Me.OnPEPLE_FOLLOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_FOLLOWNEXT", DbType:="DateTime")>  _
	Public Property DATE_FOLLOWNEXT() As System.Nullable(Of Date)
		Get
			Return Me._DATE_FOLLOWNEXT
		End Get
		Set
			If (Me._DATE_FOLLOWNEXT.Equals(value) = false) Then
				Me.OnDATE_FOLLOWNEXTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_FOLLOWNEXT = value
				Me.SendPropertyChanged("DATE_FOLLOWNEXT")
				Me.OnDATE_FOLLOWNEXTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_RECORD_DRUGPLACE")>  _
Partial Public Class MULTI_PDF_RECORD_DRUGPLACE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _NAME_LIST_PRATICE As String
	
	Private _PARMACY As String
	
	Private _DUTY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnNAME_LIST_PRATICEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_LIST_PRATICEChanged()
    End Sub
    Partial Private Sub OnPARMACYChanging(value As String)
    End Sub
    Partial Private Sub OnPARMACYChanged()
    End Sub
    Partial Private Sub OnDUTYChanging(value As String)
    End Sub
    Partial Private Sub OnDUTYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_LIST_PRATICE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_LIST_PRATICE() As String
		Get
			Return Me._NAME_LIST_PRATICE
		End Get
		Set
			If (String.Equals(Me._NAME_LIST_PRATICE, value) = false) Then
				Me.OnNAME_LIST_PRATICEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_LIST_PRATICE = value
				Me.SendPropertyChanged("NAME_LIST_PRATICE")
				Me.OnNAME_LIST_PRATICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PARMACY", DbType:="NVarChar(MAX)")>  _
	Public Property PARMACY() As String
		Get
			Return Me._PARMACY
		End Get
		Set
			If (String.Equals(Me._PARMACY, value) = false) Then
				Me.OnPARMACYChanging(value)
				Me.SendPropertyChanging
				Me._PARMACY = value
				Me.SendPropertyChanged("PARMACY")
				Me.OnPARMACYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUTY", DbType:="NVarChar(MAX)")>  _
	Public Property DUTY() As String
		Get
			Return Me._DUTY
		End Get
		Set
			If (String.Equals(Me._DUTY, value) = false) Then
				Me.OnDUTYChanging(value)
				Me.SendPropertyChanging
				Me._DUTY = value
				Me.SendPropertyChanged("DUTY")
				Me.OnDUTYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_RECORD_EXGDRUG_SAVE")>  _
Partial Public Class MULTI_PDF_RECORD_EXGDRUG_SAVE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _NAME_OPER As String
	
	Private _POSITION_OPER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnNAME_OPERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OPERChanged()
    End Sub
    Partial Private Sub OnPOSITION_OPERChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_OPERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OPER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OPER() As String
		Get
			Return Me._NAME_OPER
		End Get
		Set
			If (String.Equals(Me._NAME_OPER, value) = false) Then
				Me.OnNAME_OPERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OPER = value
				Me.SendPropertyChanged("NAME_OPER")
				Me.OnNAME_OPERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_OPER", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_OPER() As String
		Get
			Return Me._POSITION_OPER
		End Get
		Set
			If (String.Equals(Me._POSITION_OPER, value) = false) Then
				Me.OnPOSITION_OPERChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_OPER = value
				Me.SendPropertyChanged("POSITION_OPER")
				Me.OnPOSITION_OPERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_RECORD_EXGDRUG_SAVE2")>  _
Partial Public Class MULTI_PDF_RECORD_EXGDRUG_SAVE2
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _NUMBER_DRUG As String
	
	Private _NAME_THAI As String
	
	Private _NAME_ENG As String
	
	Private _DRUG_TYPE As String
	
	Private _DRUG_GROUP As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnNUMBER_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_DRUGChanged()
    End Sub
    Partial Private Sub OnNAME_THAIChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_THAIChanged()
    End Sub
    Partial Private Sub OnNAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ENGChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_TYPEChanged()
    End Sub
    Partial Private Sub OnDRUG_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_GROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_DRUG() As String
		Get
			Return Me._NUMBER_DRUG
		End Get
		Set
			If (String.Equals(Me._NUMBER_DRUG, value) = false) Then
				Me.OnNUMBER_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_DRUG = value
				Me.SendPropertyChanged("NUMBER_DRUG")
				Me.OnNUMBER_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_THAI", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_THAI() As String
		Get
			Return Me._NAME_THAI
		End Get
		Set
			If (String.Equals(Me._NAME_THAI, value) = false) Then
				Me.OnNAME_THAIChanging(value)
				Me.SendPropertyChanging
				Me._NAME_THAI = value
				Me.SendPropertyChanged("NAME_THAI")
				Me.OnNAME_THAIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ENG() As String
		Get
			Return Me._NAME_ENG
		End Get
		Set
			If (String.Equals(Me._NAME_ENG, value) = false) Then
				Me.OnNAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ENG = value
				Me.SendPropertyChanged("NAME_ENG")
				Me.OnNAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_TYPE() As String
		Get
			Return Me._DRUG_TYPE
		End Get
		Set
			If (String.Equals(Me._DRUG_TYPE, value) = false) Then
				Me.OnDRUG_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE = value
				Me.SendPropertyChanged("DRUG_TYPE")
				Me.OnDRUG_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_GROUP", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_GROUP() As String
		Get
			Return Me._DRUG_GROUP
		End Get
		Set
			If (String.Equals(Me._DRUG_GROUP, value) = false) Then
				Me.OnDRUG_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_GROUP = value
				Me.SendPropertyChanged("DRUG_GROUP")
				Me.OnDRUG_GROUPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_RECORD_ISSUE")>  _
Partial Public Class MULTI_PDF_RECORD_ISSUE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _NAME_DRUG As String
	
	Private _VOLUME As String
	
	Private _NUMBER As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnNAME_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_DRUGChanged()
    End Sub
    Partial Private Sub OnVOLUMEChanging(value As String)
    End Sub
    Partial Private Sub OnVOLUMEChanged()
    End Sub
    Partial Private Sub OnNUMBERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNUMBERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_DRUG() As String
		Get
			Return Me._NAME_DRUG
		End Get
		Set
			If (String.Equals(Me._NAME_DRUG, value) = false) Then
				Me.OnNAME_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._NAME_DRUG = value
				Me.SendPropertyChanged("NAME_DRUG")
				Me.OnNAME_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VOLUME", DbType:="NVarChar(MAX)")>  _
	Public Property VOLUME() As String
		Get
			Return Me._VOLUME
		End Get
		Set
			If (String.Equals(Me._VOLUME, value) = false) Then
				Me.OnVOLUMEChanging(value)
				Me.SendPropertyChanging
				Me._VOLUME = value
				Me.SendPropertyChanged("VOLUME")
				Me.OnVOLUMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER", DbType:="Int")>  _
	Public Property NUMBER() As System.Nullable(Of Integer)
		Get
			Return Me._NUMBER
		End Get
		Set
			If (Me._NUMBER.Equals(value) = false) Then
				Me.OnNUMBERChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER = value
				Me.SendPropertyChanged("NUMBER")
				Me.OnNUMBERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_RECORD_ORDERIN")>  _
Partial Public Class MULTI_PDF_RECORD_ORDERIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _PERSON_AUT As String
	
	Private _CHECKING As String
	
	Private _NAME_OPER As String
	
	Private _NUMBER_PHAMAR As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnPERSON_AUTChanging(value As String)
    End Sub
    Partial Private Sub OnPERSON_AUTChanged()
    End Sub
    Partial Private Sub OnCHECKINGChanging(value As String)
    End Sub
    Partial Private Sub OnCHECKINGChanged()
    End Sub
    Partial Private Sub OnNAME_OPERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OPERChanged()
    End Sub
    Partial Private Sub OnNUMBER_PHAMARChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_PHAMARChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSON_AUT", DbType:="NVarChar(MAX)")>  _
	Public Property PERSON_AUT() As String
		Get
			Return Me._PERSON_AUT
		End Get
		Set
			If (String.Equals(Me._PERSON_AUT, value) = false) Then
				Me.OnPERSON_AUTChanging(value)
				Me.SendPropertyChanging
				Me._PERSON_AUT = value
				Me.SendPropertyChanged("PERSON_AUT")
				Me.OnPERSON_AUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECKING", DbType:="NVarChar(MAX)")>  _
	Public Property CHECKING() As String
		Get
			Return Me._CHECKING
		End Get
		Set
			If (String.Equals(Me._CHECKING, value) = false) Then
				Me.OnCHECKINGChanging(value)
				Me.SendPropertyChanging
				Me._CHECKING = value
				Me.SendPropertyChanged("CHECKING")
				Me.OnCHECKINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OPER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OPER() As String
		Get
			Return Me._NAME_OPER
		End Get
		Set
			If (String.Equals(Me._NAME_OPER, value) = false) Then
				Me.OnNAME_OPERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OPER = value
				Me.SendPropertyChanged("NAME_OPER")
				Me.OnNAME_OPERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_PHAMAR", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_PHAMAR() As String
		Get
			Return Me._NUMBER_PHAMAR
		End Get
		Set
			If (String.Equals(Me._NUMBER_PHAMAR, value) = false) Then
				Me.OnNUMBER_PHAMARChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_PHAMAR = value
				Me.SendPropertyChanged("NUMBER_PHAMAR")
				Me.OnNUMBER_PHAMARChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_RECORD_PRODUCT")>  _
Partial Public Class MULTI_PDF_RECORD_PRODUCT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _SELLING_CASE As String
	
	Private _LIST As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnSELLING_CASEChanging(value As String)
    End Sub
    Partial Private Sub OnSELLING_CASEChanged()
    End Sub
    Partial Private Sub OnLISTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLISTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SELLING_CASE", DbType:="NVarChar(MAX)")>  _
	Public Property SELLING_CASE() As String
		Get
			Return Me._SELLING_CASE
		End Get
		Set
			If (String.Equals(Me._SELLING_CASE, value) = false) Then
				Me.OnSELLING_CASEChanging(value)
				Me.SendPropertyChanging
				Me._SELLING_CASE = value
				Me.SendPropertyChanged("SELLING_CASE")
				Me.OnSELLING_CASEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST", DbType:="Int")>  _
	Public Property LIST() As System.Nullable(Of Integer)
		Get
			Return Me._LIST
		End Get
		Set
			If (Me._LIST.Equals(value) = false) Then
				Me.OnLISTChanging(value)
				Me.SendPropertyChanging
				Me._LIST = value
				Me.SendPropertyChanged("LIST")
				Me.OnLISTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_PDF_REPORT_CHECKGMP")>  _
Partial Public Class MULTI_PDF_REPORT_CHECKGMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _EVENT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnEVENTChanging(value As String)
    End Sub
    Partial Private Sub OnEVENTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="EVENT", Storage:="_EVENT", DbType:="NVarChar(MAX)")>  _
	Public Property [EVENT]() As String
		Get
			Return Me._EVENT
		End Get
		Set
			If (String.Equals(Me._EVENT, value) = false) Then
				Me.OnEVENTChanging(value)
				Me.SendPropertyChanging
				Me._EVENT = value
				Me.SendPropertyChanged("[EVENT]")
				Me.OnEVENTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MULTI_SURVELANCE_SPECIALCASE")>  _
Partial Public Class MULTI_SURVELANCE_SPECIALCASE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FKIDA As System.Nullable(Of Integer)
	
	Private _NUMBER_DRUG As String
	
	Private _NAME_TRAD As String
	
	Private _TYPE As String
	
	Private _DRUG_IMPORTANT As String
	
	Private _DAMAGE As String
	
	Private _UNIT_ANALY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFKIDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFKIDAChanged()
    End Sub
    Partial Private Sub OnNUMBER_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_DRUGChanged()
    End Sub
    Partial Private Sub OnNAME_TRADChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_TRADChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnDRUG_IMPORTANTChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_IMPORTANTChanged()
    End Sub
    Partial Private Sub OnDAMAGEChanging(value As String)
    End Sub
    Partial Private Sub OnDAMAGEChanged()
    End Sub
    Partial Private Sub OnUNIT_ANALYChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_ANALYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKIDA", DbType:="Int")>  _
	Public Property FKIDA() As System.Nullable(Of Integer)
		Get
			Return Me._FKIDA
		End Get
		Set
			If (Me._FKIDA.Equals(value) = false) Then
				Me.OnFKIDAChanging(value)
				Me.SendPropertyChanging
				Me._FKIDA = value
				Me.SendPropertyChanged("FKIDA")
				Me.OnFKIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_DRUG() As String
		Get
			Return Me._NUMBER_DRUG
		End Get
		Set
			If (String.Equals(Me._NUMBER_DRUG, value) = false) Then
				Me.OnNUMBER_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_DRUG = value
				Me.SendPropertyChanged("NUMBER_DRUG")
				Me.OnNUMBER_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_TRAD", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_TRAD() As String
		Get
			Return Me._NAME_TRAD
		End Get
		Set
			If (String.Equals(Me._NAME_TRAD, value) = false) Then
				Me.OnNAME_TRADChanging(value)
				Me.SendPropertyChanging
				Me._NAME_TRAD = value
				Me.SendPropertyChanged("NAME_TRAD")
				Me.OnNAME_TRADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_IMPORTANT", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_IMPORTANT() As String
		Get
			Return Me._DRUG_IMPORTANT
		End Get
		Set
			If (String.Equals(Me._DRUG_IMPORTANT, value) = false) Then
				Me.OnDRUG_IMPORTANTChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_IMPORTANT = value
				Me.SendPropertyChanged("DRUG_IMPORTANT")
				Me.OnDRUG_IMPORTANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAMAGE", DbType:="NVarChar(MAX)")>  _
	Public Property DAMAGE() As String
		Get
			Return Me._DAMAGE
		End Get
		Set
			If (String.Equals(Me._DAMAGE, value) = false) Then
				Me.OnDAMAGEChanging(value)
				Me.SendPropertyChanging
				Me._DAMAGE = value
				Me.SendPropertyChanged("DAMAGE")
				Me.OnDAMAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_ANALY", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_ANALY() As String
		Get
			Return Me._UNIT_ANALY
		End Get
		Set
			If (String.Equals(Me._UNIT_ANALY, value) = false) Then
				Me.OnUNIT_ANALYChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_ANALY = value
				Me.SendPropertyChanged("UNIT_ANALY")
				Me.OnUNIT_ANALYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_CHECKPLACE_DRUGOLD")>  _
Partial Public Class PDF_CHECKPLACE_DRUGOLD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _WRITE_COMPANY As String
	
	Private _DATE As System.Nullable(Of Date)
	
	Private _NAME As String
	
	Private _PLACE_LICENSE As String
	
	Private _NAME_PLANCE As String
	
	Private _NUMBER_LICENSE As String
	
	Private _LOCATION As String
	
	Private _TEL As String
	
	Private _FAX As String
	
	Private _NAME_OPER As String
	
	Private _NAME_RECIPI As String
	
	Private _POSITION_RECPI As String
	
	Private _DATE_RECPI As String
	
	Private _NAME_DIRECTORMEDI As String
	
	Private _POSITION_DIRECTORMEDI As String
	
	Private _DATE_DIRECTORMEDI As String
	
	Private _NAME_HEADQSM As String
	
	Private _NAME_QSM As String
	
	Private _POSITION_QSM As String
	
	Private _DATE_QSM As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnWRITE_COMPANYChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_COMPANYChanged()
    End Sub
    Partial Private Sub OnDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnPLACE_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnPLACE_LICENSEChanged()
    End Sub
    Partial Private Sub OnNAME_PLANCEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PLANCEChanged()
    End Sub
    Partial Private Sub OnNUMBER_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_LICENSEChanged()
    End Sub
    Partial Private Sub OnLOCATIONChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATIONChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnNAME_OPERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OPERChanged()
    End Sub
    Partial Private Sub OnNAME_RECIPIChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_RECIPIChanged()
    End Sub
    Partial Private Sub OnPOSITION_RECPIChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_RECPIChanged()
    End Sub
    Partial Private Sub OnDATE_RECPIChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_RECPIChanged()
    End Sub
    Partial Private Sub OnNAME_DIRECTORMEDIChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_DIRECTORMEDIChanged()
    End Sub
    Partial Private Sub OnPOSITION_DIRECTORMEDIChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_DIRECTORMEDIChanged()
    End Sub
    Partial Private Sub OnDATE_DIRECTORMEDIChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_DIRECTORMEDIChanged()
    End Sub
    Partial Private Sub OnNAME_HEADQSMChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_HEADQSMChanged()
    End Sub
    Partial Private Sub OnNAME_QSMChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_QSMChanged()
    End Sub
    Partial Private Sub OnPOSITION_QSMChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_QSMChanged()
    End Sub
    Partial Private Sub OnDATE_QSMChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_QSMChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_COMPANY", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_COMPANY() As String
		Get
			Return Me._WRITE_COMPANY
		End Get
		Set
			If (String.Equals(Me._WRITE_COMPANY, value) = false) Then
				Me.OnWRITE_COMPANYChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_COMPANY = value
				Me.SendPropertyChanged("WRITE_COMPANY")
				Me.OnWRITE_COMPANYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="DateTime")>  _
	Public Property [DATE]() As System.Nullable(Of Date)
		Get
			Return Me._DATE
		End Get
		Set
			If (Me._DATE.Equals(value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACE_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property PLACE_LICENSE() As String
		Get
			Return Me._PLACE_LICENSE
		End Get
		Set
			If (String.Equals(Me._PLACE_LICENSE, value) = false) Then
				Me.OnPLACE_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._PLACE_LICENSE = value
				Me.SendPropertyChanged("PLACE_LICENSE")
				Me.OnPLACE_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PLANCE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PLANCE() As String
		Get
			Return Me._NAME_PLANCE
		End Get
		Set
			If (String.Equals(Me._NAME_PLANCE, value) = false) Then
				Me.OnNAME_PLANCEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PLANCE = value
				Me.SendPropertyChanged("NAME_PLANCE")
				Me.OnNAME_PLANCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_LICENSE() As String
		Get
			Return Me._NUMBER_LICENSE
		End Get
		Set
			If (String.Equals(Me._NUMBER_LICENSE, value) = false) Then
				Me.OnNUMBER_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_LICENSE = value
				Me.SendPropertyChanged("NUMBER_LICENSE")
				Me.OnNUMBER_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION() As String
		Get
			Return Me._LOCATION
		End Get
		Set
			If (String.Equals(Me._LOCATION, value) = false) Then
				Me.OnLOCATIONChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION = value
				Me.SendPropertyChanged("LOCATION")
				Me.OnLOCATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="NVarChar(MAX)")>  _
	Public Property FAX() As String
		Get
			Return Me._FAX
		End Get
		Set
			If (String.Equals(Me._FAX, value) = false) Then
				Me.OnFAXChanging(value)
				Me.SendPropertyChanging
				Me._FAX = value
				Me.SendPropertyChanged("FAX")
				Me.OnFAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OPER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OPER() As String
		Get
			Return Me._NAME_OPER
		End Get
		Set
			If (String.Equals(Me._NAME_OPER, value) = false) Then
				Me.OnNAME_OPERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OPER = value
				Me.SendPropertyChanged("NAME_OPER")
				Me.OnNAME_OPERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_RECIPI", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_RECIPI() As String
		Get
			Return Me._NAME_RECIPI
		End Get
		Set
			If (String.Equals(Me._NAME_RECIPI, value) = false) Then
				Me.OnNAME_RECIPIChanging(value)
				Me.SendPropertyChanging
				Me._NAME_RECIPI = value
				Me.SendPropertyChanged("NAME_RECIPI")
				Me.OnNAME_RECIPIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_RECPI", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_RECPI() As String
		Get
			Return Me._POSITION_RECPI
		End Get
		Set
			If (String.Equals(Me._POSITION_RECPI, value) = false) Then
				Me.OnPOSITION_RECPIChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_RECPI = value
				Me.SendPropertyChanged("POSITION_RECPI")
				Me.OnPOSITION_RECPIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_RECPI", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_RECPI() As String
		Get
			Return Me._DATE_RECPI
		End Get
		Set
			If (String.Equals(Me._DATE_RECPI, value) = false) Then
				Me.OnDATE_RECPIChanging(value)
				Me.SendPropertyChanging
				Me._DATE_RECPI = value
				Me.SendPropertyChanged("DATE_RECPI")
				Me.OnDATE_RECPIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_DIRECTORMEDI", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_DIRECTORMEDI() As String
		Get
			Return Me._NAME_DIRECTORMEDI
		End Get
		Set
			If (String.Equals(Me._NAME_DIRECTORMEDI, value) = false) Then
				Me.OnNAME_DIRECTORMEDIChanging(value)
				Me.SendPropertyChanging
				Me._NAME_DIRECTORMEDI = value
				Me.SendPropertyChanged("NAME_DIRECTORMEDI")
				Me.OnNAME_DIRECTORMEDIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_DIRECTORMEDI", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_DIRECTORMEDI() As String
		Get
			Return Me._POSITION_DIRECTORMEDI
		End Get
		Set
			If (String.Equals(Me._POSITION_DIRECTORMEDI, value) = false) Then
				Me.OnPOSITION_DIRECTORMEDIChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_DIRECTORMEDI = value
				Me.SendPropertyChanged("POSITION_DIRECTORMEDI")
				Me.OnPOSITION_DIRECTORMEDIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_DIRECTORMEDI", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_DIRECTORMEDI() As String
		Get
			Return Me._DATE_DIRECTORMEDI
		End Get
		Set
			If (String.Equals(Me._DATE_DIRECTORMEDI, value) = false) Then
				Me.OnDATE_DIRECTORMEDIChanging(value)
				Me.SendPropertyChanging
				Me._DATE_DIRECTORMEDI = value
				Me.SendPropertyChanged("DATE_DIRECTORMEDI")
				Me.OnDATE_DIRECTORMEDIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_HEADQSM", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_HEADQSM() As String
		Get
			Return Me._NAME_HEADQSM
		End Get
		Set
			If (String.Equals(Me._NAME_HEADQSM, value) = false) Then
				Me.OnNAME_HEADQSMChanging(value)
				Me.SendPropertyChanging
				Me._NAME_HEADQSM = value
				Me.SendPropertyChanged("NAME_HEADQSM")
				Me.OnNAME_HEADQSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_QSM", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_QSM() As String
		Get
			Return Me._NAME_QSM
		End Get
		Set
			If (String.Equals(Me._NAME_QSM, value) = false) Then
				Me.OnNAME_QSMChanging(value)
				Me.SendPropertyChanging
				Me._NAME_QSM = value
				Me.SendPropertyChanged("NAME_QSM")
				Me.OnNAME_QSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_QSM", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_QSM() As String
		Get
			Return Me._POSITION_QSM
		End Get
		Set
			If (String.Equals(Me._POSITION_QSM, value) = false) Then
				Me.OnPOSITION_QSMChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_QSM = value
				Me.SendPropertyChanged("POSITION_QSM")
				Me.OnPOSITION_QSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_QSM", DbType:="DateTime")>  _
	Public Property DATE_QSM() As System.Nullable(Of Date)
		Get
			Return Me._DATE_QSM
		End Get
		Set
			If (Me._DATE_QSM.Equals(value) = false) Then
				Me.OnDATE_QSMChanging(value)
				Me.SendPropertyChanging
				Me._DATE_QSM = value
				Me.SendPropertyChanged("DATE_QSM")
				Me.OnDATE_QSMChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_CHECKPLACE_GMPCER")>  _
Partial Public Class PDF_CHECKPLACE_GMPCER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _WRITE_AT As String
	
	Private _DATE As System.Nullable(Of Date)
	
	Private _NAME_REQUEST As String
	
	Private _NAME_PLAN As String
	
	Private _NAME_COMPANY As String
	
	Private _LOCATION As String
	
	Private _TEL As String
	
	Private _FAX As String
	
	Private _NAME_OPER As String
	
	Private _NAME_RECIPI As String
	
	Private _POSITION_RECIPI As String
	
	Private _DATE_RECIPI As String
	
	Private _NAME_DIRECTORMEDI As String
	
	Private _POSITION_DIRECTORMEDI As String
	
	Private _DATE_DIRECTORMEDI As String
	
	Private _NAME_QSMHEAD As String
	
	Private _NAME_QSM As String
	
	Private _POSITION_QSM As String
	
	Private _DATE_QSM As System.Nullable(Of Date)
	
	Private _COPY_LICENSE As String
	
	Private _DATA_MASTERFLIE As String
	
	Private _QUALITY_MANUAL As String
	
	Private _LIST_OF_SOP As String
	
	Private _OTHER As String
	
	Private _OTHER_TEXT As String
	
	Private _STATUS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    Partial Private Sub OnNAME_REQUESTChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_REQUESTChanged()
    End Sub
    Partial Private Sub OnNAME_PLANChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PLANChanged()
    End Sub
    Partial Private Sub OnNAME_COMPANYChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_COMPANYChanged()
    End Sub
    Partial Private Sub OnLOCATIONChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATIONChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnNAME_OPERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OPERChanged()
    End Sub
    Partial Private Sub OnNAME_RECIPIChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_RECIPIChanged()
    End Sub
    Partial Private Sub OnPOSITION_RECIPIChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_RECIPIChanged()
    End Sub
    Partial Private Sub OnDATE_RECIPIChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_RECIPIChanged()
    End Sub
    Partial Private Sub OnNAME_DIRECTORMEDIChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_DIRECTORMEDIChanged()
    End Sub
    Partial Private Sub OnPOSITION_DIRECTORMEDIChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_DIRECTORMEDIChanged()
    End Sub
    Partial Private Sub OnDATE_DIRECTORMEDIChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_DIRECTORMEDIChanged()
    End Sub
    Partial Private Sub OnNAME_QSMHEADChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_QSMHEADChanged()
    End Sub
    Partial Private Sub OnNAME_QSMChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_QSMChanged()
    End Sub
    Partial Private Sub OnPOSITION_QSMChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_QSMChanged()
    End Sub
    Partial Private Sub OnDATE_QSMChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_QSMChanged()
    End Sub
    Partial Private Sub OnCOPY_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnCOPY_LICENSEChanged()
    End Sub
    Partial Private Sub OnDATA_MASTERFLIEChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_MASTERFLIEChanged()
    End Sub
    Partial Private Sub OnQUALITY_MANUALChanging(value As String)
    End Sub
    Partial Private Sub OnQUALITY_MANUALChanged()
    End Sub
    Partial Private Sub OnLIST_OF_SOPChanging(value As String)
    End Sub
    Partial Private Sub OnLIST_OF_SOPChanged()
    End Sub
    Partial Private Sub OnOTHERChanging(value As String)
    End Sub
    Partial Private Sub OnOTHERChanged()
    End Sub
    Partial Private Sub OnOTHER_TEXTChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_TEXTChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="DateTime")>  _
	Public Property [DATE]() As System.Nullable(Of Date)
		Get
			Return Me._DATE
		End Get
		Set
			If (Me._DATE.Equals(value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_REQUEST", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_REQUEST() As String
		Get
			Return Me._NAME_REQUEST
		End Get
		Set
			If (String.Equals(Me._NAME_REQUEST, value) = false) Then
				Me.OnNAME_REQUESTChanging(value)
				Me.SendPropertyChanging
				Me._NAME_REQUEST = value
				Me.SendPropertyChanged("NAME_REQUEST")
				Me.OnNAME_REQUESTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PLAN", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PLAN() As String
		Get
			Return Me._NAME_PLAN
		End Get
		Set
			If (String.Equals(Me._NAME_PLAN, value) = false) Then
				Me.OnNAME_PLANChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PLAN = value
				Me.SendPropertyChanged("NAME_PLAN")
				Me.OnNAME_PLANChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_COMPANY", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_COMPANY() As String
		Get
			Return Me._NAME_COMPANY
		End Get
		Set
			If (String.Equals(Me._NAME_COMPANY, value) = false) Then
				Me.OnNAME_COMPANYChanging(value)
				Me.SendPropertyChanging
				Me._NAME_COMPANY = value
				Me.SendPropertyChanged("NAME_COMPANY")
				Me.OnNAME_COMPANYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION() As String
		Get
			Return Me._LOCATION
		End Get
		Set
			If (String.Equals(Me._LOCATION, value) = false) Then
				Me.OnLOCATIONChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION = value
				Me.SendPropertyChanged("LOCATION")
				Me.OnLOCATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="NVarChar(MAX)")>  _
	Public Property FAX() As String
		Get
			Return Me._FAX
		End Get
		Set
			If (String.Equals(Me._FAX, value) = false) Then
				Me.OnFAXChanging(value)
				Me.SendPropertyChanging
				Me._FAX = value
				Me.SendPropertyChanged("FAX")
				Me.OnFAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OPER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OPER() As String
		Get
			Return Me._NAME_OPER
		End Get
		Set
			If (String.Equals(Me._NAME_OPER, value) = false) Then
				Me.OnNAME_OPERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OPER = value
				Me.SendPropertyChanged("NAME_OPER")
				Me.OnNAME_OPERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_RECIPI", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_RECIPI() As String
		Get
			Return Me._NAME_RECIPI
		End Get
		Set
			If (String.Equals(Me._NAME_RECIPI, value) = false) Then
				Me.OnNAME_RECIPIChanging(value)
				Me.SendPropertyChanging
				Me._NAME_RECIPI = value
				Me.SendPropertyChanged("NAME_RECIPI")
				Me.OnNAME_RECIPIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_RECIPI", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_RECIPI() As String
		Get
			Return Me._POSITION_RECIPI
		End Get
		Set
			If (String.Equals(Me._POSITION_RECIPI, value) = false) Then
				Me.OnPOSITION_RECIPIChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_RECIPI = value
				Me.SendPropertyChanged("POSITION_RECIPI")
				Me.OnPOSITION_RECIPIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_RECIPI", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_RECIPI() As String
		Get
			Return Me._DATE_RECIPI
		End Get
		Set
			If (String.Equals(Me._DATE_RECIPI, value) = false) Then
				Me.OnDATE_RECIPIChanging(value)
				Me.SendPropertyChanging
				Me._DATE_RECIPI = value
				Me.SendPropertyChanged("DATE_RECIPI")
				Me.OnDATE_RECIPIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_DIRECTORMEDI", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_DIRECTORMEDI() As String
		Get
			Return Me._NAME_DIRECTORMEDI
		End Get
		Set
			If (String.Equals(Me._NAME_DIRECTORMEDI, value) = false) Then
				Me.OnNAME_DIRECTORMEDIChanging(value)
				Me.SendPropertyChanging
				Me._NAME_DIRECTORMEDI = value
				Me.SendPropertyChanged("NAME_DIRECTORMEDI")
				Me.OnNAME_DIRECTORMEDIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_DIRECTORMEDI", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_DIRECTORMEDI() As String
		Get
			Return Me._POSITION_DIRECTORMEDI
		End Get
		Set
			If (String.Equals(Me._POSITION_DIRECTORMEDI, value) = false) Then
				Me.OnPOSITION_DIRECTORMEDIChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_DIRECTORMEDI = value
				Me.SendPropertyChanged("POSITION_DIRECTORMEDI")
				Me.OnPOSITION_DIRECTORMEDIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_DIRECTORMEDI", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_DIRECTORMEDI() As String
		Get
			Return Me._DATE_DIRECTORMEDI
		End Get
		Set
			If (String.Equals(Me._DATE_DIRECTORMEDI, value) = false) Then
				Me.OnDATE_DIRECTORMEDIChanging(value)
				Me.SendPropertyChanging
				Me._DATE_DIRECTORMEDI = value
				Me.SendPropertyChanged("DATE_DIRECTORMEDI")
				Me.OnDATE_DIRECTORMEDIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_QSMHEAD", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_QSMHEAD() As String
		Get
			Return Me._NAME_QSMHEAD
		End Get
		Set
			If (String.Equals(Me._NAME_QSMHEAD, value) = false) Then
				Me.OnNAME_QSMHEADChanging(value)
				Me.SendPropertyChanging
				Me._NAME_QSMHEAD = value
				Me.SendPropertyChanged("NAME_QSMHEAD")
				Me.OnNAME_QSMHEADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_QSM", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_QSM() As String
		Get
			Return Me._NAME_QSM
		End Get
		Set
			If (String.Equals(Me._NAME_QSM, value) = false) Then
				Me.OnNAME_QSMChanging(value)
				Me.SendPropertyChanging
				Me._NAME_QSM = value
				Me.SendPropertyChanged("NAME_QSM")
				Me.OnNAME_QSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_QSM", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_QSM() As String
		Get
			Return Me._POSITION_QSM
		End Get
		Set
			If (String.Equals(Me._POSITION_QSM, value) = false) Then
				Me.OnPOSITION_QSMChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_QSM = value
				Me.SendPropertyChanged("POSITION_QSM")
				Me.OnPOSITION_QSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_QSM", DbType:="DateTime")>  _
	Public Property DATE_QSM() As System.Nullable(Of Date)
		Get
			Return Me._DATE_QSM
		End Get
		Set
			If (Me._DATE_QSM.Equals(value) = false) Then
				Me.OnDATE_QSMChanging(value)
				Me.SendPropertyChanging
				Me._DATE_QSM = value
				Me.SendPropertyChanged("DATE_QSM")
				Me.OnDATE_QSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COPY_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property COPY_LICENSE() As String
		Get
			Return Me._COPY_LICENSE
		End Get
		Set
			If (String.Equals(Me._COPY_LICENSE, value) = false) Then
				Me.OnCOPY_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._COPY_LICENSE = value
				Me.SendPropertyChanged("COPY_LICENSE")
				Me.OnCOPY_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_MASTERFLIE", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_MASTERFLIE() As String
		Get
			Return Me._DATA_MASTERFLIE
		End Get
		Set
			If (String.Equals(Me._DATA_MASTERFLIE, value) = false) Then
				Me.OnDATA_MASTERFLIEChanging(value)
				Me.SendPropertyChanging
				Me._DATA_MASTERFLIE = value
				Me.SendPropertyChanged("DATA_MASTERFLIE")
				Me.OnDATA_MASTERFLIEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUALITY_MANUAL", DbType:="NVarChar(MAX)")>  _
	Public Property QUALITY_MANUAL() As String
		Get
			Return Me._QUALITY_MANUAL
		End Get
		Set
			If (String.Equals(Me._QUALITY_MANUAL, value) = false) Then
				Me.OnQUALITY_MANUALChanging(value)
				Me.SendPropertyChanging
				Me._QUALITY_MANUAL = value
				Me.SendPropertyChanged("QUALITY_MANUAL")
				Me.OnQUALITY_MANUALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST_OF_SOP", DbType:="NVarChar(MAX)")>  _
	Public Property LIST_OF_SOP() As String
		Get
			Return Me._LIST_OF_SOP
		End Get
		Set
			If (String.Equals(Me._LIST_OF_SOP, value) = false) Then
				Me.OnLIST_OF_SOPChanging(value)
				Me.SendPropertyChanging
				Me._LIST_OF_SOP = value
				Me.SendPropertyChanged("LIST_OF_SOP")
				Me.OnLIST_OF_SOPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER() As String
		Get
			Return Me._OTHER
		End Get
		Set
			If (String.Equals(Me._OTHER, value) = false) Then
				Me.OnOTHERChanging(value)
				Me.SendPropertyChanging
				Me._OTHER = value
				Me.SendPropertyChanged("OTHER")
				Me.OnOTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_TEXT", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_TEXT() As String
		Get
			Return Me._OTHER_TEXT
		End Get
		Set
			If (String.Equals(Me._OTHER_TEXT, value) = false) Then
				Me.OnOTHER_TEXTChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_TEXT = value
				Me.SendPropertyChanged("OTHER_TEXT")
				Me.OnOTHER_TEXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_LIST_DRUGCHARGED")>  _
Partial Public Class PDF_LIST_DRUGCHARGED
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME_RELICENSEE As String
	
	Private _LICENSEE As String
	
	Private _NUMBER_DRUG As String
	
	Private _DATE As System.Nullable(Of Date)
	
	Private _NAME_DRUGDELI As String
	
	Private _NAME_ADD As String
	
	Private _LOCATION_ADD As String
	
	Private _SOI_ADD As String
	
	Private _TANON_ADD As String
	
	Private _MOO_ADD As String
	
	Private _TUMBON_ADD As String
	
	Private _AMPER_ADD As String
	
	Private _JUNGWAD_ADD As String
	
	Private _TELEPHONE As String
	
	Private _NAME_LICENSE As String
	
	Private _NAME_LICENSE2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAME_RELICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_RELICENSEEChanged()
    End Sub
    Partial Private Sub OnLICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnLICENSEEChanged()
    End Sub
    Partial Private Sub OnNUMBER_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_DRUGChanged()
    End Sub
    Partial Private Sub OnDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    Partial Private Sub OnNAME_DRUGDELIChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_DRUGDELIChanged()
    End Sub
    Partial Private Sub OnNAME_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDChanged()
    End Sub
    Partial Private Sub OnSOI_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnSOI_ADDChanged()
    End Sub
    Partial Private Sub OnTANON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTANON_ADDChanged()
    End Sub
    Partial Private Sub OnMOO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnMOO_ADDChanged()
    End Sub
    Partial Private Sub OnTUMBON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTUMBON_ADDChanged()
    End Sub
    Partial Private Sub OnAMPER_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnAMPER_ADDChanged()
    End Sub
    Partial Private Sub OnJUNGWAD_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnJUNGWAD_ADDChanged()
    End Sub
    Partial Private Sub OnTELEPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnTELEPHONEChanged()
    End Sub
    Partial Private Sub OnNAME_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_LICENSEChanged()
    End Sub
    Partial Private Sub OnNAME_LICENSE2Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_LICENSE2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_RELICENSEE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_RELICENSEE() As String
		Get
			Return Me._NAME_RELICENSEE
		End Get
		Set
			If (String.Equals(Me._NAME_RELICENSEE, value) = false) Then
				Me.OnNAME_RELICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_RELICENSEE = value
				Me.SendPropertyChanged("NAME_RELICENSEE")
				Me.OnNAME_RELICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICENSEE", DbType:="NVarChar(MAX)")>  _
	Public Property LICENSEE() As String
		Get
			Return Me._LICENSEE
		End Get
		Set
			If (String.Equals(Me._LICENSEE, value) = false) Then
				Me.OnLICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._LICENSEE = value
				Me.SendPropertyChanged("LICENSEE")
				Me.OnLICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_DRUG() As String
		Get
			Return Me._NUMBER_DRUG
		End Get
		Set
			If (String.Equals(Me._NUMBER_DRUG, value) = false) Then
				Me.OnNUMBER_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_DRUG = value
				Me.SendPropertyChanged("NUMBER_DRUG")
				Me.OnNUMBER_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="DateTime")>  _
	Public Property [DATE]() As System.Nullable(Of Date)
		Get
			Return Me._DATE
		End Get
		Set
			If (Me._DATE.Equals(value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_DRUGDELI", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_DRUGDELI() As String
		Get
			Return Me._NAME_DRUGDELI
		End Get
		Set
			If (String.Equals(Me._NAME_DRUGDELI, value) = false) Then
				Me.OnNAME_DRUGDELIChanging(value)
				Me.SendPropertyChanging
				Me._NAME_DRUGDELI = value
				Me.SendPropertyChanged("NAME_DRUGDELI")
				Me.OnNAME_DRUGDELIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADD() As String
		Get
			Return Me._NAME_ADD
		End Get
		Set
			If (String.Equals(Me._NAME_ADD, value) = false) Then
				Me.OnNAME_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADD = value
				Me.SendPropertyChanged("NAME_ADD")
				Me.OnNAME_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADD() As String
		Get
			Return Me._LOCATION_ADD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADD, value) = false) Then
				Me.OnLOCATION_ADDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADD = value
				Me.SendPropertyChanged("LOCATION_ADD")
				Me.OnLOCATION_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property SOI_ADD() As String
		Get
			Return Me._SOI_ADD
		End Get
		Set
			If (String.Equals(Me._SOI_ADD, value) = false) Then
				Me.OnSOI_ADDChanging(value)
				Me.SendPropertyChanging
				Me._SOI_ADD = value
				Me.SendPropertyChanged("SOI_ADD")
				Me.OnSOI_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TANON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TANON_ADD() As String
		Get
			Return Me._TANON_ADD
		End Get
		Set
			If (String.Equals(Me._TANON_ADD, value) = false) Then
				Me.OnTANON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TANON_ADD = value
				Me.SendPropertyChanged("TANON_ADD")
				Me.OnTANON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property MOO_ADD() As String
		Get
			Return Me._MOO_ADD
		End Get
		Set
			If (String.Equals(Me._MOO_ADD, value) = false) Then
				Me.OnMOO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._MOO_ADD = value
				Me.SendPropertyChanged("MOO_ADD")
				Me.OnMOO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TUMBON_ADD() As String
		Get
			Return Me._TUMBON_ADD
		End Get
		Set
			If (String.Equals(Me._TUMBON_ADD, value) = false) Then
				Me.OnTUMBON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ADD = value
				Me.SendPropertyChanged("TUMBON_ADD")
				Me.OnTUMBON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPER_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property AMPER_ADD() As String
		Get
			Return Me._AMPER_ADD
		End Get
		Set
			If (String.Equals(Me._AMPER_ADD, value) = false) Then
				Me.OnAMPER_ADDChanging(value)
				Me.SendPropertyChanging
				Me._AMPER_ADD = value
				Me.SendPropertyChanged("AMPER_ADD")
				Me.OnAMPER_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JUNGWAD_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property JUNGWAD_ADD() As String
		Get
			Return Me._JUNGWAD_ADD
		End Get
		Set
			If (String.Equals(Me._JUNGWAD_ADD, value) = false) Then
				Me.OnJUNGWAD_ADDChanging(value)
				Me.SendPropertyChanging
				Me._JUNGWAD_ADD = value
				Me.SendPropertyChanged("JUNGWAD_ADD")
				Me.OnJUNGWAD_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TELEPHONE", DbType:="NVarChar(MAX)")>  _
	Public Property TELEPHONE() As String
		Get
			Return Me._TELEPHONE
		End Get
		Set
			If (String.Equals(Me._TELEPHONE, value) = false) Then
				Me.OnTELEPHONEChanging(value)
				Me.SendPropertyChanging
				Me._TELEPHONE = value
				Me.SendPropertyChanged("TELEPHONE")
				Me.OnTELEPHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_LICENSE() As String
		Get
			Return Me._NAME_LICENSE
		End Get
		Set
			If (String.Equals(Me._NAME_LICENSE, value) = false) Then
				Me.OnNAME_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_LICENSE = value
				Me.SendPropertyChanged("NAME_LICENSE")
				Me.OnNAME_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_LICENSE2", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_LICENSE2() As String
		Get
			Return Me._NAME_LICENSE2
		End Get
		Set
			If (String.Equals(Me._NAME_LICENSE2, value) = false) Then
				Me.OnNAME_LICENSE2Changing(value)
				Me.SendPropertyChanging
				Me._NAME_LICENSE2 = value
				Me.SendPropertyChanged("NAME_LICENSE2")
				Me.OnNAME_LICENSE2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_PAPER_DRUGRCALL")>  _
Partial Public Class PDF_PAPER_DRUGRCALL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME_STORE As String
	
	Private _LOCATION As String
	
	Private _DATE_CHECK As System.Nullable(Of Date)
	
	Private _FIND_DRUG As String
	
	Private _TOTAL_DRUG As String
	
	Private _AND_RETURN As String
	
	Private _DATE_RETURN As System.Nullable(Of Date)
	
	Private _NAME_CUSTOM As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAME_STOREChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_STOREChanged()
    End Sub
    Partial Private Sub OnLOCATIONChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATIONChanged()
    End Sub
    Partial Private Sub OnDATE_CHECKChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CHECKChanged()
    End Sub
    Partial Private Sub OnFIND_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnFIND_DRUGChanged()
    End Sub
    Partial Private Sub OnTOTAL_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnTOTAL_DRUGChanged()
    End Sub
    Partial Private Sub OnAND_RETURNChanging(value As String)
    End Sub
    Partial Private Sub OnAND_RETURNChanged()
    End Sub
    Partial Private Sub OnDATE_RETURNChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_RETURNChanged()
    End Sub
    Partial Private Sub OnNAME_CUSTOMChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_CUSTOMChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_STORE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_STORE() As String
		Get
			Return Me._NAME_STORE
		End Get
		Set
			If (String.Equals(Me._NAME_STORE, value) = false) Then
				Me.OnNAME_STOREChanging(value)
				Me.SendPropertyChanging
				Me._NAME_STORE = value
				Me.SendPropertyChanged("NAME_STORE")
				Me.OnNAME_STOREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION() As String
		Get
			Return Me._LOCATION
		End Get
		Set
			If (String.Equals(Me._LOCATION, value) = false) Then
				Me.OnLOCATIONChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION = value
				Me.SendPropertyChanged("LOCATION")
				Me.OnLOCATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CHECK", DbType:="DateTime")>  _
	Public Property DATE_CHECK() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CHECK
		End Get
		Set
			If (Me._DATE_CHECK.Equals(value) = false) Then
				Me.OnDATE_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._DATE_CHECK = value
				Me.SendPropertyChanged("DATE_CHECK")
				Me.OnDATE_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIND_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property FIND_DRUG() As String
		Get
			Return Me._FIND_DRUG
		End Get
		Set
			If (String.Equals(Me._FIND_DRUG, value) = false) Then
				Me.OnFIND_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._FIND_DRUG = value
				Me.SendPropertyChanged("FIND_DRUG")
				Me.OnFIND_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOTAL_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property TOTAL_DRUG() As String
		Get
			Return Me._TOTAL_DRUG
		End Get
		Set
			If (String.Equals(Me._TOTAL_DRUG, value) = false) Then
				Me.OnTOTAL_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._TOTAL_DRUG = value
				Me.SendPropertyChanged("TOTAL_DRUG")
				Me.OnTOTAL_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AND_RETURN", DbType:="NVarChar(MAX)")>  _
	Public Property AND_RETURN() As String
		Get
			Return Me._AND_RETURN
		End Get
		Set
			If (String.Equals(Me._AND_RETURN, value) = false) Then
				Me.OnAND_RETURNChanging(value)
				Me.SendPropertyChanging
				Me._AND_RETURN = value
				Me.SendPropertyChanged("AND_RETURN")
				Me.OnAND_RETURNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_RETURN", DbType:="DateTime")>  _
	Public Property DATE_RETURN() As System.Nullable(Of Date)
		Get
			Return Me._DATE_RETURN
		End Get
		Set
			If (Me._DATE_RETURN.Equals(value) = false) Then
				Me.OnDATE_RETURNChanging(value)
				Me.SendPropertyChanging
				Me._DATE_RETURN = value
				Me.SendPropertyChanged("DATE_RETURN")
				Me.OnDATE_RETURNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_CUSTOM", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_CUSTOM() As String
		Get
			Return Me._NAME_CUSTOM
		End Get
		Set
			If (String.Equals(Me._NAME_CUSTOM, value) = false) Then
				Me.OnNAME_CUSTOMChanging(value)
				Me.SendPropertyChanging
				Me._NAME_CUSTOM = value
				Me.SendPropertyChanged("NAME_CUSTOM")
				Me.OnNAME_CUSTOMChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_PLANEDIT_DRUGOLD")>  _
Partial Public Class PDF_PLANEDIT_DRUGOLD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PLAN_EDIT_GRUGf As String
	
	Private _NAME_PLACE1f As String
	
	Private _NUMBER_PLACEf As String
	
	Private _DATE_FMPf As String
	
	Private _TEAM_LEADERf As String
	
	Private _FOUND_SERIOUSf As String
	
	Private _FOUND_IMPORTANTf As String
	
	Private _FOUND_LITTLEf As String
	
	Private _NUMBUR_SERIOUSf As String
	
	Private _NUMBUR_IMPORTANTf As String
	
	Private _NUMBUR_LITTLEf As String
	
	Private _DATE_RECIVEPLANf As System.Nullable(Of Date)
	
	Private _APPRO_TEAMLEf As String
	
	Private _NAME_APLEff As String
	
	Private _DATE_APLEf As System.Nullable(Of Date)
	
	Private _APPRO_QSMf As String
	
	Private _NAME_QSMf As String
	
	Private _DATE_QSMf As System.Nullable(Of Date)
	
	Private _DATE_EDIESUCESSf As System.Nullable(Of Date)
	
	Private _NAME_EDITf As String
	
	Private _PLAN_EDIT_GRUGf2 As String
	
	Private _NAME_PLACEf2 As String
	
	Private _NUMBR_LICENSEEf2 As String
	
	Private _DATE_CHECKFMPf2 As System.Nullable(Of Date)
	
	Private _TEAM_LEADERf2 As String
	
	Private _NO_TOPIC1 As String
	
	Private _CATETI_DEFEC1 As String
	
	Private _CONTENT_DEFEC1 As String
	
	Private _NO_TOPIC2 As String
	
	Private _CATETI_DEFEC2 As String
	
	Private _CONTENT_DEFEC2 As String
	
	Private _SOVE_DATE21 As System.Nullable(Of Date)
	
	Private _IF_PROTECT2 As String
	
	Private _SOVE_DATE22 As System.Nullable(Of Date)
	
	Private _NAME_EDIT2 As String
	
	Private _POSITION_DEFEC2 As String
	
	Private _DATE_DEFEC2 As System.Nullable(Of Date)
	
	Private _PLAN_EDIT_GRUG3 As String
	
	Private _NAME_PLACE3 As String
	
	Private _NUMBER_LICENSEE3 As String
	
	Private _DATE_CHECKFMP3 As String
	
	Private _TEAM_LEADER3 As String
	
	Private _NO_TOPIC3 As String
	
	Private _CATETI_DEFEC3 As String
	
	Private _HEAD_OF_TEAM3 As String
	
	Private _DUETO_OF_TEAM3 As String
	
	Private _NAME_OF_TEAM3 As String
	
	Private _DATE_OF_TEAM3 As System.Nullable(Of Date)
	
	Private _QSM_ASSIGNED3 As String
	
	Private _DUETO_QSM_ASSIGNED3 As String
	
	Private _NAME_QSM_ASSIGNED3 As String
	
	Private _DATE_QSM_ASSIGNED3 As System.Nullable(Of Date)
	
	Private _HOW_TOCHECK3 As String
	
	Private _OTHER_TOCHECK3 As String
	
	Private _NO_TOPIC4 As String
	
	Private _CATETI_DEFEC4 As String
	
	Private _EVIDENCE4 As String
	
	Private _COMMENT4 As String
	
	Private _DATE_EDITSUCESS4 As System.Nullable(Of Date)
	
	Private _NAME_EDITSUCESS4 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPLAN_EDIT_GRUGfChanging(value As String)
    End Sub
    Partial Private Sub OnPLAN_EDIT_GRUGfChanged()
    End Sub
    Partial Private Sub OnNAME_PLACE1fChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PLACE1fChanged()
    End Sub
    Partial Private Sub OnNUMBER_PLACEfChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_PLACEfChanged()
    End Sub
    Partial Private Sub OnDATE_FMPfChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_FMPfChanged()
    End Sub
    Partial Private Sub OnTEAM_LEADERfChanging(value As String)
    End Sub
    Partial Private Sub OnTEAM_LEADERfChanged()
    End Sub
    Partial Private Sub OnFOUND_SERIOUSfChanging(value As String)
    End Sub
    Partial Private Sub OnFOUND_SERIOUSfChanged()
    End Sub
    Partial Private Sub OnFOUND_IMPORTANTfChanging(value As String)
    End Sub
    Partial Private Sub OnFOUND_IMPORTANTfChanged()
    End Sub
    Partial Private Sub OnFOUND_LITTLEfChanging(value As String)
    End Sub
    Partial Private Sub OnFOUND_LITTLEfChanged()
    End Sub
    Partial Private Sub OnNUMBUR_SERIOUSfChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBUR_SERIOUSfChanged()
    End Sub
    Partial Private Sub OnNUMBUR_IMPORTANTfChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBUR_IMPORTANTfChanged()
    End Sub
    Partial Private Sub OnNUMBUR_LITTLEfChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBUR_LITTLEfChanged()
    End Sub
    Partial Private Sub OnDATE_RECIVEPLANfChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_RECIVEPLANfChanged()
    End Sub
    Partial Private Sub OnAPPRO_TEAMLEfChanging(value As String)
    End Sub
    Partial Private Sub OnAPPRO_TEAMLEfChanged()
    End Sub
    Partial Private Sub OnNAME_APLEffChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_APLEffChanged()
    End Sub
    Partial Private Sub OnDATE_APLEfChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_APLEfChanged()
    End Sub
    Partial Private Sub OnAPPRO_QSMfChanging(value As String)
    End Sub
    Partial Private Sub OnAPPRO_QSMfChanged()
    End Sub
    Partial Private Sub OnNAME_QSMfChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_QSMfChanged()
    End Sub
    Partial Private Sub OnDATE_QSMfChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_QSMfChanged()
    End Sub
    Partial Private Sub OnDATE_EDIESUCESSfChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_EDIESUCESSfChanged()
    End Sub
    Partial Private Sub OnNAME_EDITfChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_EDITfChanged()
    End Sub
    Partial Private Sub OnPLAN_EDIT_GRUGf2Changing(value As String)
    End Sub
    Partial Private Sub OnPLAN_EDIT_GRUGf2Changed()
    End Sub
    Partial Private Sub OnNAME_PLACEf2Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_PLACEf2Changed()
    End Sub
    Partial Private Sub OnNUMBR_LICENSEEf2Changing(value As String)
    End Sub
    Partial Private Sub OnNUMBR_LICENSEEf2Changed()
    End Sub
    Partial Private Sub OnDATE_CHECKFMPf2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CHECKFMPf2Changed()
    End Sub
    Partial Private Sub OnTEAM_LEADERf2Changing(value As String)
    End Sub
    Partial Private Sub OnTEAM_LEADERf2Changed()
    End Sub
    Partial Private Sub OnNO_TOPIC1Changing(value As String)
    End Sub
    Partial Private Sub OnNO_TOPIC1Changed()
    End Sub
    Partial Private Sub OnCATETI_DEFEC1Changing(value As String)
    End Sub
    Partial Private Sub OnCATETI_DEFEC1Changed()
    End Sub
    Partial Private Sub OnCONTENT_DEFEC1Changing(value As String)
    End Sub
    Partial Private Sub OnCONTENT_DEFEC1Changed()
    End Sub
    Partial Private Sub OnNO_TOPIC2Changing(value As String)
    End Sub
    Partial Private Sub OnNO_TOPIC2Changed()
    End Sub
    Partial Private Sub OnCATETI_DEFEC2Changing(value As String)
    End Sub
    Partial Private Sub OnCATETI_DEFEC2Changed()
    End Sub
    Partial Private Sub OnCONTENT_DEFEC2Changing(value As String)
    End Sub
    Partial Private Sub OnCONTENT_DEFEC2Changed()
    End Sub
    Partial Private Sub OnSOVE_DATE21Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSOVE_DATE21Changed()
    End Sub
    Partial Private Sub OnIF_PROTECT2Changing(value As String)
    End Sub
    Partial Private Sub OnIF_PROTECT2Changed()
    End Sub
    Partial Private Sub OnSOVE_DATE22Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSOVE_DATE22Changed()
    End Sub
    Partial Private Sub OnNAME_EDIT2Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_EDIT2Changed()
    End Sub
    Partial Private Sub OnPOSITION_DEFEC2Changing(value As String)
    End Sub
    Partial Private Sub OnPOSITION_DEFEC2Changed()
    End Sub
    Partial Private Sub OnDATE_DEFEC2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_DEFEC2Changed()
    End Sub
    Partial Private Sub OnPLAN_EDIT_GRUG3Changing(value As String)
    End Sub
    Partial Private Sub OnPLAN_EDIT_GRUG3Changed()
    End Sub
    Partial Private Sub OnNAME_PLACE3Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_PLACE3Changed()
    End Sub
    Partial Private Sub OnNUMBER_LICENSEE3Changing(value As String)
    End Sub
    Partial Private Sub OnNUMBER_LICENSEE3Changed()
    End Sub
    Partial Private Sub OnDATE_CHECKFMP3Changing(value As String)
    End Sub
    Partial Private Sub OnDATE_CHECKFMP3Changed()
    End Sub
    Partial Private Sub OnTEAM_LEADER3Changing(value As String)
    End Sub
    Partial Private Sub OnTEAM_LEADER3Changed()
    End Sub
    Partial Private Sub OnNO_TOPIC3Changing(value As String)
    End Sub
    Partial Private Sub OnNO_TOPIC3Changed()
    End Sub
    Partial Private Sub OnCATETI_DEFEC3Changing(value As String)
    End Sub
    Partial Private Sub OnCATETI_DEFEC3Changed()
    End Sub
    Partial Private Sub OnHEAD_OF_TEAM3Changing(value As String)
    End Sub
    Partial Private Sub OnHEAD_OF_TEAM3Changed()
    End Sub
    Partial Private Sub OnDUETO_OF_TEAM3Changing(value As String)
    End Sub
    Partial Private Sub OnDUETO_OF_TEAM3Changed()
    End Sub
    Partial Private Sub OnNAME_OF_TEAM3Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_OF_TEAM3Changed()
    End Sub
    Partial Private Sub OnDATE_OF_TEAM3Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_OF_TEAM3Changed()
    End Sub
    Partial Private Sub OnQSM_ASSIGNED3Changing(value As String)
    End Sub
    Partial Private Sub OnQSM_ASSIGNED3Changed()
    End Sub
    Partial Private Sub OnDUETO_QSM_ASSIGNED3Changing(value As String)
    End Sub
    Partial Private Sub OnDUETO_QSM_ASSIGNED3Changed()
    End Sub
    Partial Private Sub OnNAME_QSM_ASSIGNED3Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_QSM_ASSIGNED3Changed()
    End Sub
    Partial Private Sub OnDATE_QSM_ASSIGNED3Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_QSM_ASSIGNED3Changed()
    End Sub
    Partial Private Sub OnHOW_TOCHECK3Changing(value As String)
    End Sub
    Partial Private Sub OnHOW_TOCHECK3Changed()
    End Sub
    Partial Private Sub OnOTHER_TOCHECK3Changing(value As String)
    End Sub
    Partial Private Sub OnOTHER_TOCHECK3Changed()
    End Sub
    Partial Private Sub OnNO_TOPIC4Changing(value As String)
    End Sub
    Partial Private Sub OnNO_TOPIC4Changed()
    End Sub
    Partial Private Sub OnCATETI_DEFEC4Changing(value As String)
    End Sub
    Partial Private Sub OnCATETI_DEFEC4Changed()
    End Sub
    Partial Private Sub OnEVIDENCE4Changing(value As String)
    End Sub
    Partial Private Sub OnEVIDENCE4Changed()
    End Sub
    Partial Private Sub OnCOMMENT4Changing(value As String)
    End Sub
    Partial Private Sub OnCOMMENT4Changed()
    End Sub
    Partial Private Sub OnDATE_EDITSUCESS4Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_EDITSUCESS4Changed()
    End Sub
    Partial Private Sub OnNAME_EDITSUCESS4Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_EDITSUCESS4Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_EDIT_GRUGf", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_EDIT_GRUGf() As String
		Get
			Return Me._PLAN_EDIT_GRUGf
		End Get
		Set
			If (String.Equals(Me._PLAN_EDIT_GRUGf, value) = false) Then
				Me.OnPLAN_EDIT_GRUGfChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_EDIT_GRUGf = value
				Me.SendPropertyChanged("PLAN_EDIT_GRUGf")
				Me.OnPLAN_EDIT_GRUGfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PLACE1f", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PLACE1f() As String
		Get
			Return Me._NAME_PLACE1f
		End Get
		Set
			If (String.Equals(Me._NAME_PLACE1f, value) = false) Then
				Me.OnNAME_PLACE1fChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PLACE1f = value
				Me.SendPropertyChanged("NAME_PLACE1f")
				Me.OnNAME_PLACE1fChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_PLACEf", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_PLACEf() As String
		Get
			Return Me._NUMBER_PLACEf
		End Get
		Set
			If (String.Equals(Me._NUMBER_PLACEf, value) = false) Then
				Me.OnNUMBER_PLACEfChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_PLACEf = value
				Me.SendPropertyChanged("NUMBER_PLACEf")
				Me.OnNUMBER_PLACEfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_FMPf", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_FMPf() As String
		Get
			Return Me._DATE_FMPf
		End Get
		Set
			If (String.Equals(Me._DATE_FMPf, value) = false) Then
				Me.OnDATE_FMPfChanging(value)
				Me.SendPropertyChanging
				Me._DATE_FMPf = value
				Me.SendPropertyChanged("DATE_FMPf")
				Me.OnDATE_FMPfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEAM_LEADERf", DbType:="NVarChar(MAX)")>  _
	Public Property TEAM_LEADERf() As String
		Get
			Return Me._TEAM_LEADERf
		End Get
		Set
			If (String.Equals(Me._TEAM_LEADERf, value) = false) Then
				Me.OnTEAM_LEADERfChanging(value)
				Me.SendPropertyChanging
				Me._TEAM_LEADERf = value
				Me.SendPropertyChanged("TEAM_LEADERf")
				Me.OnTEAM_LEADERfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOUND_SERIOUSf", DbType:="NVarChar(MAX)")>  _
	Public Property FOUND_SERIOUSf() As String
		Get
			Return Me._FOUND_SERIOUSf
		End Get
		Set
			If (String.Equals(Me._FOUND_SERIOUSf, value) = false) Then
				Me.OnFOUND_SERIOUSfChanging(value)
				Me.SendPropertyChanging
				Me._FOUND_SERIOUSf = value
				Me.SendPropertyChanged("FOUND_SERIOUSf")
				Me.OnFOUND_SERIOUSfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOUND_IMPORTANTf", DbType:="NVarChar(MAX)")>  _
	Public Property FOUND_IMPORTANTf() As String
		Get
			Return Me._FOUND_IMPORTANTf
		End Get
		Set
			If (String.Equals(Me._FOUND_IMPORTANTf, value) = false) Then
				Me.OnFOUND_IMPORTANTfChanging(value)
				Me.SendPropertyChanging
				Me._FOUND_IMPORTANTf = value
				Me.SendPropertyChanged("FOUND_IMPORTANTf")
				Me.OnFOUND_IMPORTANTfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOUND_LITTLEf", DbType:="NVarChar(MAX)")>  _
	Public Property FOUND_LITTLEf() As String
		Get
			Return Me._FOUND_LITTLEf
		End Get
		Set
			If (String.Equals(Me._FOUND_LITTLEf, value) = false) Then
				Me.OnFOUND_LITTLEfChanging(value)
				Me.SendPropertyChanging
				Me._FOUND_LITTLEf = value
				Me.SendPropertyChanged("FOUND_LITTLEf")
				Me.OnFOUND_LITTLEfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBUR_SERIOUSf", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBUR_SERIOUSf() As String
		Get
			Return Me._NUMBUR_SERIOUSf
		End Get
		Set
			If (String.Equals(Me._NUMBUR_SERIOUSf, value) = false) Then
				Me.OnNUMBUR_SERIOUSfChanging(value)
				Me.SendPropertyChanging
				Me._NUMBUR_SERIOUSf = value
				Me.SendPropertyChanged("NUMBUR_SERIOUSf")
				Me.OnNUMBUR_SERIOUSfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBUR_IMPORTANTf", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBUR_IMPORTANTf() As String
		Get
			Return Me._NUMBUR_IMPORTANTf
		End Get
		Set
			If (String.Equals(Me._NUMBUR_IMPORTANTf, value) = false) Then
				Me.OnNUMBUR_IMPORTANTfChanging(value)
				Me.SendPropertyChanging
				Me._NUMBUR_IMPORTANTf = value
				Me.SendPropertyChanged("NUMBUR_IMPORTANTf")
				Me.OnNUMBUR_IMPORTANTfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBUR_LITTLEf", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBUR_LITTLEf() As String
		Get
			Return Me._NUMBUR_LITTLEf
		End Get
		Set
			If (String.Equals(Me._NUMBUR_LITTLEf, value) = false) Then
				Me.OnNUMBUR_LITTLEfChanging(value)
				Me.SendPropertyChanging
				Me._NUMBUR_LITTLEf = value
				Me.SendPropertyChanged("NUMBUR_LITTLEf")
				Me.OnNUMBUR_LITTLEfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_RECIVEPLANf", DbType:="DateTime")>  _
	Public Property DATE_RECIVEPLANf() As System.Nullable(Of Date)
		Get
			Return Me._DATE_RECIVEPLANf
		End Get
		Set
			If (Me._DATE_RECIVEPLANf.Equals(value) = false) Then
				Me.OnDATE_RECIVEPLANfChanging(value)
				Me.SendPropertyChanging
				Me._DATE_RECIVEPLANf = value
				Me.SendPropertyChanged("DATE_RECIVEPLANf")
				Me.OnDATE_RECIVEPLANfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPRO_TEAMLEf", DbType:="NVarChar(MAX)")>  _
	Public Property APPRO_TEAMLEf() As String
		Get
			Return Me._APPRO_TEAMLEf
		End Get
		Set
			If (String.Equals(Me._APPRO_TEAMLEf, value) = false) Then
				Me.OnAPPRO_TEAMLEfChanging(value)
				Me.SendPropertyChanging
				Me._APPRO_TEAMLEf = value
				Me.SendPropertyChanged("APPRO_TEAMLEf")
				Me.OnAPPRO_TEAMLEfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_APLEff", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_APLEff() As String
		Get
			Return Me._NAME_APLEff
		End Get
		Set
			If (String.Equals(Me._NAME_APLEff, value) = false) Then
				Me.OnNAME_APLEffChanging(value)
				Me.SendPropertyChanging
				Me._NAME_APLEff = value
				Me.SendPropertyChanged("NAME_APLEff")
				Me.OnNAME_APLEffChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_APLEf", DbType:="DateTime")>  _
	Public Property DATE_APLEf() As System.Nullable(Of Date)
		Get
			Return Me._DATE_APLEf
		End Get
		Set
			If (Me._DATE_APLEf.Equals(value) = false) Then
				Me.OnDATE_APLEfChanging(value)
				Me.SendPropertyChanging
				Me._DATE_APLEf = value
				Me.SendPropertyChanged("DATE_APLEf")
				Me.OnDATE_APLEfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPRO_QSMf", DbType:="NVarChar(MAX)")>  _
	Public Property APPRO_QSMf() As String
		Get
			Return Me._APPRO_QSMf
		End Get
		Set
			If (String.Equals(Me._APPRO_QSMf, value) = false) Then
				Me.OnAPPRO_QSMfChanging(value)
				Me.SendPropertyChanging
				Me._APPRO_QSMf = value
				Me.SendPropertyChanged("APPRO_QSMf")
				Me.OnAPPRO_QSMfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_QSMf", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_QSMf() As String
		Get
			Return Me._NAME_QSMf
		End Get
		Set
			If (String.Equals(Me._NAME_QSMf, value) = false) Then
				Me.OnNAME_QSMfChanging(value)
				Me.SendPropertyChanging
				Me._NAME_QSMf = value
				Me.SendPropertyChanged("NAME_QSMf")
				Me.OnNAME_QSMfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_QSMf", DbType:="DateTime")>  _
	Public Property DATE_QSMf() As System.Nullable(Of Date)
		Get
			Return Me._DATE_QSMf
		End Get
		Set
			If (Me._DATE_QSMf.Equals(value) = false) Then
				Me.OnDATE_QSMfChanging(value)
				Me.SendPropertyChanging
				Me._DATE_QSMf = value
				Me.SendPropertyChanged("DATE_QSMf")
				Me.OnDATE_QSMfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_EDIESUCESSf", DbType:="DateTime")>  _
	Public Property DATE_EDIESUCESSf() As System.Nullable(Of Date)
		Get
			Return Me._DATE_EDIESUCESSf
		End Get
		Set
			If (Me._DATE_EDIESUCESSf.Equals(value) = false) Then
				Me.OnDATE_EDIESUCESSfChanging(value)
				Me.SendPropertyChanging
				Me._DATE_EDIESUCESSf = value
				Me.SendPropertyChanged("DATE_EDIESUCESSf")
				Me.OnDATE_EDIESUCESSfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_EDITf", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_EDITf() As String
		Get
			Return Me._NAME_EDITf
		End Get
		Set
			If (String.Equals(Me._NAME_EDITf, value) = false) Then
				Me.OnNAME_EDITfChanging(value)
				Me.SendPropertyChanging
				Me._NAME_EDITf = value
				Me.SendPropertyChanged("NAME_EDITf")
				Me.OnNAME_EDITfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_EDIT_GRUGf2", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_EDIT_GRUGf2() As String
		Get
			Return Me._PLAN_EDIT_GRUGf2
		End Get
		Set
			If (String.Equals(Me._PLAN_EDIT_GRUGf2, value) = false) Then
				Me.OnPLAN_EDIT_GRUGf2Changing(value)
				Me.SendPropertyChanging
				Me._PLAN_EDIT_GRUGf2 = value
				Me.SendPropertyChanged("PLAN_EDIT_GRUGf2")
				Me.OnPLAN_EDIT_GRUGf2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PLACEf2", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PLACEf2() As String
		Get
			Return Me._NAME_PLACEf2
		End Get
		Set
			If (String.Equals(Me._NAME_PLACEf2, value) = false) Then
				Me.OnNAME_PLACEf2Changing(value)
				Me.SendPropertyChanging
				Me._NAME_PLACEf2 = value
				Me.SendPropertyChanged("NAME_PLACEf2")
				Me.OnNAME_PLACEf2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBR_LICENSEEf2", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBR_LICENSEEf2() As String
		Get
			Return Me._NUMBR_LICENSEEf2
		End Get
		Set
			If (String.Equals(Me._NUMBR_LICENSEEf2, value) = false) Then
				Me.OnNUMBR_LICENSEEf2Changing(value)
				Me.SendPropertyChanging
				Me._NUMBR_LICENSEEf2 = value
				Me.SendPropertyChanged("NUMBR_LICENSEEf2")
				Me.OnNUMBR_LICENSEEf2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CHECKFMPf2", DbType:="DateTime")>  _
	Public Property DATE_CHECKFMPf2() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CHECKFMPf2
		End Get
		Set
			If (Me._DATE_CHECKFMPf2.Equals(value) = false) Then
				Me.OnDATE_CHECKFMPf2Changing(value)
				Me.SendPropertyChanging
				Me._DATE_CHECKFMPf2 = value
				Me.SendPropertyChanged("DATE_CHECKFMPf2")
				Me.OnDATE_CHECKFMPf2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEAM_LEADERf2", DbType:="NVarChar(MAX)")>  _
	Public Property TEAM_LEADERf2() As String
		Get
			Return Me._TEAM_LEADERf2
		End Get
		Set
			If (String.Equals(Me._TEAM_LEADERf2, value) = false) Then
				Me.OnTEAM_LEADERf2Changing(value)
				Me.SendPropertyChanging
				Me._TEAM_LEADERf2 = value
				Me.SendPropertyChanged("TEAM_LEADERf2")
				Me.OnTEAM_LEADERf2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_TOPIC1", DbType:="NVarChar(MAX)")>  _
	Public Property NO_TOPIC1() As String
		Get
			Return Me._NO_TOPIC1
		End Get
		Set
			If (String.Equals(Me._NO_TOPIC1, value) = false) Then
				Me.OnNO_TOPIC1Changing(value)
				Me.SendPropertyChanging
				Me._NO_TOPIC1 = value
				Me.SendPropertyChanged("NO_TOPIC1")
				Me.OnNO_TOPIC1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATETI_DEFEC1", DbType:="NVarChar(MAX)")>  _
	Public Property CATETI_DEFEC1() As String
		Get
			Return Me._CATETI_DEFEC1
		End Get
		Set
			If (String.Equals(Me._CATETI_DEFEC1, value) = false) Then
				Me.OnCATETI_DEFEC1Changing(value)
				Me.SendPropertyChanging
				Me._CATETI_DEFEC1 = value
				Me.SendPropertyChanged("CATETI_DEFEC1")
				Me.OnCATETI_DEFEC1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTENT_DEFEC1", DbType:="NVarChar(MAX)")>  _
	Public Property CONTENT_DEFEC1() As String
		Get
			Return Me._CONTENT_DEFEC1
		End Get
		Set
			If (String.Equals(Me._CONTENT_DEFEC1, value) = false) Then
				Me.OnCONTENT_DEFEC1Changing(value)
				Me.SendPropertyChanging
				Me._CONTENT_DEFEC1 = value
				Me.SendPropertyChanged("CONTENT_DEFEC1")
				Me.OnCONTENT_DEFEC1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_TOPIC2", DbType:="NVarChar(MAX)")>  _
	Public Property NO_TOPIC2() As String
		Get
			Return Me._NO_TOPIC2
		End Get
		Set
			If (String.Equals(Me._NO_TOPIC2, value) = false) Then
				Me.OnNO_TOPIC2Changing(value)
				Me.SendPropertyChanging
				Me._NO_TOPIC2 = value
				Me.SendPropertyChanged("NO_TOPIC2")
				Me.OnNO_TOPIC2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATETI_DEFEC2", DbType:="NVarChar(MAX)")>  _
	Public Property CATETI_DEFEC2() As String
		Get
			Return Me._CATETI_DEFEC2
		End Get
		Set
			If (String.Equals(Me._CATETI_DEFEC2, value) = false) Then
				Me.OnCATETI_DEFEC2Changing(value)
				Me.SendPropertyChanging
				Me._CATETI_DEFEC2 = value
				Me.SendPropertyChanged("CATETI_DEFEC2")
				Me.OnCATETI_DEFEC2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTENT_DEFEC2", DbType:="NVarChar(MAX)")>  _
	Public Property CONTENT_DEFEC2() As String
		Get
			Return Me._CONTENT_DEFEC2
		End Get
		Set
			If (String.Equals(Me._CONTENT_DEFEC2, value) = false) Then
				Me.OnCONTENT_DEFEC2Changing(value)
				Me.SendPropertyChanging
				Me._CONTENT_DEFEC2 = value
				Me.SendPropertyChanged("CONTENT_DEFEC2")
				Me.OnCONTENT_DEFEC2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOVE_DATE21", DbType:="DateTime")>  _
	Public Property SOVE_DATE21() As System.Nullable(Of Date)
		Get
			Return Me._SOVE_DATE21
		End Get
		Set
			If (Me._SOVE_DATE21.Equals(value) = false) Then
				Me.OnSOVE_DATE21Changing(value)
				Me.SendPropertyChanging
				Me._SOVE_DATE21 = value
				Me.SendPropertyChanged("SOVE_DATE21")
				Me.OnSOVE_DATE21Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IF_PROTECT2", DbType:="NVarChar(MAX)")>  _
	Public Property IF_PROTECT2() As String
		Get
			Return Me._IF_PROTECT2
		End Get
		Set
			If (String.Equals(Me._IF_PROTECT2, value) = false) Then
				Me.OnIF_PROTECT2Changing(value)
				Me.SendPropertyChanging
				Me._IF_PROTECT2 = value
				Me.SendPropertyChanged("IF_PROTECT2")
				Me.OnIF_PROTECT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOVE_DATE22", DbType:="DateTime")>  _
	Public Property SOVE_DATE22() As System.Nullable(Of Date)
		Get
			Return Me._SOVE_DATE22
		End Get
		Set
			If (Me._SOVE_DATE22.Equals(value) = false) Then
				Me.OnSOVE_DATE22Changing(value)
				Me.SendPropertyChanging
				Me._SOVE_DATE22 = value
				Me.SendPropertyChanged("SOVE_DATE22")
				Me.OnSOVE_DATE22Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_EDIT2", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_EDIT2() As String
		Get
			Return Me._NAME_EDIT2
		End Get
		Set
			If (String.Equals(Me._NAME_EDIT2, value) = false) Then
				Me.OnNAME_EDIT2Changing(value)
				Me.SendPropertyChanging
				Me._NAME_EDIT2 = value
				Me.SendPropertyChanged("NAME_EDIT2")
				Me.OnNAME_EDIT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_DEFEC2", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_DEFEC2() As String
		Get
			Return Me._POSITION_DEFEC2
		End Get
		Set
			If (String.Equals(Me._POSITION_DEFEC2, value) = false) Then
				Me.OnPOSITION_DEFEC2Changing(value)
				Me.SendPropertyChanging
				Me._POSITION_DEFEC2 = value
				Me.SendPropertyChanged("POSITION_DEFEC2")
				Me.OnPOSITION_DEFEC2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_DEFEC2", DbType:="DateTime")>  _
	Public Property DATE_DEFEC2() As System.Nullable(Of Date)
		Get
			Return Me._DATE_DEFEC2
		End Get
		Set
			If (Me._DATE_DEFEC2.Equals(value) = false) Then
				Me.OnDATE_DEFEC2Changing(value)
				Me.SendPropertyChanging
				Me._DATE_DEFEC2 = value
				Me.SendPropertyChanged("DATE_DEFEC2")
				Me.OnDATE_DEFEC2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_EDIT_GRUG3", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_EDIT_GRUG3() As String
		Get
			Return Me._PLAN_EDIT_GRUG3
		End Get
		Set
			If (String.Equals(Me._PLAN_EDIT_GRUG3, value) = false) Then
				Me.OnPLAN_EDIT_GRUG3Changing(value)
				Me.SendPropertyChanging
				Me._PLAN_EDIT_GRUG3 = value
				Me.SendPropertyChanged("PLAN_EDIT_GRUG3")
				Me.OnPLAN_EDIT_GRUG3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PLACE3", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PLACE3() As String
		Get
			Return Me._NAME_PLACE3
		End Get
		Set
			If (String.Equals(Me._NAME_PLACE3, value) = false) Then
				Me.OnNAME_PLACE3Changing(value)
				Me.SendPropertyChanging
				Me._NAME_PLACE3 = value
				Me.SendPropertyChanged("NAME_PLACE3")
				Me.OnNAME_PLACE3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_LICENSEE3", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_LICENSEE3() As String
		Get
			Return Me._NUMBER_LICENSEE3
		End Get
		Set
			If (String.Equals(Me._NUMBER_LICENSEE3, value) = false) Then
				Me.OnNUMBER_LICENSEE3Changing(value)
				Me.SendPropertyChanging
				Me._NUMBER_LICENSEE3 = value
				Me.SendPropertyChanged("NUMBER_LICENSEE3")
				Me.OnNUMBER_LICENSEE3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CHECKFMP3", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_CHECKFMP3() As String
		Get
			Return Me._DATE_CHECKFMP3
		End Get
		Set
			If (String.Equals(Me._DATE_CHECKFMP3, value) = false) Then
				Me.OnDATE_CHECKFMP3Changing(value)
				Me.SendPropertyChanging
				Me._DATE_CHECKFMP3 = value
				Me.SendPropertyChanged("DATE_CHECKFMP3")
				Me.OnDATE_CHECKFMP3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEAM_LEADER3", DbType:="NVarChar(MAX)")>  _
	Public Property TEAM_LEADER3() As String
		Get
			Return Me._TEAM_LEADER3
		End Get
		Set
			If (String.Equals(Me._TEAM_LEADER3, value) = false) Then
				Me.OnTEAM_LEADER3Changing(value)
				Me.SendPropertyChanging
				Me._TEAM_LEADER3 = value
				Me.SendPropertyChanged("TEAM_LEADER3")
				Me.OnTEAM_LEADER3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_TOPIC3", DbType:="NVarChar(MAX)")>  _
	Public Property NO_TOPIC3() As String
		Get
			Return Me._NO_TOPIC3
		End Get
		Set
			If (String.Equals(Me._NO_TOPIC3, value) = false) Then
				Me.OnNO_TOPIC3Changing(value)
				Me.SendPropertyChanging
				Me._NO_TOPIC3 = value
				Me.SendPropertyChanged("NO_TOPIC3")
				Me.OnNO_TOPIC3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATETI_DEFEC3", DbType:="NVarChar(MAX)")>  _
	Public Property CATETI_DEFEC3() As String
		Get
			Return Me._CATETI_DEFEC3
		End Get
		Set
			If (String.Equals(Me._CATETI_DEFEC3, value) = false) Then
				Me.OnCATETI_DEFEC3Changing(value)
				Me.SendPropertyChanging
				Me._CATETI_DEFEC3 = value
				Me.SendPropertyChanged("CATETI_DEFEC3")
				Me.OnCATETI_DEFEC3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_OF_TEAM3", DbType:="NVarChar(MAX)")>  _
	Public Property HEAD_OF_TEAM3() As String
		Get
			Return Me._HEAD_OF_TEAM3
		End Get
		Set
			If (String.Equals(Me._HEAD_OF_TEAM3, value) = false) Then
				Me.OnHEAD_OF_TEAM3Changing(value)
				Me.SendPropertyChanging
				Me._HEAD_OF_TEAM3 = value
				Me.SendPropertyChanged("HEAD_OF_TEAM3")
				Me.OnHEAD_OF_TEAM3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUETO_OF_TEAM3", DbType:="NVarChar(MAX)")>  _
	Public Property DUETO_OF_TEAM3() As String
		Get
			Return Me._DUETO_OF_TEAM3
		End Get
		Set
			If (String.Equals(Me._DUETO_OF_TEAM3, value) = false) Then
				Me.OnDUETO_OF_TEAM3Changing(value)
				Me.SendPropertyChanging
				Me._DUETO_OF_TEAM3 = value
				Me.SendPropertyChanged("DUETO_OF_TEAM3")
				Me.OnDUETO_OF_TEAM3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OF_TEAM3", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OF_TEAM3() As String
		Get
			Return Me._NAME_OF_TEAM3
		End Get
		Set
			If (String.Equals(Me._NAME_OF_TEAM3, value) = false) Then
				Me.OnNAME_OF_TEAM3Changing(value)
				Me.SendPropertyChanging
				Me._NAME_OF_TEAM3 = value
				Me.SendPropertyChanged("NAME_OF_TEAM3")
				Me.OnNAME_OF_TEAM3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_OF_TEAM3", DbType:="DateTime")>  _
	Public Property DATE_OF_TEAM3() As System.Nullable(Of Date)
		Get
			Return Me._DATE_OF_TEAM3
		End Get
		Set
			If (Me._DATE_OF_TEAM3.Equals(value) = false) Then
				Me.OnDATE_OF_TEAM3Changing(value)
				Me.SendPropertyChanging
				Me._DATE_OF_TEAM3 = value
				Me.SendPropertyChanged("DATE_OF_TEAM3")
				Me.OnDATE_OF_TEAM3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QSM_ASSIGNED3", DbType:="NVarChar(MAX)")>  _
	Public Property QSM_ASSIGNED3() As String
		Get
			Return Me._QSM_ASSIGNED3
		End Get
		Set
			If (String.Equals(Me._QSM_ASSIGNED3, value) = false) Then
				Me.OnQSM_ASSIGNED3Changing(value)
				Me.SendPropertyChanging
				Me._QSM_ASSIGNED3 = value
				Me.SendPropertyChanged("QSM_ASSIGNED3")
				Me.OnQSM_ASSIGNED3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUETO_QSM_ASSIGNED3", DbType:="NVarChar(MAX)")>  _
	Public Property DUETO_QSM_ASSIGNED3() As String
		Get
			Return Me._DUETO_QSM_ASSIGNED3
		End Get
		Set
			If (String.Equals(Me._DUETO_QSM_ASSIGNED3, value) = false) Then
				Me.OnDUETO_QSM_ASSIGNED3Changing(value)
				Me.SendPropertyChanging
				Me._DUETO_QSM_ASSIGNED3 = value
				Me.SendPropertyChanged("DUETO_QSM_ASSIGNED3")
				Me.OnDUETO_QSM_ASSIGNED3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_QSM_ASSIGNED3", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_QSM_ASSIGNED3() As String
		Get
			Return Me._NAME_QSM_ASSIGNED3
		End Get
		Set
			If (String.Equals(Me._NAME_QSM_ASSIGNED3, value) = false) Then
				Me.OnNAME_QSM_ASSIGNED3Changing(value)
				Me.SendPropertyChanging
				Me._NAME_QSM_ASSIGNED3 = value
				Me.SendPropertyChanged("NAME_QSM_ASSIGNED3")
				Me.OnNAME_QSM_ASSIGNED3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_QSM_ASSIGNED3", DbType:="DateTime")>  _
	Public Property DATE_QSM_ASSIGNED3() As System.Nullable(Of Date)
		Get
			Return Me._DATE_QSM_ASSIGNED3
		End Get
		Set
			If (Me._DATE_QSM_ASSIGNED3.Equals(value) = false) Then
				Me.OnDATE_QSM_ASSIGNED3Changing(value)
				Me.SendPropertyChanging
				Me._DATE_QSM_ASSIGNED3 = value
				Me.SendPropertyChanged("DATE_QSM_ASSIGNED3")
				Me.OnDATE_QSM_ASSIGNED3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOW_TOCHECK3", DbType:="NVarChar(MAX)")>  _
	Public Property HOW_TOCHECK3() As String
		Get
			Return Me._HOW_TOCHECK3
		End Get
		Set
			If (String.Equals(Me._HOW_TOCHECK3, value) = false) Then
				Me.OnHOW_TOCHECK3Changing(value)
				Me.SendPropertyChanging
				Me._HOW_TOCHECK3 = value
				Me.SendPropertyChanged("HOW_TOCHECK3")
				Me.OnHOW_TOCHECK3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_TOCHECK3", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_TOCHECK3() As String
		Get
			Return Me._OTHER_TOCHECK3
		End Get
		Set
			If (String.Equals(Me._OTHER_TOCHECK3, value) = false) Then
				Me.OnOTHER_TOCHECK3Changing(value)
				Me.SendPropertyChanging
				Me._OTHER_TOCHECK3 = value
				Me.SendPropertyChanged("OTHER_TOCHECK3")
				Me.OnOTHER_TOCHECK3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_TOPIC4", DbType:="NVarChar(MAX)")>  _
	Public Property NO_TOPIC4() As String
		Get
			Return Me._NO_TOPIC4
		End Get
		Set
			If (String.Equals(Me._NO_TOPIC4, value) = false) Then
				Me.OnNO_TOPIC4Changing(value)
				Me.SendPropertyChanging
				Me._NO_TOPIC4 = value
				Me.SendPropertyChanged("NO_TOPIC4")
				Me.OnNO_TOPIC4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATETI_DEFEC4", DbType:="NVarChar(MAX)")>  _
	Public Property CATETI_DEFEC4() As String
		Get
			Return Me._CATETI_DEFEC4
		End Get
		Set
			If (String.Equals(Me._CATETI_DEFEC4, value) = false) Then
				Me.OnCATETI_DEFEC4Changing(value)
				Me.SendPropertyChanging
				Me._CATETI_DEFEC4 = value
				Me.SendPropertyChanged("CATETI_DEFEC4")
				Me.OnCATETI_DEFEC4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EVIDENCE4", DbType:="NVarChar(MAX)")>  _
	Public Property EVIDENCE4() As String
		Get
			Return Me._EVIDENCE4
		End Get
		Set
			If (String.Equals(Me._EVIDENCE4, value) = false) Then
				Me.OnEVIDENCE4Changing(value)
				Me.SendPropertyChanging
				Me._EVIDENCE4 = value
				Me.SendPropertyChanged("EVIDENCE4")
				Me.OnEVIDENCE4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENT4", DbType:="NVarChar(MAX)")>  _
	Public Property COMMENT4() As String
		Get
			Return Me._COMMENT4
		End Get
		Set
			If (String.Equals(Me._COMMENT4, value) = false) Then
				Me.OnCOMMENT4Changing(value)
				Me.SendPropertyChanging
				Me._COMMENT4 = value
				Me.SendPropertyChanged("COMMENT4")
				Me.OnCOMMENT4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_EDITSUCESS4", DbType:="DateTime")>  _
	Public Property DATE_EDITSUCESS4() As System.Nullable(Of Date)
		Get
			Return Me._DATE_EDITSUCESS4
		End Get
		Set
			If (Me._DATE_EDITSUCESS4.Equals(value) = false) Then
				Me.OnDATE_EDITSUCESS4Changing(value)
				Me.SendPropertyChanging
				Me._DATE_EDITSUCESS4 = value
				Me.SendPropertyChanged("DATE_EDITSUCESS4")
				Me.OnDATE_EDITSUCESS4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_EDITSUCESS4", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_EDITSUCESS4() As String
		Get
			Return Me._NAME_EDITSUCESS4
		End Get
		Set
			If (String.Equals(Me._NAME_EDITSUCESS4, value) = false) Then
				Me.OnNAME_EDITSUCESS4Changing(value)
				Me.SendPropertyChanging
				Me._NAME_EDITSUCESS4 = value
				Me.SendPropertyChanged("NAME_EDITSUCESS4")
				Me.OnNAME_EDITSUCESS4Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_RECORD_DRUGPLACE_M")>  _
Partial Public Class PDF_RECORD_DRUGPLACE_M
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _INSPEC_PRODUC As String
	
	Private _LICENSE As String
	
	Private _NAME_ADD As String
	
	Private _NUMBER_ADD As String
	
	Private _VILLAGE_ADD As String
	
	Private _SOI_ADD As String
	
	Private _TANON_ADD As String
	
	Private _DISTRICT_ADD As String
	
	Private _AREA_ADD As String
	
	Private _PROVINCE_ADD As String
	
	Private _PHONE__ADD As String
	
	Private _FAX_ADD As String
	
	Private _POLICE_STAION As String
	
	Private _PLACE_NEAR As String
	
	Private _NAME_RE_LICENSEE As String
	
	Private _NAME_OPERATOR As String
	
	Private _NAME_INSPECTOR As String
	
	Private _NUMBER_IDCARD As String
	
	Private _WORK_TIME As System.Nullable(Of Date)
	
	Private _DATE_INSPECTOR As System.Nullable(Of Date)
	
	Private _TIME_INSPECTOR As System.Nullable(Of Date)
	
	Private _FORMAT_INSPECTOR As String
	
	Private _SCOPE_INSPECTOR As String
	
	Private _DATA_BASIC As String
	
	Private _DATA_SAMPLE As String
	
	Private _DATA_ADHERENCE As String
	
	Private _DATA_CONTROL As String
	
	Private _DATA_AUDIT As String
	
	Private _DATA_LABLE As String
	
	Private _DATA_SAMPLEFOR As String
	
	Private _DATA_QUIT As String
	
	Private _DATA_NOTQUIT As String
	
	Private _DATA_REVIWE As String
	
	Private _NAME_PLACE As String
	
	Private _DATE_PLACE As System.Nullable(Of Date)
	
	Private _NAME_LICENSEE As String
	
	Private _NAME_PERSON As String
	
	Private _NAME_PERSON2 As String
	
	Private _NAME_WITNESS As String
	
	Private _NAME_WITNESS2 As String
	
	Private _NAME_STAFFH As String
	
	Private _NAME_STAFF1 As String
	
	Private _NAME_STAFF2 As String
	
	Private _NAME_STAFF3 As String
	
	Private _NAME_STAFF4 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnINSPEC_PRODUCChanging(value As String)
    End Sub
    Partial Private Sub OnINSPEC_PRODUCChanged()
    End Sub
    Partial Private Sub OnLICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnLICENSEChanged()
    End Sub
    Partial Private Sub OnNAME_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDChanged()
    End Sub
    Partial Private Sub OnNUMBER_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_ADDChanged()
    End Sub
    Partial Private Sub OnVILLAGE_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnVILLAGE_ADDChanged()
    End Sub
    Partial Private Sub OnSOI_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnSOI_ADDChanged()
    End Sub
    Partial Private Sub OnTANON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTANON_ADDChanged()
    End Sub
    Partial Private Sub OnDISTRICT_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICT_ADDChanged()
    End Sub
    Partial Private Sub OnAREA_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnAREA_ADDChanged()
    End Sub
    Partial Private Sub OnPROVINCE_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnPROVINCE_ADDChanged()
    End Sub
    Partial Private Sub OnPHONE__ADDChanging(value As String)
    End Sub
    Partial Private Sub OnPHONE__ADDChanged()
    End Sub
    Partial Private Sub OnFAX_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnFAX_ADDChanged()
    End Sub
    Partial Private Sub OnPOLICE_STAIONChanging(value As String)
    End Sub
    Partial Private Sub OnPOLICE_STAIONChanged()
    End Sub
    Partial Private Sub OnPLACE_NEARChanging(value As String)
    End Sub
    Partial Private Sub OnPLACE_NEARChanged()
    End Sub
    Partial Private Sub OnNAME_RE_LICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_RE_LICENSEEChanged()
    End Sub
    Partial Private Sub OnNAME_OPERATORChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OPERATORChanged()
    End Sub
    Partial Private Sub OnNAME_INSPECTORChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_INSPECTORChanged()
    End Sub
    Partial Private Sub OnNUMBER_IDCARDChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_IDCARDChanged()
    End Sub
    Partial Private Sub OnWORK_TIMEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWORK_TIMEChanged()
    End Sub
    Partial Private Sub OnDATE_INSPECTORChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_INSPECTORChanged()
    End Sub
    Partial Private Sub OnTIME_INSPECTORChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTIME_INSPECTORChanged()
    End Sub
    Partial Private Sub OnFORMAT_INSPECTORChanging(value As String)
    End Sub
    Partial Private Sub OnFORMAT_INSPECTORChanged()
    End Sub
    Partial Private Sub OnSCOPE_INSPECTORChanging(value As String)
    End Sub
    Partial Private Sub OnSCOPE_INSPECTORChanged()
    End Sub
    Partial Private Sub OnDATA_BASICChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_BASICChanged()
    End Sub
    Partial Private Sub OnDATA_SAMPLEChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_SAMPLEChanged()
    End Sub
    Partial Private Sub OnDATA_ADHERENCEChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_ADHERENCEChanged()
    End Sub
    Partial Private Sub OnDATA_CONTROLChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_CONTROLChanged()
    End Sub
    Partial Private Sub OnDATA_AUDITChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_AUDITChanged()
    End Sub
    Partial Private Sub OnDATA_LABLEChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_LABLEChanged()
    End Sub
    Partial Private Sub OnDATA_SAMPLEFORChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_SAMPLEFORChanged()
    End Sub
    Partial Private Sub OnDATA_QUITChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_QUITChanged()
    End Sub
    Partial Private Sub OnDATA_NOTQUITChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_NOTQUITChanged()
    End Sub
    Partial Private Sub OnDATA_REVIWEChanging(value As String)
    End Sub
    Partial Private Sub OnDATA_REVIWEChanged()
    End Sub
    Partial Private Sub OnNAME_PLACEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PLACEChanged()
    End Sub
    Partial Private Sub OnDATE_PLACEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_PLACEChanged()
    End Sub
    Partial Private Sub OnNAME_LICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_LICENSEEChanged()
    End Sub
    Partial Private Sub OnNAME_PERSONChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PERSONChanged()
    End Sub
    Partial Private Sub OnNAME_PERSON2Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_PERSON2Changed()
    End Sub
    Partial Private Sub OnNAME_WITNESSChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_WITNESSChanged()
    End Sub
    Partial Private Sub OnNAME_WITNESS2Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_WITNESS2Changed()
    End Sub
    Partial Private Sub OnNAME_STAFFHChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_STAFFHChanged()
    End Sub
    Partial Private Sub OnNAME_STAFF1Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_STAFF1Changed()
    End Sub
    Partial Private Sub OnNAME_STAFF2Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_STAFF2Changed()
    End Sub
    Partial Private Sub OnNAME_STAFF3Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_STAFF3Changed()
    End Sub
    Partial Private Sub OnNAME_STAFF4Changing(value As String)
    End Sub
    Partial Private Sub OnNAME_STAFF4Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSPEC_PRODUC", DbType:="NVarChar(MAX)")>  _
	Public Property INSPEC_PRODUC() As String
		Get
			Return Me._INSPEC_PRODUC
		End Get
		Set
			If (String.Equals(Me._INSPEC_PRODUC, value) = false) Then
				Me.OnINSPEC_PRODUCChanging(value)
				Me.SendPropertyChanging
				Me._INSPEC_PRODUC = value
				Me.SendPropertyChanged("INSPEC_PRODUC")
				Me.OnINSPEC_PRODUCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property LICENSE() As String
		Get
			Return Me._LICENSE
		End Get
		Set
			If (String.Equals(Me._LICENSE, value) = false) Then
				Me.OnLICENSEChanging(value)
				Me.SendPropertyChanging
				Me._LICENSE = value
				Me.SendPropertyChanged("LICENSE")
				Me.OnLICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADD() As String
		Get
			Return Me._NAME_ADD
		End Get
		Set
			If (String.Equals(Me._NAME_ADD, value) = false) Then
				Me.OnNAME_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADD = value
				Me.SendPropertyChanged("NAME_ADD")
				Me.OnNAME_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_ADD() As String
		Get
			Return Me._NUMBER_ADD
		End Get
		Set
			If (String.Equals(Me._NUMBER_ADD, value) = false) Then
				Me.OnNUMBER_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_ADD = value
				Me.SendPropertyChanged("NUMBER_ADD")
				Me.OnNUMBER_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VILLAGE_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property VILLAGE_ADD() As String
		Get
			Return Me._VILLAGE_ADD
		End Get
		Set
			If (String.Equals(Me._VILLAGE_ADD, value) = false) Then
				Me.OnVILLAGE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._VILLAGE_ADD = value
				Me.SendPropertyChanged("VILLAGE_ADD")
				Me.OnVILLAGE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property SOI_ADD() As String
		Get
			Return Me._SOI_ADD
		End Get
		Set
			If (String.Equals(Me._SOI_ADD, value) = false) Then
				Me.OnSOI_ADDChanging(value)
				Me.SendPropertyChanging
				Me._SOI_ADD = value
				Me.SendPropertyChanged("SOI_ADD")
				Me.OnSOI_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TANON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TANON_ADD() As String
		Get
			Return Me._TANON_ADD
		End Get
		Set
			If (String.Equals(Me._TANON_ADD, value) = false) Then
				Me.OnTANON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TANON_ADD = value
				Me.SendPropertyChanged("TANON_ADD")
				Me.OnTANON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRICT_ADD() As String
		Get
			Return Me._DISTRICT_ADD
		End Get
		Set
			If (String.Equals(Me._DISTRICT_ADD, value) = false) Then
				Me.OnDISTRICT_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DISTRICT_ADD = value
				Me.SendPropertyChanged("DISTRICT_ADD")
				Me.OnDISTRICT_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property AREA_ADD() As String
		Get
			Return Me._AREA_ADD
		End Get
		Set
			If (String.Equals(Me._AREA_ADD, value) = false) Then
				Me.OnAREA_ADDChanging(value)
				Me.SendPropertyChanging
				Me._AREA_ADD = value
				Me.SendPropertyChanged("AREA_ADD")
				Me.OnAREA_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property PROVINCE_ADD() As String
		Get
			Return Me._PROVINCE_ADD
		End Get
		Set
			If (String.Equals(Me._PROVINCE_ADD, value) = false) Then
				Me.OnPROVINCE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE_ADD = value
				Me.SendPropertyChanged("PROVINCE_ADD")
				Me.OnPROVINCE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE__ADD", DbType:="NVarChar(MAX)")>  _
	Public Property PHONE__ADD() As String
		Get
			Return Me._PHONE__ADD
		End Get
		Set
			If (String.Equals(Me._PHONE__ADD, value) = false) Then
				Me.OnPHONE__ADDChanging(value)
				Me.SendPropertyChanging
				Me._PHONE__ADD = value
				Me.SendPropertyChanged("PHONE__ADD")
				Me.OnPHONE__ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property FAX_ADD() As String
		Get
			Return Me._FAX_ADD
		End Get
		Set
			If (String.Equals(Me._FAX_ADD, value) = false) Then
				Me.OnFAX_ADDChanging(value)
				Me.SendPropertyChanging
				Me._FAX_ADD = value
				Me.SendPropertyChanged("FAX_ADD")
				Me.OnFAX_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POLICE_STAION", DbType:="NVarChar(MAX)")>  _
	Public Property POLICE_STAION() As String
		Get
			Return Me._POLICE_STAION
		End Get
		Set
			If (String.Equals(Me._POLICE_STAION, value) = false) Then
				Me.OnPOLICE_STAIONChanging(value)
				Me.SendPropertyChanging
				Me._POLICE_STAION = value
				Me.SendPropertyChanged("POLICE_STAION")
				Me.OnPOLICE_STAIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACE_NEAR", DbType:="NVarChar(MAX)")>  _
	Public Property PLACE_NEAR() As String
		Get
			Return Me._PLACE_NEAR
		End Get
		Set
			If (String.Equals(Me._PLACE_NEAR, value) = false) Then
				Me.OnPLACE_NEARChanging(value)
				Me.SendPropertyChanging
				Me._PLACE_NEAR = value
				Me.SendPropertyChanged("PLACE_NEAR")
				Me.OnPLACE_NEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_RE_LICENSEE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_RE_LICENSEE() As String
		Get
			Return Me._NAME_RE_LICENSEE
		End Get
		Set
			If (String.Equals(Me._NAME_RE_LICENSEE, value) = false) Then
				Me.OnNAME_RE_LICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_RE_LICENSEE = value
				Me.SendPropertyChanged("NAME_RE_LICENSEE")
				Me.OnNAME_RE_LICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OPERATOR", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OPERATOR() As String
		Get
			Return Me._NAME_OPERATOR
		End Get
		Set
			If (String.Equals(Me._NAME_OPERATOR, value) = false) Then
				Me.OnNAME_OPERATORChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OPERATOR = value
				Me.SendPropertyChanged("NAME_OPERATOR")
				Me.OnNAME_OPERATORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_INSPECTOR", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_INSPECTOR() As String
		Get
			Return Me._NAME_INSPECTOR
		End Get
		Set
			If (String.Equals(Me._NAME_INSPECTOR, value) = false) Then
				Me.OnNAME_INSPECTORChanging(value)
				Me.SendPropertyChanging
				Me._NAME_INSPECTOR = value
				Me.SendPropertyChanged("NAME_INSPECTOR")
				Me.OnNAME_INSPECTORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_IDCARD", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_IDCARD() As String
		Get
			Return Me._NUMBER_IDCARD
		End Get
		Set
			If (String.Equals(Me._NUMBER_IDCARD, value) = false) Then
				Me.OnNUMBER_IDCARDChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_IDCARD = value
				Me.SendPropertyChanged("NUMBER_IDCARD")
				Me.OnNUMBER_IDCARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_TIME", DbType:="DateTime")>  _
	Public Property WORK_TIME() As System.Nullable(Of Date)
		Get
			Return Me._WORK_TIME
		End Get
		Set
			If (Me._WORK_TIME.Equals(value) = false) Then
				Me.OnWORK_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._WORK_TIME = value
				Me.SendPropertyChanged("WORK_TIME")
				Me.OnWORK_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_INSPECTOR", DbType:="DateTime")>  _
	Public Property DATE_INSPECTOR() As System.Nullable(Of Date)
		Get
			Return Me._DATE_INSPECTOR
		End Get
		Set
			If (Me._DATE_INSPECTOR.Equals(value) = false) Then
				Me.OnDATE_INSPECTORChanging(value)
				Me.SendPropertyChanging
				Me._DATE_INSPECTOR = value
				Me.SendPropertyChanged("DATE_INSPECTOR")
				Me.OnDATE_INSPECTORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_INSPECTOR", DbType:="DateTime")>  _
	Public Property TIME_INSPECTOR() As System.Nullable(Of Date)
		Get
			Return Me._TIME_INSPECTOR
		End Get
		Set
			If (Me._TIME_INSPECTOR.Equals(value) = false) Then
				Me.OnTIME_INSPECTORChanging(value)
				Me.SendPropertyChanging
				Me._TIME_INSPECTOR = value
				Me.SendPropertyChanged("TIME_INSPECTOR")
				Me.OnTIME_INSPECTORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT_INSPECTOR", DbType:="NVarChar(MAX)")>  _
	Public Property FORMAT_INSPECTOR() As String
		Get
			Return Me._FORMAT_INSPECTOR
		End Get
		Set
			If (String.Equals(Me._FORMAT_INSPECTOR, value) = false) Then
				Me.OnFORMAT_INSPECTORChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT_INSPECTOR = value
				Me.SendPropertyChanged("FORMAT_INSPECTOR")
				Me.OnFORMAT_INSPECTORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCOPE_INSPECTOR", DbType:="NVarChar(MAX)")>  _
	Public Property SCOPE_INSPECTOR() As String
		Get
			Return Me._SCOPE_INSPECTOR
		End Get
		Set
			If (String.Equals(Me._SCOPE_INSPECTOR, value) = false) Then
				Me.OnSCOPE_INSPECTORChanging(value)
				Me.SendPropertyChanging
				Me._SCOPE_INSPECTOR = value
				Me.SendPropertyChanged("SCOPE_INSPECTOR")
				Me.OnSCOPE_INSPECTORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_BASIC", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_BASIC() As String
		Get
			Return Me._DATA_BASIC
		End Get
		Set
			If (String.Equals(Me._DATA_BASIC, value) = false) Then
				Me.OnDATA_BASICChanging(value)
				Me.SendPropertyChanging
				Me._DATA_BASIC = value
				Me.SendPropertyChanged("DATA_BASIC")
				Me.OnDATA_BASICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_SAMPLE", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_SAMPLE() As String
		Get
			Return Me._DATA_SAMPLE
		End Get
		Set
			If (String.Equals(Me._DATA_SAMPLE, value) = false) Then
				Me.OnDATA_SAMPLEChanging(value)
				Me.SendPropertyChanging
				Me._DATA_SAMPLE = value
				Me.SendPropertyChanged("DATA_SAMPLE")
				Me.OnDATA_SAMPLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_ADHERENCE", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_ADHERENCE() As String
		Get
			Return Me._DATA_ADHERENCE
		End Get
		Set
			If (String.Equals(Me._DATA_ADHERENCE, value) = false) Then
				Me.OnDATA_ADHERENCEChanging(value)
				Me.SendPropertyChanging
				Me._DATA_ADHERENCE = value
				Me.SendPropertyChanged("DATA_ADHERENCE")
				Me.OnDATA_ADHERENCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_CONTROL", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_CONTROL() As String
		Get
			Return Me._DATA_CONTROL
		End Get
		Set
			If (String.Equals(Me._DATA_CONTROL, value) = false) Then
				Me.OnDATA_CONTROLChanging(value)
				Me.SendPropertyChanging
				Me._DATA_CONTROL = value
				Me.SendPropertyChanged("DATA_CONTROL")
				Me.OnDATA_CONTROLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_AUDIT", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_AUDIT() As String
		Get
			Return Me._DATA_AUDIT
		End Get
		Set
			If (String.Equals(Me._DATA_AUDIT, value) = false) Then
				Me.OnDATA_AUDITChanging(value)
				Me.SendPropertyChanging
				Me._DATA_AUDIT = value
				Me.SendPropertyChanged("DATA_AUDIT")
				Me.OnDATA_AUDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_LABLE", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_LABLE() As String
		Get
			Return Me._DATA_LABLE
		End Get
		Set
			If (String.Equals(Me._DATA_LABLE, value) = false) Then
				Me.OnDATA_LABLEChanging(value)
				Me.SendPropertyChanging
				Me._DATA_LABLE = value
				Me.SendPropertyChanged("DATA_LABLE")
				Me.OnDATA_LABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_SAMPLEFOR", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_SAMPLEFOR() As String
		Get
			Return Me._DATA_SAMPLEFOR
		End Get
		Set
			If (String.Equals(Me._DATA_SAMPLEFOR, value) = false) Then
				Me.OnDATA_SAMPLEFORChanging(value)
				Me.SendPropertyChanging
				Me._DATA_SAMPLEFOR = value
				Me.SendPropertyChanged("DATA_SAMPLEFOR")
				Me.OnDATA_SAMPLEFORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_QUIT", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_QUIT() As String
		Get
			Return Me._DATA_QUIT
		End Get
		Set
			If (String.Equals(Me._DATA_QUIT, value) = false) Then
				Me.OnDATA_QUITChanging(value)
				Me.SendPropertyChanging
				Me._DATA_QUIT = value
				Me.SendPropertyChanged("DATA_QUIT")
				Me.OnDATA_QUITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_NOTQUIT", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_NOTQUIT() As String
		Get
			Return Me._DATA_NOTQUIT
		End Get
		Set
			If (String.Equals(Me._DATA_NOTQUIT, value) = false) Then
				Me.OnDATA_NOTQUITChanging(value)
				Me.SendPropertyChanging
				Me._DATA_NOTQUIT = value
				Me.SendPropertyChanged("DATA_NOTQUIT")
				Me.OnDATA_NOTQUITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_REVIWE", DbType:="NVarChar(MAX)")>  _
	Public Property DATA_REVIWE() As String
		Get
			Return Me._DATA_REVIWE
		End Get
		Set
			If (String.Equals(Me._DATA_REVIWE, value) = false) Then
				Me.OnDATA_REVIWEChanging(value)
				Me.SendPropertyChanging
				Me._DATA_REVIWE = value
				Me.SendPropertyChanged("DATA_REVIWE")
				Me.OnDATA_REVIWEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PLACE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PLACE() As String
		Get
			Return Me._NAME_PLACE
		End Get
		Set
			If (String.Equals(Me._NAME_PLACE, value) = false) Then
				Me.OnNAME_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PLACE = value
				Me.SendPropertyChanged("NAME_PLACE")
				Me.OnNAME_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_PLACE", DbType:="DateTime")>  _
	Public Property DATE_PLACE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_PLACE
		End Get
		Set
			If (Me._DATE_PLACE.Equals(value) = false) Then
				Me.OnDATE_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_PLACE = value
				Me.SendPropertyChanged("DATE_PLACE")
				Me.OnDATE_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_LICENSEE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_LICENSEE() As String
		Get
			Return Me._NAME_LICENSEE
		End Get
		Set
			If (String.Equals(Me._NAME_LICENSEE, value) = false) Then
				Me.OnNAME_LICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_LICENSEE = value
				Me.SendPropertyChanged("NAME_LICENSEE")
				Me.OnNAME_LICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PERSON", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PERSON() As String
		Get
			Return Me._NAME_PERSON
		End Get
		Set
			If (String.Equals(Me._NAME_PERSON, value) = false) Then
				Me.OnNAME_PERSONChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PERSON = value
				Me.SendPropertyChanged("NAME_PERSON")
				Me.OnNAME_PERSONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PERSON2", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PERSON2() As String
		Get
			Return Me._NAME_PERSON2
		End Get
		Set
			If (String.Equals(Me._NAME_PERSON2, value) = false) Then
				Me.OnNAME_PERSON2Changing(value)
				Me.SendPropertyChanging
				Me._NAME_PERSON2 = value
				Me.SendPropertyChanged("NAME_PERSON2")
				Me.OnNAME_PERSON2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_WITNESS", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_WITNESS() As String
		Get
			Return Me._NAME_WITNESS
		End Get
		Set
			If (String.Equals(Me._NAME_WITNESS, value) = false) Then
				Me.OnNAME_WITNESSChanging(value)
				Me.SendPropertyChanging
				Me._NAME_WITNESS = value
				Me.SendPropertyChanged("NAME_WITNESS")
				Me.OnNAME_WITNESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_WITNESS2", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_WITNESS2() As String
		Get
			Return Me._NAME_WITNESS2
		End Get
		Set
			If (String.Equals(Me._NAME_WITNESS2, value) = false) Then
				Me.OnNAME_WITNESS2Changing(value)
				Me.SendPropertyChanging
				Me._NAME_WITNESS2 = value
				Me.SendPropertyChanged("NAME_WITNESS2")
				Me.OnNAME_WITNESS2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_STAFFH", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_STAFFH() As String
		Get
			Return Me._NAME_STAFFH
		End Get
		Set
			If (String.Equals(Me._NAME_STAFFH, value) = false) Then
				Me.OnNAME_STAFFHChanging(value)
				Me.SendPropertyChanging
				Me._NAME_STAFFH = value
				Me.SendPropertyChanged("NAME_STAFFH")
				Me.OnNAME_STAFFHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_STAFF1", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_STAFF1() As String
		Get
			Return Me._NAME_STAFF1
		End Get
		Set
			If (String.Equals(Me._NAME_STAFF1, value) = false) Then
				Me.OnNAME_STAFF1Changing(value)
				Me.SendPropertyChanging
				Me._NAME_STAFF1 = value
				Me.SendPropertyChanged("NAME_STAFF1")
				Me.OnNAME_STAFF1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_STAFF2", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_STAFF2() As String
		Get
			Return Me._NAME_STAFF2
		End Get
		Set
			If (String.Equals(Me._NAME_STAFF2, value) = false) Then
				Me.OnNAME_STAFF2Changing(value)
				Me.SendPropertyChanging
				Me._NAME_STAFF2 = value
				Me.SendPropertyChanged("NAME_STAFF2")
				Me.OnNAME_STAFF2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_STAFF3", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_STAFF3() As String
		Get
			Return Me._NAME_STAFF3
		End Get
		Set
			If (String.Equals(Me._NAME_STAFF3, value) = false) Then
				Me.OnNAME_STAFF3Changing(value)
				Me.SendPropertyChanging
				Me._NAME_STAFF3 = value
				Me.SendPropertyChanged("NAME_STAFF3")
				Me.OnNAME_STAFF3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_STAFF4", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_STAFF4() As String
		Get
			Return Me._NAME_STAFF4
		End Get
		Set
			If (String.Equals(Me._NAME_STAFF4, value) = false) Then
				Me.OnNAME_STAFF4Changing(value)
				Me.SendPropertyChanging
				Me._NAME_STAFF4 = value
				Me.SendPropertyChanged("NAME_STAFF4")
				Me.OnNAME_STAFF4Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_RECORD_EXDRUG_SAVE")>  _
Partial Public Class PDF_RECORD_EXDRUG_SAVE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _WRITE_AT As String
	
	Private _DATE As String
	
	Private _MOUNTH As String
	
	Private _YEAR As String
	
	Private _TIME_TODAY As String
	
	Private _CHECK_AND_RECORD As String
	
	Private _NAME As String
	
	Private _AUTHOR As String
	
	Private _NUMBER_LICENSE As String
	
	Private _NO_ADD As String
	
	Private _SOI_ADD As String
	
	Private _MOO_ADD As String
	
	Private _TANON_ADD As String
	
	Private _TUMBON_ADD As String
	
	Private _AMPER_ADD As String
	
	Private _JUNGWAD_ADD As String
	
	Private _TEL_ADD As String
	
	Private _AREA_POLICE As String
	
	Private _NUMBER As String
	
	Private _TOTAL_NUMBER As String
	
	Private _AUTHOR_REPRE As String
	
	Private _PERSON_RES As String
	
	Private _WITNESS As String
	
	Private _WITNESS2 As String
	
	Private _WITNESS3 As String
	
	Private _STAFF As String
	
	Private _STAFF2 As String
	
	Private _STAFF3 As String
	
	Private _STAFF4 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    Partial Private Sub OnMOUNTHChanging(value As String)
    End Sub
    Partial Private Sub OnMOUNTHChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnTIME_TODAYChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_TODAYChanged()
    End Sub
    Partial Private Sub OnCHECK_AND_RECORDChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_AND_RECORDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnAUTHORChanging(value As String)
    End Sub
    Partial Private Sub OnAUTHORChanged()
    End Sub
    Partial Private Sub OnNUMBER_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_LICENSEChanged()
    End Sub
    Partial Private Sub OnNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNO_ADDChanged()
    End Sub
    Partial Private Sub OnSOI_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnSOI_ADDChanged()
    End Sub
    Partial Private Sub OnMOO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnMOO_ADDChanged()
    End Sub
    Partial Private Sub OnTANON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTANON_ADDChanged()
    End Sub
    Partial Private Sub OnTUMBON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTUMBON_ADDChanged()
    End Sub
    Partial Private Sub OnAMPER_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnAMPER_ADDChanged()
    End Sub
    Partial Private Sub OnJUNGWAD_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnJUNGWAD_ADDChanged()
    End Sub
    Partial Private Sub OnTEL_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_ADDChanged()
    End Sub
    Partial Private Sub OnAREA_POLICEChanging(value As String)
    End Sub
    Partial Private Sub OnAREA_POLICEChanged()
    End Sub
    Partial Private Sub OnNUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBERChanged()
    End Sub
    Partial Private Sub OnTOTAL_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnTOTAL_NUMBERChanged()
    End Sub
    Partial Private Sub OnAUTHOR_REPREChanging(value As String)
    End Sub
    Partial Private Sub OnAUTHOR_REPREChanged()
    End Sub
    Partial Private Sub OnPERSON_RESChanging(value As String)
    End Sub
    Partial Private Sub OnPERSON_RESChanged()
    End Sub
    Partial Private Sub OnWITNESSChanging(value As String)
    End Sub
    Partial Private Sub OnWITNESSChanged()
    End Sub
    Partial Private Sub OnWITNESS2Changing(value As String)
    End Sub
    Partial Private Sub OnWITNESS2Changed()
    End Sub
    Partial Private Sub OnWITNESS3Changing(value As String)
    End Sub
    Partial Private Sub OnWITNESS3Changed()
    End Sub
    Partial Private Sub OnSTAFFChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFFChanged()
    End Sub
    Partial Private Sub OnSTAFF2Changing(value As String)
    End Sub
    Partial Private Sub OnSTAFF2Changed()
    End Sub
    Partial Private Sub OnSTAFF3Changing(value As String)
    End Sub
    Partial Private Sub OnSTAFF3Changed()
    End Sub
    Partial Private Sub OnSTAFF4Changing(value As String)
    End Sub
    Partial Private Sub OnSTAFF4Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="NVarChar(MAX)")>  _
	Public Property [DATE]() As String
		Get
			Return Me._DATE
		End Get
		Set
			If (String.Equals(Me._DATE, value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOUNTH", DbType:="NVarChar(MAX)")>  _
	Public Property MOUNTH() As String
		Get
			Return Me._MOUNTH
		End Get
		Set
			If (String.Equals(Me._MOUNTH, value) = false) Then
				Me.OnMOUNTHChanging(value)
				Me.SendPropertyChanging
				Me._MOUNTH = value
				Me.SendPropertyChanged("MOUNTH")
				Me.OnMOUNTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(MAX)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_TODAY", DbType:="NVarChar(MAX)")>  _
	Public Property TIME_TODAY() As String
		Get
			Return Me._TIME_TODAY
		End Get
		Set
			If (String.Equals(Me._TIME_TODAY, value) = false) Then
				Me.OnTIME_TODAYChanging(value)
				Me.SendPropertyChanging
				Me._TIME_TODAY = value
				Me.SendPropertyChanged("TIME_TODAY")
				Me.OnTIME_TODAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_AND_RECORD", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_AND_RECORD() As String
		Get
			Return Me._CHECK_AND_RECORD
		End Get
		Set
			If (String.Equals(Me._CHECK_AND_RECORD, value) = false) Then
				Me.OnCHECK_AND_RECORDChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_AND_RECORD = value
				Me.SendPropertyChanged("CHECK_AND_RECORD")
				Me.OnCHECK_AND_RECORDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTHOR", DbType:="NVarChar(MAX)")>  _
	Public Property AUTHOR() As String
		Get
			Return Me._AUTHOR
		End Get
		Set
			If (String.Equals(Me._AUTHOR, value) = false) Then
				Me.OnAUTHORChanging(value)
				Me.SendPropertyChanging
				Me._AUTHOR = value
				Me.SendPropertyChanged("AUTHOR")
				Me.OnAUTHORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_LICENSE() As String
		Get
			Return Me._NUMBER_LICENSE
		End Get
		Set
			If (String.Equals(Me._NUMBER_LICENSE, value) = false) Then
				Me.OnNUMBER_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_LICENSE = value
				Me.SendPropertyChanged("NUMBER_LICENSE")
				Me.OnNUMBER_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NO_ADD() As String
		Get
			Return Me._NO_ADD
		End Get
		Set
			If (String.Equals(Me._NO_ADD, value) = false) Then
				Me.OnNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NO_ADD = value
				Me.SendPropertyChanged("NO_ADD")
				Me.OnNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property SOI_ADD() As String
		Get
			Return Me._SOI_ADD
		End Get
		Set
			If (String.Equals(Me._SOI_ADD, value) = false) Then
				Me.OnSOI_ADDChanging(value)
				Me.SendPropertyChanging
				Me._SOI_ADD = value
				Me.SendPropertyChanged("SOI_ADD")
				Me.OnSOI_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property MOO_ADD() As String
		Get
			Return Me._MOO_ADD
		End Get
		Set
			If (String.Equals(Me._MOO_ADD, value) = false) Then
				Me.OnMOO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._MOO_ADD = value
				Me.SendPropertyChanged("MOO_ADD")
				Me.OnMOO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TANON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TANON_ADD() As String
		Get
			Return Me._TANON_ADD
		End Get
		Set
			If (String.Equals(Me._TANON_ADD, value) = false) Then
				Me.OnTANON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TANON_ADD = value
				Me.SendPropertyChanged("TANON_ADD")
				Me.OnTANON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TUMBON_ADD() As String
		Get
			Return Me._TUMBON_ADD
		End Get
		Set
			If (String.Equals(Me._TUMBON_ADD, value) = false) Then
				Me.OnTUMBON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ADD = value
				Me.SendPropertyChanged("TUMBON_ADD")
				Me.OnTUMBON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPER_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property AMPER_ADD() As String
		Get
			Return Me._AMPER_ADD
		End Get
		Set
			If (String.Equals(Me._AMPER_ADD, value) = false) Then
				Me.OnAMPER_ADDChanging(value)
				Me.SendPropertyChanging
				Me._AMPER_ADD = value
				Me.SendPropertyChanged("AMPER_ADD")
				Me.OnAMPER_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JUNGWAD_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property JUNGWAD_ADD() As String
		Get
			Return Me._JUNGWAD_ADD
		End Get
		Set
			If (String.Equals(Me._JUNGWAD_ADD, value) = false) Then
				Me.OnJUNGWAD_ADDChanging(value)
				Me.SendPropertyChanging
				Me._JUNGWAD_ADD = value
				Me.SendPropertyChanged("JUNGWAD_ADD")
				Me.OnJUNGWAD_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TEL_ADD() As String
		Get
			Return Me._TEL_ADD
		End Get
		Set
			If (String.Equals(Me._TEL_ADD, value) = false) Then
				Me.OnTEL_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TEL_ADD = value
				Me.SendPropertyChanged("TEL_ADD")
				Me.OnTEL_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA_POLICE", DbType:="NVarChar(MAX)")>  _
	Public Property AREA_POLICE() As String
		Get
			Return Me._AREA_POLICE
		End Get
		Set
			If (String.Equals(Me._AREA_POLICE, value) = false) Then
				Me.OnAREA_POLICEChanging(value)
				Me.SendPropertyChanging
				Me._AREA_POLICE = value
				Me.SendPropertyChanged("AREA_POLICE")
				Me.OnAREA_POLICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER() As String
		Get
			Return Me._NUMBER
		End Get
		Set
			If (String.Equals(Me._NUMBER, value) = false) Then
				Me.OnNUMBERChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER = value
				Me.SendPropertyChanged("NUMBER")
				Me.OnNUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOTAL_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property TOTAL_NUMBER() As String
		Get
			Return Me._TOTAL_NUMBER
		End Get
		Set
			If (String.Equals(Me._TOTAL_NUMBER, value) = false) Then
				Me.OnTOTAL_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TOTAL_NUMBER = value
				Me.SendPropertyChanged("TOTAL_NUMBER")
				Me.OnTOTAL_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTHOR_REPRE", DbType:="NVarChar(MAX)")>  _
	Public Property AUTHOR_REPRE() As String
		Get
			Return Me._AUTHOR_REPRE
		End Get
		Set
			If (String.Equals(Me._AUTHOR_REPRE, value) = false) Then
				Me.OnAUTHOR_REPREChanging(value)
				Me.SendPropertyChanging
				Me._AUTHOR_REPRE = value
				Me.SendPropertyChanged("AUTHOR_REPRE")
				Me.OnAUTHOR_REPREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSON_RES", DbType:="NVarChar(MAX)")>  _
	Public Property PERSON_RES() As String
		Get
			Return Me._PERSON_RES
		End Get
		Set
			If (String.Equals(Me._PERSON_RES, value) = false) Then
				Me.OnPERSON_RESChanging(value)
				Me.SendPropertyChanging
				Me._PERSON_RES = value
				Me.SendPropertyChanged("PERSON_RES")
				Me.OnPERSON_RESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS() As String
		Get
			Return Me._WITNESS
		End Get
		Set
			If (String.Equals(Me._WITNESS, value) = false) Then
				Me.OnWITNESSChanging(value)
				Me.SendPropertyChanging
				Me._WITNESS = value
				Me.SendPropertyChanged("WITNESS")
				Me.OnWITNESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS2", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS2() As String
		Get
			Return Me._WITNESS2
		End Get
		Set
			If (String.Equals(Me._WITNESS2, value) = false) Then
				Me.OnWITNESS2Changing(value)
				Me.SendPropertyChanging
				Me._WITNESS2 = value
				Me.SendPropertyChanged("WITNESS2")
				Me.OnWITNESS2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS3", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS3() As String
		Get
			Return Me._WITNESS3
		End Get
		Set
			If (String.Equals(Me._WITNESS3, value) = false) Then
				Me.OnWITNESS3Changing(value)
				Me.SendPropertyChanging
				Me._WITNESS3 = value
				Me.SendPropertyChanged("WITNESS3")
				Me.OnWITNESS3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF() As String
		Get
			Return Me._STAFF
		End Get
		Set
			If (String.Equals(Me._STAFF, value) = false) Then
				Me.OnSTAFFChanging(value)
				Me.SendPropertyChanging
				Me._STAFF = value
				Me.SendPropertyChanged("STAFF")
				Me.OnSTAFFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF2", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF2() As String
		Get
			Return Me._STAFF2
		End Get
		Set
			If (String.Equals(Me._STAFF2, value) = false) Then
				Me.OnSTAFF2Changing(value)
				Me.SendPropertyChanging
				Me._STAFF2 = value
				Me.SendPropertyChanged("STAFF2")
				Me.OnSTAFF2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF3", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF3() As String
		Get
			Return Me._STAFF3
		End Get
		Set
			If (String.Equals(Me._STAFF3, value) = false) Then
				Me.OnSTAFF3Changing(value)
				Me.SendPropertyChanging
				Me._STAFF3 = value
				Me.SendPropertyChanged("STAFF3")
				Me.OnSTAFF3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF4", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF4() As String
		Get
			Return Me._STAFF4
		End Get
		Set
			If (String.Equals(Me._STAFF4, value) = false) Then
				Me.OnSTAFF4Changing(value)
				Me.SendPropertyChanging
				Me._STAFF4 = value
				Me.SendPropertyChanged("STAFF4")
				Me.OnSTAFF4Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_RECORD_HOLDDRUG")>  _
Partial Public Class PDF_RECORD_HOLDDRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _WRITE_AT As String
	
	Private _DATE As System.Nullable(Of Date)
	
	Private _MOUNT As System.Nullable(Of Date)
	
	Private _YEAR As System.Nullable(Of Date)
	
	Private _DATE_NOW As System.Nullable(Of Date)
	
	Private _INCLUDE As String
	
	Private _CHECK_HOLD As String
	
	Private _NAME As String
	
	Private _NAME_LICENSEE As String
	
	Private _NUMBER_LICENSEE As String
	
	Private _NUMBER_ADD As String
	
	Private _SOI_ADD As String
	
	Private _MOO_ADD As String
	
	Private _TANON_ADD As String
	
	Private _TUMBON_ADD As String
	
	Private _AREA_ADD As String
	
	Private _JUNGWAD_ADD As String
	
	Private _TEL_ADD As String
	
	Private _AREA_POLICE As String
	
	Private _LIST As String
	
	Private _TOTAL As String
	
	Private _CAUSE_HOLD As String
	
	Private _NAME_LICENSEE_CHECK As String
	
	Private _WITNESS As String
	
	Private _WITNESS2 As String
	
	Private _STAFF As String
	
	Private _STAFF2 As String
	
	Private _STAFF3 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    Partial Private Sub OnMOUNTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnMOUNTChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnDATE_NOWChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_NOWChanged()
    End Sub
    Partial Private Sub OnINCLUDEChanging(value As String)
    End Sub
    Partial Private Sub OnINCLUDEChanged()
    End Sub
    Partial Private Sub OnCHECK_HOLDChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_HOLDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnNAME_LICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_LICENSEEChanged()
    End Sub
    Partial Private Sub OnNUMBER_LICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_LICENSEEChanged()
    End Sub
    Partial Private Sub OnNUMBER_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_ADDChanged()
    End Sub
    Partial Private Sub OnSOI_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnSOI_ADDChanged()
    End Sub
    Partial Private Sub OnMOO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnMOO_ADDChanged()
    End Sub
    Partial Private Sub OnTANON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTANON_ADDChanged()
    End Sub
    Partial Private Sub OnTUMBON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTUMBON_ADDChanged()
    End Sub
    Partial Private Sub OnAREA_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnAREA_ADDChanged()
    End Sub
    Partial Private Sub OnJUNGWAD_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnJUNGWAD_ADDChanged()
    End Sub
    Partial Private Sub OnTEL_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_ADDChanged()
    End Sub
    Partial Private Sub OnAREA_POLICEChanging(value As String)
    End Sub
    Partial Private Sub OnAREA_POLICEChanged()
    End Sub
    Partial Private Sub OnLISTChanging(value As String)
    End Sub
    Partial Private Sub OnLISTChanged()
    End Sub
    Partial Private Sub OnTOTALChanging(value As String)
    End Sub
    Partial Private Sub OnTOTALChanged()
    End Sub
    Partial Private Sub OnCAUSE_HOLDChanging(value As String)
    End Sub
    Partial Private Sub OnCAUSE_HOLDChanged()
    End Sub
    Partial Private Sub OnNAME_LICENSEE_CHECKChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_LICENSEE_CHECKChanged()
    End Sub
    Partial Private Sub OnWITNESSChanging(value As String)
    End Sub
    Partial Private Sub OnWITNESSChanged()
    End Sub
    Partial Private Sub OnWITNESS2Changing(value As String)
    End Sub
    Partial Private Sub OnWITNESS2Changed()
    End Sub
    Partial Private Sub OnSTAFFChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFFChanged()
    End Sub
    Partial Private Sub OnSTAFF2Changing(value As String)
    End Sub
    Partial Private Sub OnSTAFF2Changed()
    End Sub
    Partial Private Sub OnSTAFF3Changing(value As String)
    End Sub
    Partial Private Sub OnSTAFF3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="DateTime")>  _
	Public Property [DATE]() As System.Nullable(Of Date)
		Get
			Return Me._DATE
		End Get
		Set
			If (Me._DATE.Equals(value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOUNT", DbType:="DateTime")>  _
	Public Property MOUNT() As System.Nullable(Of Date)
		Get
			Return Me._MOUNT
		End Get
		Set
			If (Me._MOUNT.Equals(value) = false) Then
				Me.OnMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._MOUNT = value
				Me.SendPropertyChanged("MOUNT")
				Me.OnMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="DateTime")>  _
	Public Property YEAR() As System.Nullable(Of Date)
		Get
			Return Me._YEAR
		End Get
		Set
			If (Me._YEAR.Equals(value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_NOW", DbType:="DateTime")>  _
	Public Property DATE_NOW() As System.Nullable(Of Date)
		Get
			Return Me._DATE_NOW
		End Get
		Set
			If (Me._DATE_NOW.Equals(value) = false) Then
				Me.OnDATE_NOWChanging(value)
				Me.SendPropertyChanging
				Me._DATE_NOW = value
				Me.SendPropertyChanged("DATE_NOW")
				Me.OnDATE_NOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCLUDE", DbType:="NVarChar(MAX)")>  _
	Public Property INCLUDE() As String
		Get
			Return Me._INCLUDE
		End Get
		Set
			If (String.Equals(Me._INCLUDE, value) = false) Then
				Me.OnINCLUDEChanging(value)
				Me.SendPropertyChanging
				Me._INCLUDE = value
				Me.SendPropertyChanged("INCLUDE")
				Me.OnINCLUDEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_HOLD", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_HOLD() As String
		Get
			Return Me._CHECK_HOLD
		End Get
		Set
			If (String.Equals(Me._CHECK_HOLD, value) = false) Then
				Me.OnCHECK_HOLDChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_HOLD = value
				Me.SendPropertyChanged("CHECK_HOLD")
				Me.OnCHECK_HOLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_LICENSEE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_LICENSEE() As String
		Get
			Return Me._NAME_LICENSEE
		End Get
		Set
			If (String.Equals(Me._NAME_LICENSEE, value) = false) Then
				Me.OnNAME_LICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_LICENSEE = value
				Me.SendPropertyChanged("NAME_LICENSEE")
				Me.OnNAME_LICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_LICENSEE", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_LICENSEE() As String
		Get
			Return Me._NUMBER_LICENSEE
		End Get
		Set
			If (String.Equals(Me._NUMBER_LICENSEE, value) = false) Then
				Me.OnNUMBER_LICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_LICENSEE = value
				Me.SendPropertyChanged("NUMBER_LICENSEE")
				Me.OnNUMBER_LICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_ADD() As String
		Get
			Return Me._NUMBER_ADD
		End Get
		Set
			If (String.Equals(Me._NUMBER_ADD, value) = false) Then
				Me.OnNUMBER_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_ADD = value
				Me.SendPropertyChanged("NUMBER_ADD")
				Me.OnNUMBER_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property SOI_ADD() As String
		Get
			Return Me._SOI_ADD
		End Get
		Set
			If (String.Equals(Me._SOI_ADD, value) = false) Then
				Me.OnSOI_ADDChanging(value)
				Me.SendPropertyChanging
				Me._SOI_ADD = value
				Me.SendPropertyChanged("SOI_ADD")
				Me.OnSOI_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property MOO_ADD() As String
		Get
			Return Me._MOO_ADD
		End Get
		Set
			If (String.Equals(Me._MOO_ADD, value) = false) Then
				Me.OnMOO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._MOO_ADD = value
				Me.SendPropertyChanged("MOO_ADD")
				Me.OnMOO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TANON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TANON_ADD() As String
		Get
			Return Me._TANON_ADD
		End Get
		Set
			If (String.Equals(Me._TANON_ADD, value) = false) Then
				Me.OnTANON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TANON_ADD = value
				Me.SendPropertyChanged("TANON_ADD")
				Me.OnTANON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TUMBON_ADD() As String
		Get
			Return Me._TUMBON_ADD
		End Get
		Set
			If (String.Equals(Me._TUMBON_ADD, value) = false) Then
				Me.OnTUMBON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ADD = value
				Me.SendPropertyChanged("TUMBON_ADD")
				Me.OnTUMBON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property AREA_ADD() As String
		Get
			Return Me._AREA_ADD
		End Get
		Set
			If (String.Equals(Me._AREA_ADD, value) = false) Then
				Me.OnAREA_ADDChanging(value)
				Me.SendPropertyChanging
				Me._AREA_ADD = value
				Me.SendPropertyChanged("AREA_ADD")
				Me.OnAREA_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JUNGWAD_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property JUNGWAD_ADD() As String
		Get
			Return Me._JUNGWAD_ADD
		End Get
		Set
			If (String.Equals(Me._JUNGWAD_ADD, value) = false) Then
				Me.OnJUNGWAD_ADDChanging(value)
				Me.SendPropertyChanging
				Me._JUNGWAD_ADD = value
				Me.SendPropertyChanged("JUNGWAD_ADD")
				Me.OnJUNGWAD_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TEL_ADD() As String
		Get
			Return Me._TEL_ADD
		End Get
		Set
			If (String.Equals(Me._TEL_ADD, value) = false) Then
				Me.OnTEL_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TEL_ADD = value
				Me.SendPropertyChanged("TEL_ADD")
				Me.OnTEL_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA_POLICE", DbType:="NVarChar(MAX)")>  _
	Public Property AREA_POLICE() As String
		Get
			Return Me._AREA_POLICE
		End Get
		Set
			If (String.Equals(Me._AREA_POLICE, value) = false) Then
				Me.OnAREA_POLICEChanging(value)
				Me.SendPropertyChanging
				Me._AREA_POLICE = value
				Me.SendPropertyChanged("AREA_POLICE")
				Me.OnAREA_POLICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST", DbType:="NVarChar(MAX)")>  _
	Public Property LIST() As String
		Get
			Return Me._LIST
		End Get
		Set
			If (String.Equals(Me._LIST, value) = false) Then
				Me.OnLISTChanging(value)
				Me.SendPropertyChanging
				Me._LIST = value
				Me.SendPropertyChanged("LIST")
				Me.OnLISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOTAL", DbType:="NVarChar(MAX)")>  _
	Public Property TOTAL() As String
		Get
			Return Me._TOTAL
		End Get
		Set
			If (String.Equals(Me._TOTAL, value) = false) Then
				Me.OnTOTALChanging(value)
				Me.SendPropertyChanging
				Me._TOTAL = value
				Me.SendPropertyChanged("TOTAL")
				Me.OnTOTALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUSE_HOLD", DbType:="NVarChar(MAX)")>  _
	Public Property CAUSE_HOLD() As String
		Get
			Return Me._CAUSE_HOLD
		End Get
		Set
			If (String.Equals(Me._CAUSE_HOLD, value) = false) Then
				Me.OnCAUSE_HOLDChanging(value)
				Me.SendPropertyChanging
				Me._CAUSE_HOLD = value
				Me.SendPropertyChanged("CAUSE_HOLD")
				Me.OnCAUSE_HOLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_LICENSEE_CHECK", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_LICENSEE_CHECK() As String
		Get
			Return Me._NAME_LICENSEE_CHECK
		End Get
		Set
			If (String.Equals(Me._NAME_LICENSEE_CHECK, value) = false) Then
				Me.OnNAME_LICENSEE_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._NAME_LICENSEE_CHECK = value
				Me.SendPropertyChanged("NAME_LICENSEE_CHECK")
				Me.OnNAME_LICENSEE_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS() As String
		Get
			Return Me._WITNESS
		End Get
		Set
			If (String.Equals(Me._WITNESS, value) = false) Then
				Me.OnWITNESSChanging(value)
				Me.SendPropertyChanging
				Me._WITNESS = value
				Me.SendPropertyChanged("WITNESS")
				Me.OnWITNESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS2", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS2() As String
		Get
			Return Me._WITNESS2
		End Get
		Set
			If (String.Equals(Me._WITNESS2, value) = false) Then
				Me.OnWITNESS2Changing(value)
				Me.SendPropertyChanging
				Me._WITNESS2 = value
				Me.SendPropertyChanged("WITNESS2")
				Me.OnWITNESS2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF() As String
		Get
			Return Me._STAFF
		End Get
		Set
			If (String.Equals(Me._STAFF, value) = false) Then
				Me.OnSTAFFChanging(value)
				Me.SendPropertyChanging
				Me._STAFF = value
				Me.SendPropertyChanged("STAFF")
				Me.OnSTAFFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF2", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF2() As String
		Get
			Return Me._STAFF2
		End Get
		Set
			If (String.Equals(Me._STAFF2, value) = false) Then
				Me.OnSTAFF2Changing(value)
				Me.SendPropertyChanging
				Me._STAFF2 = value
				Me.SendPropertyChanged("STAFF2")
				Me.OnSTAFF2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF3", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF3() As String
		Get
			Return Me._STAFF3
		End Get
		Set
			If (String.Equals(Me._STAFF3, value) = false) Then
				Me.OnSTAFF3Changing(value)
				Me.SendPropertyChanging
				Me._STAFF3 = value
				Me.SendPropertyChanged("STAFF3")
				Me.OnSTAFF3Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_RECORD_ISSUE")>  _
Partial Public Class PDF_RECORD_ISSUE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _WRTIE_AT As String
	
	Private _DATE As String
	
	Private _MONTH As String
	
	Private _YEAR As String
	
	Private _TIME_TODAY As String
	
	Private _ACT_INCLUDE As String
	
	Private _DATE_ISUE As String
	
	Private _MONTH_ISSUE As String
	
	Private _YEAR_ISSUE As String
	
	Private _BY_ISSUE As String
	
	Private _NAME As String
	
	Private _WITHDRAWALS As String
	
	Private _WITNESS As String
	
	Private _WITNESS2 As String
	
	Private _STAFF As String
	
	Private _STAFF2 As String
	
	Private _STAFF3 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnWRTIE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRTIE_ATChanged()
    End Sub
    Partial Private Sub OnDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    Partial Private Sub OnMONTHChanging(value As String)
    End Sub
    Partial Private Sub OnMONTHChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnTIME_TODAYChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_TODAYChanged()
    End Sub
    Partial Private Sub OnACT_INCLUDEChanging(value As String)
    End Sub
    Partial Private Sub OnACT_INCLUDEChanged()
    End Sub
    Partial Private Sub OnDATE_ISUEChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_ISUEChanged()
    End Sub
    Partial Private Sub OnMONTH_ISSUEChanging(value As String)
    End Sub
    Partial Private Sub OnMONTH_ISSUEChanged()
    End Sub
    Partial Private Sub OnYEAR_ISSUEChanging(value As String)
    End Sub
    Partial Private Sub OnYEAR_ISSUEChanged()
    End Sub
    Partial Private Sub OnBY_ISSUEChanging(value As String)
    End Sub
    Partial Private Sub OnBY_ISSUEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnWITHDRAWALSChanging(value As String)
    End Sub
    Partial Private Sub OnWITHDRAWALSChanged()
    End Sub
    Partial Private Sub OnWITNESSChanging(value As String)
    End Sub
    Partial Private Sub OnWITNESSChanged()
    End Sub
    Partial Private Sub OnWITNESS2Changing(value As String)
    End Sub
    Partial Private Sub OnWITNESS2Changed()
    End Sub
    Partial Private Sub OnSTAFFChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFFChanged()
    End Sub
    Partial Private Sub OnSTAFF2Changing(value As String)
    End Sub
    Partial Private Sub OnSTAFF2Changed()
    End Sub
    Partial Private Sub OnSTAFF3Changing(value As String)
    End Sub
    Partial Private Sub OnSTAFF3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRTIE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRTIE_AT() As String
		Get
			Return Me._WRTIE_AT
		End Get
		Set
			If (String.Equals(Me._WRTIE_AT, value) = false) Then
				Me.OnWRTIE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRTIE_AT = value
				Me.SendPropertyChanged("WRTIE_AT")
				Me.OnWRTIE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="NVarChar(MAX)")>  _
	Public Property [DATE]() As String
		Get
			Return Me._DATE
		End Get
		Set
			If (String.Equals(Me._DATE, value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONTH", DbType:="NVarChar(MAX)")>  _
	Public Property MONTH() As String
		Get
			Return Me._MONTH
		End Get
		Set
			If (String.Equals(Me._MONTH, value) = false) Then
				Me.OnMONTHChanging(value)
				Me.SendPropertyChanging
				Me._MONTH = value
				Me.SendPropertyChanged("MONTH")
				Me.OnMONTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(MAX)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_TODAY", DbType:="NVarChar(MAX)")>  _
	Public Property TIME_TODAY() As String
		Get
			Return Me._TIME_TODAY
		End Get
		Set
			If (String.Equals(Me._TIME_TODAY, value) = false) Then
				Me.OnTIME_TODAYChanging(value)
				Me.SendPropertyChanging
				Me._TIME_TODAY = value
				Me.SendPropertyChanged("TIME_TODAY")
				Me.OnTIME_TODAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACT_INCLUDE", DbType:="NVarChar(MAX)")>  _
	Public Property ACT_INCLUDE() As String
		Get
			Return Me._ACT_INCLUDE
		End Get
		Set
			If (String.Equals(Me._ACT_INCLUDE, value) = false) Then
				Me.OnACT_INCLUDEChanging(value)
				Me.SendPropertyChanging
				Me._ACT_INCLUDE = value
				Me.SendPropertyChanged("ACT_INCLUDE")
				Me.OnACT_INCLUDEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ISUE", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_ISUE() As String
		Get
			Return Me._DATE_ISUE
		End Get
		Set
			If (String.Equals(Me._DATE_ISUE, value) = false) Then
				Me.OnDATE_ISUEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ISUE = value
				Me.SendPropertyChanged("DATE_ISUE")
				Me.OnDATE_ISUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONTH_ISSUE", DbType:="NVarChar(MAX)")>  _
	Public Property MONTH_ISSUE() As String
		Get
			Return Me._MONTH_ISSUE
		End Get
		Set
			If (String.Equals(Me._MONTH_ISSUE, value) = false) Then
				Me.OnMONTH_ISSUEChanging(value)
				Me.SendPropertyChanging
				Me._MONTH_ISSUE = value
				Me.SendPropertyChanged("MONTH_ISSUE")
				Me.OnMONTH_ISSUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR_ISSUE", DbType:="NVarChar(MAX)")>  _
	Public Property YEAR_ISSUE() As String
		Get
			Return Me._YEAR_ISSUE
		End Get
		Set
			If (String.Equals(Me._YEAR_ISSUE, value) = false) Then
				Me.OnYEAR_ISSUEChanging(value)
				Me.SendPropertyChanging
				Me._YEAR_ISSUE = value
				Me.SendPropertyChanged("YEAR_ISSUE")
				Me.OnYEAR_ISSUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BY_ISSUE", DbType:="NVarChar(MAX)")>  _
	Public Property BY_ISSUE() As String
		Get
			Return Me._BY_ISSUE
		End Get
		Set
			If (String.Equals(Me._BY_ISSUE, value) = false) Then
				Me.OnBY_ISSUEChanging(value)
				Me.SendPropertyChanging
				Me._BY_ISSUE = value
				Me.SendPropertyChanged("BY_ISSUE")
				Me.OnBY_ISSUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITHDRAWALS", DbType:="NVarChar(MAX)")>  _
	Public Property WITHDRAWALS() As String
		Get
			Return Me._WITHDRAWALS
		End Get
		Set
			If (String.Equals(Me._WITHDRAWALS, value) = false) Then
				Me.OnWITHDRAWALSChanging(value)
				Me.SendPropertyChanging
				Me._WITHDRAWALS = value
				Me.SendPropertyChanged("WITHDRAWALS")
				Me.OnWITHDRAWALSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS() As String
		Get
			Return Me._WITNESS
		End Get
		Set
			If (String.Equals(Me._WITNESS, value) = false) Then
				Me.OnWITNESSChanging(value)
				Me.SendPropertyChanging
				Me._WITNESS = value
				Me.SendPropertyChanged("WITNESS")
				Me.OnWITNESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS2", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS2() As String
		Get
			Return Me._WITNESS2
		End Get
		Set
			If (String.Equals(Me._WITNESS2, value) = false) Then
				Me.OnWITNESS2Changing(value)
				Me.SendPropertyChanging
				Me._WITNESS2 = value
				Me.SendPropertyChanged("WITNESS2")
				Me.OnWITNESS2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF() As String
		Get
			Return Me._STAFF
		End Get
		Set
			If (String.Equals(Me._STAFF, value) = false) Then
				Me.OnSTAFFChanging(value)
				Me.SendPropertyChanging
				Me._STAFF = value
				Me.SendPropertyChanged("STAFF")
				Me.OnSTAFFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF2", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF2() As String
		Get
			Return Me._STAFF2
		End Get
		Set
			If (String.Equals(Me._STAFF2, value) = false) Then
				Me.OnSTAFF2Changing(value)
				Me.SendPropertyChanging
				Me._STAFF2 = value
				Me.SendPropertyChanged("STAFF2")
				Me.OnSTAFF2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF3", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF3() As String
		Get
			Return Me._STAFF3
		End Get
		Set
			If (String.Equals(Me._STAFF3, value) = false) Then
				Me.OnSTAFF3Changing(value)
				Me.SendPropertyChanging
				Me._STAFF3 = value
				Me.SendPropertyChanged("STAFF3")
				Me.OnSTAFF3Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_RECORD_ORDERIN")>  _
Partial Public Class PDF_RECORD_ORDERIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME_AUT As String
	
	Private _PLAN_TYPE As String
	
	Private _NAME_ADD As String
	
	Private _NO_ADD As String
	
	Private _MOO_ADD As String
	
	Private _SOI_ADD As String
	
	Private _TANON_ADD As String
	
	Private _TUMBON_ADD As String
	
	Private _AMPER_ADD As String
	
	Private _JUNGWAD_ADD As String
	
	Private _TEL_ADD As String
	
	Private _NEAR_ADD As String
	
	Private _AREA_POL_ADD As String
	
	Private _NO_ADDPLACE As String
	
	Private _SOI_ADDPLACE As String
	
	Private _TANON_ADDPLACE As String
	
	Private _TUMBON_ADDPLACE As String
	
	Private _AREA_ADDPLACE As String
	
	Private _JUNGWAD_ADDPLACE As String
	
	Private _TEL_ADDPLACE As String
	
	Private _NEAR_ADDPLACE As String
	
	Private _DATE As System.Nullable(Of Date)
	
	Private _TIME As System.Nullable(Of Date)
	
	Private _NAME_LICENSEE As String
	
	Private _NAME_TAKEACTION As String
	
	Private _NUMBER_LICENSE As String
	
	Private _TIME_WORKING As String
	
	Private _RECORD_EX As String
	
	Private _FOR_CON As String
	
	Private _SEIZE As String
	
	Private _FREEZE As String
	
	Private _CHECK_BEGIN As String
	
	Private _CHECK_LABLE As String
	
	Private _CHECK_REVIEW As String
	
	Private _REPORT_CHECK As String
	
	Private _NAME_ALLOW As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAME_AUTChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_AUTChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnNAME_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDChanged()
    End Sub
    Partial Private Sub OnNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNO_ADDChanged()
    End Sub
    Partial Private Sub OnMOO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnMOO_ADDChanged()
    End Sub
    Partial Private Sub OnSOI_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnSOI_ADDChanged()
    End Sub
    Partial Private Sub OnTANON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTANON_ADDChanged()
    End Sub
    Partial Private Sub OnTUMBON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTUMBON_ADDChanged()
    End Sub
    Partial Private Sub OnAMPER_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnAMPER_ADDChanged()
    End Sub
    Partial Private Sub OnJUNGWAD_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnJUNGWAD_ADDChanged()
    End Sub
    Partial Private Sub OnTEL_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_ADDChanged()
    End Sub
    Partial Private Sub OnNEAR_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNEAR_ADDChanged()
    End Sub
    Partial Private Sub OnAREA_POL_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnAREA_POL_ADDChanged()
    End Sub
    Partial Private Sub OnNO_ADDPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnNO_ADDPLACEChanged()
    End Sub
    Partial Private Sub OnSOI_ADDPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnSOI_ADDPLACEChanged()
    End Sub
    Partial Private Sub OnTANON_ADDPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnTANON_ADDPLACEChanged()
    End Sub
    Partial Private Sub OnTUMBON_ADDPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnTUMBON_ADDPLACEChanged()
    End Sub
    Partial Private Sub OnAREA_ADDPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnAREA_ADDPLACEChanged()
    End Sub
    Partial Private Sub OnJUNGWAD_ADDPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnJUNGWAD_ADDPLACEChanged()
    End Sub
    Partial Private Sub OnTEL_ADDPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_ADDPLACEChanged()
    End Sub
    Partial Private Sub OnNEAR_ADDPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnNEAR_ADDPLACEChanged()
    End Sub
    Partial Private Sub OnDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    Partial Private Sub OnTIMEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTIMEChanged()
    End Sub
    Partial Private Sub OnNAME_LICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_LICENSEEChanged()
    End Sub
    Partial Private Sub OnNAME_TAKEACTIONChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_TAKEACTIONChanged()
    End Sub
    Partial Private Sub OnNUMBER_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_LICENSEChanged()
    End Sub
    Partial Private Sub OnTIME_WORKINGChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_WORKINGChanged()
    End Sub
    Partial Private Sub OnRECORD_EXChanging(value As String)
    End Sub
    Partial Private Sub OnRECORD_EXChanged()
    End Sub
    Partial Private Sub OnFOR_CONChanging(value As String)
    End Sub
    Partial Private Sub OnFOR_CONChanged()
    End Sub
    Partial Private Sub OnSEIZEChanging(value As String)
    End Sub
    Partial Private Sub OnSEIZEChanged()
    End Sub
    Partial Private Sub OnFREEZEChanging(value As String)
    End Sub
    Partial Private Sub OnFREEZEChanged()
    End Sub
    Partial Private Sub OnCHECK_BEGINChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_BEGINChanged()
    End Sub
    Partial Private Sub OnCHECK_LABLEChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_LABLEChanged()
    End Sub
    Partial Private Sub OnCHECK_REVIEWChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_REVIEWChanged()
    End Sub
    Partial Private Sub OnREPORT_CHECKChanging(value As String)
    End Sub
    Partial Private Sub OnREPORT_CHECKChanged()
    End Sub
    Partial Private Sub OnNAME_ALLOWChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ALLOWChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_AUT", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_AUT() As String
		Get
			Return Me._NAME_AUT
		End Get
		Set
			If (String.Equals(Me._NAME_AUT, value) = false) Then
				Me.OnNAME_AUTChanging(value)
				Me.SendPropertyChanging
				Me._NAME_AUT = value
				Me.SendPropertyChanged("NAME_AUT")
				Me.OnNAME_AUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_TYPE() As String
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (String.Equals(Me._PLAN_TYPE, value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADD() As String
		Get
			Return Me._NAME_ADD
		End Get
		Set
			If (String.Equals(Me._NAME_ADD, value) = false) Then
				Me.OnNAME_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADD = value
				Me.SendPropertyChanged("NAME_ADD")
				Me.OnNAME_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NO_ADD() As String
		Get
			Return Me._NO_ADD
		End Get
		Set
			If (String.Equals(Me._NO_ADD, value) = false) Then
				Me.OnNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NO_ADD = value
				Me.SendPropertyChanged("NO_ADD")
				Me.OnNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property MOO_ADD() As String
		Get
			Return Me._MOO_ADD
		End Get
		Set
			If (String.Equals(Me._MOO_ADD, value) = false) Then
				Me.OnMOO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._MOO_ADD = value
				Me.SendPropertyChanged("MOO_ADD")
				Me.OnMOO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property SOI_ADD() As String
		Get
			Return Me._SOI_ADD
		End Get
		Set
			If (String.Equals(Me._SOI_ADD, value) = false) Then
				Me.OnSOI_ADDChanging(value)
				Me.SendPropertyChanging
				Me._SOI_ADD = value
				Me.SendPropertyChanged("SOI_ADD")
				Me.OnSOI_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TANON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TANON_ADD() As String
		Get
			Return Me._TANON_ADD
		End Get
		Set
			If (String.Equals(Me._TANON_ADD, value) = false) Then
				Me.OnTANON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TANON_ADD = value
				Me.SendPropertyChanged("TANON_ADD")
				Me.OnTANON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TUMBON_ADD() As String
		Get
			Return Me._TUMBON_ADD
		End Get
		Set
			If (String.Equals(Me._TUMBON_ADD, value) = false) Then
				Me.OnTUMBON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ADD = value
				Me.SendPropertyChanged("TUMBON_ADD")
				Me.OnTUMBON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPER_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property AMPER_ADD() As String
		Get
			Return Me._AMPER_ADD
		End Get
		Set
			If (String.Equals(Me._AMPER_ADD, value) = false) Then
				Me.OnAMPER_ADDChanging(value)
				Me.SendPropertyChanging
				Me._AMPER_ADD = value
				Me.SendPropertyChanged("AMPER_ADD")
				Me.OnAMPER_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JUNGWAD_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property JUNGWAD_ADD() As String
		Get
			Return Me._JUNGWAD_ADD
		End Get
		Set
			If (String.Equals(Me._JUNGWAD_ADD, value) = false) Then
				Me.OnJUNGWAD_ADDChanging(value)
				Me.SendPropertyChanging
				Me._JUNGWAD_ADD = value
				Me.SendPropertyChanged("JUNGWAD_ADD")
				Me.OnJUNGWAD_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TEL_ADD() As String
		Get
			Return Me._TEL_ADD
		End Get
		Set
			If (String.Equals(Me._TEL_ADD, value) = false) Then
				Me.OnTEL_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TEL_ADD = value
				Me.SendPropertyChanged("TEL_ADD")
				Me.OnTEL_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEAR_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NEAR_ADD() As String
		Get
			Return Me._NEAR_ADD
		End Get
		Set
			If (String.Equals(Me._NEAR_ADD, value) = false) Then
				Me.OnNEAR_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NEAR_ADD = value
				Me.SendPropertyChanged("NEAR_ADD")
				Me.OnNEAR_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA_POL_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property AREA_POL_ADD() As String
		Get
			Return Me._AREA_POL_ADD
		End Get
		Set
			If (String.Equals(Me._AREA_POL_ADD, value) = false) Then
				Me.OnAREA_POL_ADDChanging(value)
				Me.SendPropertyChanging
				Me._AREA_POL_ADD = value
				Me.SendPropertyChanged("AREA_POL_ADD")
				Me.OnAREA_POL_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_ADDPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property NO_ADDPLACE() As String
		Get
			Return Me._NO_ADDPLACE
		End Get
		Set
			If (String.Equals(Me._NO_ADDPLACE, value) = false) Then
				Me.OnNO_ADDPLACEChanging(value)
				Me.SendPropertyChanging
				Me._NO_ADDPLACE = value
				Me.SendPropertyChanged("NO_ADDPLACE")
				Me.OnNO_ADDPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI_ADDPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property SOI_ADDPLACE() As String
		Get
			Return Me._SOI_ADDPLACE
		End Get
		Set
			If (String.Equals(Me._SOI_ADDPLACE, value) = false) Then
				Me.OnSOI_ADDPLACEChanging(value)
				Me.SendPropertyChanging
				Me._SOI_ADDPLACE = value
				Me.SendPropertyChanged("SOI_ADDPLACE")
				Me.OnSOI_ADDPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TANON_ADDPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property TANON_ADDPLACE() As String
		Get
			Return Me._TANON_ADDPLACE
		End Get
		Set
			If (String.Equals(Me._TANON_ADDPLACE, value) = false) Then
				Me.OnTANON_ADDPLACEChanging(value)
				Me.SendPropertyChanging
				Me._TANON_ADDPLACE = value
				Me.SendPropertyChanged("TANON_ADDPLACE")
				Me.OnTANON_ADDPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ADDPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property TUMBON_ADDPLACE() As String
		Get
			Return Me._TUMBON_ADDPLACE
		End Get
		Set
			If (String.Equals(Me._TUMBON_ADDPLACE, value) = false) Then
				Me.OnTUMBON_ADDPLACEChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ADDPLACE = value
				Me.SendPropertyChanged("TUMBON_ADDPLACE")
				Me.OnTUMBON_ADDPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA_ADDPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property AREA_ADDPLACE() As String
		Get
			Return Me._AREA_ADDPLACE
		End Get
		Set
			If (String.Equals(Me._AREA_ADDPLACE, value) = false) Then
				Me.OnAREA_ADDPLACEChanging(value)
				Me.SendPropertyChanging
				Me._AREA_ADDPLACE = value
				Me.SendPropertyChanged("AREA_ADDPLACE")
				Me.OnAREA_ADDPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JUNGWAD_ADDPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property JUNGWAD_ADDPLACE() As String
		Get
			Return Me._JUNGWAD_ADDPLACE
		End Get
		Set
			If (String.Equals(Me._JUNGWAD_ADDPLACE, value) = false) Then
				Me.OnJUNGWAD_ADDPLACEChanging(value)
				Me.SendPropertyChanging
				Me._JUNGWAD_ADDPLACE = value
				Me.SendPropertyChanged("JUNGWAD_ADDPLACE")
				Me.OnJUNGWAD_ADDPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL_ADDPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property TEL_ADDPLACE() As String
		Get
			Return Me._TEL_ADDPLACE
		End Get
		Set
			If (String.Equals(Me._TEL_ADDPLACE, value) = false) Then
				Me.OnTEL_ADDPLACEChanging(value)
				Me.SendPropertyChanging
				Me._TEL_ADDPLACE = value
				Me.SendPropertyChanged("TEL_ADDPLACE")
				Me.OnTEL_ADDPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEAR_ADDPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property NEAR_ADDPLACE() As String
		Get
			Return Me._NEAR_ADDPLACE
		End Get
		Set
			If (String.Equals(Me._NEAR_ADDPLACE, value) = false) Then
				Me.OnNEAR_ADDPLACEChanging(value)
				Me.SendPropertyChanging
				Me._NEAR_ADDPLACE = value
				Me.SendPropertyChanged("NEAR_ADDPLACE")
				Me.OnNEAR_ADDPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="DateTime")>  _
	Public Property [DATE]() As System.Nullable(Of Date)
		Get
			Return Me._DATE
		End Get
		Set
			If (Me._DATE.Equals(value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME", DbType:="DateTime")>  _
	Public Property TIME() As System.Nullable(Of Date)
		Get
			Return Me._TIME
		End Get
		Set
			If (Me._TIME.Equals(value) = false) Then
				Me.OnTIMEChanging(value)
				Me.SendPropertyChanging
				Me._TIME = value
				Me.SendPropertyChanged("TIME")
				Me.OnTIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_LICENSEE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_LICENSEE() As String
		Get
			Return Me._NAME_LICENSEE
		End Get
		Set
			If (String.Equals(Me._NAME_LICENSEE, value) = false) Then
				Me.OnNAME_LICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_LICENSEE = value
				Me.SendPropertyChanged("NAME_LICENSEE")
				Me.OnNAME_LICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_TAKEACTION", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_TAKEACTION() As String
		Get
			Return Me._NAME_TAKEACTION
		End Get
		Set
			If (String.Equals(Me._NAME_TAKEACTION, value) = false) Then
				Me.OnNAME_TAKEACTIONChanging(value)
				Me.SendPropertyChanging
				Me._NAME_TAKEACTION = value
				Me.SendPropertyChanged("NAME_TAKEACTION")
				Me.OnNAME_TAKEACTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_LICENSE() As String
		Get
			Return Me._NUMBER_LICENSE
		End Get
		Set
			If (String.Equals(Me._NUMBER_LICENSE, value) = false) Then
				Me.OnNUMBER_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_LICENSE = value
				Me.SendPropertyChanged("NUMBER_LICENSE")
				Me.OnNUMBER_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_WORKING", DbType:="NVarChar(MAX)")>  _
	Public Property TIME_WORKING() As String
		Get
			Return Me._TIME_WORKING
		End Get
		Set
			If (String.Equals(Me._TIME_WORKING, value) = false) Then
				Me.OnTIME_WORKINGChanging(value)
				Me.SendPropertyChanging
				Me._TIME_WORKING = value
				Me.SendPropertyChanged("TIME_WORKING")
				Me.OnTIME_WORKINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECORD_EX", DbType:="NVarChar(MAX)")>  _
	Public Property RECORD_EX() As String
		Get
			Return Me._RECORD_EX
		End Get
		Set
			If (String.Equals(Me._RECORD_EX, value) = false) Then
				Me.OnRECORD_EXChanging(value)
				Me.SendPropertyChanging
				Me._RECORD_EX = value
				Me.SendPropertyChanged("RECORD_EX")
				Me.OnRECORD_EXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOR_CON", DbType:="NVarChar(MAX)")>  _
	Public Property FOR_CON() As String
		Get
			Return Me._FOR_CON
		End Get
		Set
			If (String.Equals(Me._FOR_CON, value) = false) Then
				Me.OnFOR_CONChanging(value)
				Me.SendPropertyChanging
				Me._FOR_CON = value
				Me.SendPropertyChanged("FOR_CON")
				Me.OnFOR_CONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEIZE", DbType:="NVarChar(MAX)")>  _
	Public Property SEIZE() As String
		Get
			Return Me._SEIZE
		End Get
		Set
			If (String.Equals(Me._SEIZE, value) = false) Then
				Me.OnSEIZEChanging(value)
				Me.SendPropertyChanging
				Me._SEIZE = value
				Me.SendPropertyChanged("SEIZE")
				Me.OnSEIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FREEZE", DbType:="NVarChar(MAX)")>  _
	Public Property FREEZE() As String
		Get
			Return Me._FREEZE
		End Get
		Set
			If (String.Equals(Me._FREEZE, value) = false) Then
				Me.OnFREEZEChanging(value)
				Me.SendPropertyChanging
				Me._FREEZE = value
				Me.SendPropertyChanged("FREEZE")
				Me.OnFREEZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_BEGIN", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_BEGIN() As String
		Get
			Return Me._CHECK_BEGIN
		End Get
		Set
			If (String.Equals(Me._CHECK_BEGIN, value) = false) Then
				Me.OnCHECK_BEGINChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_BEGIN = value
				Me.SendPropertyChanged("CHECK_BEGIN")
				Me.OnCHECK_BEGINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_LABLE", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_LABLE() As String
		Get
			Return Me._CHECK_LABLE
		End Get
		Set
			If (String.Equals(Me._CHECK_LABLE, value) = false) Then
				Me.OnCHECK_LABLEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_LABLE = value
				Me.SendPropertyChanged("CHECK_LABLE")
				Me.OnCHECK_LABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_REVIEW", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_REVIEW() As String
		Get
			Return Me._CHECK_REVIEW
		End Get
		Set
			If (String.Equals(Me._CHECK_REVIEW, value) = false) Then
				Me.OnCHECK_REVIEWChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_REVIEW = value
				Me.SendPropertyChanged("CHECK_REVIEW")
				Me.OnCHECK_REVIEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT_CHECK", DbType:="NVarChar(MAX)")>  _
	Public Property REPORT_CHECK() As String
		Get
			Return Me._REPORT_CHECK
		End Get
		Set
			If (String.Equals(Me._REPORT_CHECK, value) = false) Then
				Me.OnREPORT_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._REPORT_CHECK = value
				Me.SendPropertyChanged("REPORT_CHECK")
				Me.OnREPORT_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ALLOW", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ALLOW() As String
		Get
			Return Me._NAME_ALLOW
		End Get
		Set
			If (String.Equals(Me._NAME_ALLOW, value) = false) Then
				Me.OnNAME_ALLOWChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ALLOW = value
				Me.SendPropertyChanged("NAME_ALLOW")
				Me.OnNAME_ALLOWChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_RECORD_PLACEDRUG_S")>  _
Partial Public Class PDF_RECORD_PLACEDRUG_
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _INCLUDE As String
	
	Private _EX_PLAN As String
	
	Private _NAME_ADD As String
	
	Private _NO_ADD As String
	
	Private _SOI_ADD As String
	
	Private _TANON_ADD As String
	
	Private _MOO_ADD As String
	
	Private _TOMBON_ADD As String
	
	Private _AMPER_ADD As String
	
	Private _JUNGWAD_ADD As String
	
	Private _NEAR_ADD As String
	
	Private _AREA_ADD As String
	
	Private _TEL_ADD As String
	
	Private _NAME_ALLOW As String
	
	Private _TIME_ALLOW As System.Nullable(Of Date)
	
	Private _NAME_ACTION As String
	
	Private _LICENSE As String
	
	Private _OPERRATION As String
	
	Private _LICENSE_TRAIN As String
	
	Private _TIME_MAKE As String
	
	Private _SAMPLE_DRUG As String
	
	Private _FOR_CONSIDER As String
	
	Private _SEIZE As String
	
	Private _FREEZE As String
	
	Private _CHECK_REVIEW As String
	
	Private _CHECK_LABLE As String
	
	Private _CHECK_REVIEW2 As String
	
	Private _CONCLUDE As String
	
	Private _NAME_LICENSE As String
	
	Private _NAME_OPER As String
	
	Private _WITNESS As String
	
	Private _WITNESS2 As String
	
	Private _WITNESS3 As String
	
	Private _Staff As String
	
	Private _Staff2 As String
	
	Private _Staff3 As String
	
	Private _Staff4 As String
	
	Private _DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnINCLUDEChanging(value As String)
    End Sub
    Partial Private Sub OnINCLUDEChanged()
    End Sub
    Partial Private Sub OnEX_PLANChanging(value As String)
    End Sub
    Partial Private Sub OnEX_PLANChanged()
    End Sub
    Partial Private Sub OnNAME_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDChanged()
    End Sub
    Partial Private Sub OnNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNO_ADDChanged()
    End Sub
    Partial Private Sub OnSOI_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnSOI_ADDChanged()
    End Sub
    Partial Private Sub OnTANON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTANON_ADDChanged()
    End Sub
    Partial Private Sub OnMOO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnMOO_ADDChanged()
    End Sub
    Partial Private Sub OnTOMBON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTOMBON_ADDChanged()
    End Sub
    Partial Private Sub OnAMPER_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnAMPER_ADDChanged()
    End Sub
    Partial Private Sub OnJUNGWAD_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnJUNGWAD_ADDChanged()
    End Sub
    Partial Private Sub OnNEAR_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNEAR_ADDChanged()
    End Sub
    Partial Private Sub OnAREA_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnAREA_ADDChanged()
    End Sub
    Partial Private Sub OnTEL_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_ADDChanged()
    End Sub
    Partial Private Sub OnNAME_ALLOWChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ALLOWChanged()
    End Sub
    Partial Private Sub OnTIME_ALLOWChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTIME_ALLOWChanged()
    End Sub
    Partial Private Sub OnNAME_ACTIONChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ACTIONChanged()
    End Sub
    Partial Private Sub OnLICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnLICENSEChanged()
    End Sub
    Partial Private Sub OnOPERRATIONChanging(value As String)
    End Sub
    Partial Private Sub OnOPERRATIONChanged()
    End Sub
    Partial Private Sub OnLICENSE_TRAINChanging(value As String)
    End Sub
    Partial Private Sub OnLICENSE_TRAINChanged()
    End Sub
    Partial Private Sub OnTIME_MAKEChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_MAKEChanged()
    End Sub
    Partial Private Sub OnSAMPLE_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnSAMPLE_DRUGChanged()
    End Sub
    Partial Private Sub OnFOR_CONSIDERChanging(value As String)
    End Sub
    Partial Private Sub OnFOR_CONSIDERChanged()
    End Sub
    Partial Private Sub OnSEIZEChanging(value As String)
    End Sub
    Partial Private Sub OnSEIZEChanged()
    End Sub
    Partial Private Sub OnFREEZEChanging(value As String)
    End Sub
    Partial Private Sub OnFREEZEChanged()
    End Sub
    Partial Private Sub OnCHECK_REVIEWChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_REVIEWChanged()
    End Sub
    Partial Private Sub OnCHECK_LABLEChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_LABLEChanged()
    End Sub
    Partial Private Sub OnCHECK_REVIEW2Changing(value As String)
    End Sub
    Partial Private Sub OnCHECK_REVIEW2Changed()
    End Sub
    Partial Private Sub OnCONCLUDEChanging(value As String)
    End Sub
    Partial Private Sub OnCONCLUDEChanged()
    End Sub
    Partial Private Sub OnNAME_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_LICENSEChanged()
    End Sub
    Partial Private Sub OnNAME_OPERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OPERChanged()
    End Sub
    Partial Private Sub OnWITNESSChanging(value As String)
    End Sub
    Partial Private Sub OnWITNESSChanged()
    End Sub
    Partial Private Sub OnWITNESS2Changing(value As String)
    End Sub
    Partial Private Sub OnWITNESS2Changed()
    End Sub
    Partial Private Sub OnWITNESS3Changing(value As String)
    End Sub
    Partial Private Sub OnWITNESS3Changed()
    End Sub
    Partial Private Sub OnStaffChanging(value As String)
    End Sub
    Partial Private Sub OnStaffChanged()
    End Sub
    Partial Private Sub OnStaff2Changing(value As String)
    End Sub
    Partial Private Sub OnStaff2Changed()
    End Sub
    Partial Private Sub OnStaff3Changing(value As String)
    End Sub
    Partial Private Sub OnStaff3Changed()
    End Sub
    Partial Private Sub OnStaff4Changing(value As String)
    End Sub
    Partial Private Sub OnStaff4Changed()
    End Sub
    Partial Private Sub OnDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCLUDE", DbType:="NVarChar(MAX)")>  _
	Public Property INCLUDE() As String
		Get
			Return Me._INCLUDE
		End Get
		Set
			If (String.Equals(Me._INCLUDE, value) = false) Then
				Me.OnINCLUDEChanging(value)
				Me.SendPropertyChanging
				Me._INCLUDE = value
				Me.SendPropertyChanged("INCLUDE")
				Me.OnINCLUDEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_PLAN", DbType:="NVarChar(MAX)")>  _
	Public Property EX_PLAN() As String
		Get
			Return Me._EX_PLAN
		End Get
		Set
			If (String.Equals(Me._EX_PLAN, value) = false) Then
				Me.OnEX_PLANChanging(value)
				Me.SendPropertyChanging
				Me._EX_PLAN = value
				Me.SendPropertyChanged("EX_PLAN")
				Me.OnEX_PLANChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADD() As String
		Get
			Return Me._NAME_ADD
		End Get
		Set
			If (String.Equals(Me._NAME_ADD, value) = false) Then
				Me.OnNAME_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADD = value
				Me.SendPropertyChanged("NAME_ADD")
				Me.OnNAME_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NO_ADD() As String
		Get
			Return Me._NO_ADD
		End Get
		Set
			If (String.Equals(Me._NO_ADD, value) = false) Then
				Me.OnNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NO_ADD = value
				Me.SendPropertyChanged("NO_ADD")
				Me.OnNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property SOI_ADD() As String
		Get
			Return Me._SOI_ADD
		End Get
		Set
			If (String.Equals(Me._SOI_ADD, value) = false) Then
				Me.OnSOI_ADDChanging(value)
				Me.SendPropertyChanging
				Me._SOI_ADD = value
				Me.SendPropertyChanged("SOI_ADD")
				Me.OnSOI_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TANON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TANON_ADD() As String
		Get
			Return Me._TANON_ADD
		End Get
		Set
			If (String.Equals(Me._TANON_ADD, value) = false) Then
				Me.OnTANON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TANON_ADD = value
				Me.SendPropertyChanged("TANON_ADD")
				Me.OnTANON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property MOO_ADD() As String
		Get
			Return Me._MOO_ADD
		End Get
		Set
			If (String.Equals(Me._MOO_ADD, value) = false) Then
				Me.OnMOO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._MOO_ADD = value
				Me.SendPropertyChanged("MOO_ADD")
				Me.OnMOO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOMBON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TOMBON_ADD() As String
		Get
			Return Me._TOMBON_ADD
		End Get
		Set
			If (String.Equals(Me._TOMBON_ADD, value) = false) Then
				Me.OnTOMBON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TOMBON_ADD = value
				Me.SendPropertyChanged("TOMBON_ADD")
				Me.OnTOMBON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPER_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property AMPER_ADD() As String
		Get
			Return Me._AMPER_ADD
		End Get
		Set
			If (String.Equals(Me._AMPER_ADD, value) = false) Then
				Me.OnAMPER_ADDChanging(value)
				Me.SendPropertyChanging
				Me._AMPER_ADD = value
				Me.SendPropertyChanged("AMPER_ADD")
				Me.OnAMPER_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JUNGWAD_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property JUNGWAD_ADD() As String
		Get
			Return Me._JUNGWAD_ADD
		End Get
		Set
			If (String.Equals(Me._JUNGWAD_ADD, value) = false) Then
				Me.OnJUNGWAD_ADDChanging(value)
				Me.SendPropertyChanging
				Me._JUNGWAD_ADD = value
				Me.SendPropertyChanged("JUNGWAD_ADD")
				Me.OnJUNGWAD_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEAR_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NEAR_ADD() As String
		Get
			Return Me._NEAR_ADD
		End Get
		Set
			If (String.Equals(Me._NEAR_ADD, value) = false) Then
				Me.OnNEAR_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NEAR_ADD = value
				Me.SendPropertyChanged("NEAR_ADD")
				Me.OnNEAR_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property AREA_ADD() As String
		Get
			Return Me._AREA_ADD
		End Get
		Set
			If (String.Equals(Me._AREA_ADD, value) = false) Then
				Me.OnAREA_ADDChanging(value)
				Me.SendPropertyChanging
				Me._AREA_ADD = value
				Me.SendPropertyChanged("AREA_ADD")
				Me.OnAREA_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TEL_ADD() As String
		Get
			Return Me._TEL_ADD
		End Get
		Set
			If (String.Equals(Me._TEL_ADD, value) = false) Then
				Me.OnTEL_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TEL_ADD = value
				Me.SendPropertyChanged("TEL_ADD")
				Me.OnTEL_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ALLOW", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ALLOW() As String
		Get
			Return Me._NAME_ALLOW
		End Get
		Set
			If (String.Equals(Me._NAME_ALLOW, value) = false) Then
				Me.OnNAME_ALLOWChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ALLOW = value
				Me.SendPropertyChanged("NAME_ALLOW")
				Me.OnNAME_ALLOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_ALLOW", DbType:="DateTime")>  _
	Public Property TIME_ALLOW() As System.Nullable(Of Date)
		Get
			Return Me._TIME_ALLOW
		End Get
		Set
			If (Me._TIME_ALLOW.Equals(value) = false) Then
				Me.OnTIME_ALLOWChanging(value)
				Me.SendPropertyChanging
				Me._TIME_ALLOW = value
				Me.SendPropertyChanged("TIME_ALLOW")
				Me.OnTIME_ALLOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ACTION", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ACTION() As String
		Get
			Return Me._NAME_ACTION
		End Get
		Set
			If (String.Equals(Me._NAME_ACTION, value) = false) Then
				Me.OnNAME_ACTIONChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ACTION = value
				Me.SendPropertyChanged("NAME_ACTION")
				Me.OnNAME_ACTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property LICENSE() As String
		Get
			Return Me._LICENSE
		End Get
		Set
			If (String.Equals(Me._LICENSE, value) = false) Then
				Me.OnLICENSEChanging(value)
				Me.SendPropertyChanging
				Me._LICENSE = value
				Me.SendPropertyChanged("LICENSE")
				Me.OnLICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPERRATION", DbType:="NVarChar(MAX)")>  _
	Public Property OPERRATION() As String
		Get
			Return Me._OPERRATION
		End Get
		Set
			If (String.Equals(Me._OPERRATION, value) = false) Then
				Me.OnOPERRATIONChanging(value)
				Me.SendPropertyChanging
				Me._OPERRATION = value
				Me.SendPropertyChanged("OPERRATION")
				Me.OnOPERRATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICENSE_TRAIN", DbType:="NVarChar(MAX)")>  _
	Public Property LICENSE_TRAIN() As String
		Get
			Return Me._LICENSE_TRAIN
		End Get
		Set
			If (String.Equals(Me._LICENSE_TRAIN, value) = false) Then
				Me.OnLICENSE_TRAINChanging(value)
				Me.SendPropertyChanging
				Me._LICENSE_TRAIN = value
				Me.SendPropertyChanged("LICENSE_TRAIN")
				Me.OnLICENSE_TRAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_MAKE", DbType:="NVarChar(MAX)")>  _
	Public Property TIME_MAKE() As String
		Get
			Return Me._TIME_MAKE
		End Get
		Set
			If (String.Equals(Me._TIME_MAKE, value) = false) Then
				Me.OnTIME_MAKEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_MAKE = value
				Me.SendPropertyChanged("TIME_MAKE")
				Me.OnTIME_MAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAMPLE_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property SAMPLE_DRUG() As String
		Get
			Return Me._SAMPLE_DRUG
		End Get
		Set
			If (String.Equals(Me._SAMPLE_DRUG, value) = false) Then
				Me.OnSAMPLE_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._SAMPLE_DRUG = value
				Me.SendPropertyChanged("SAMPLE_DRUG")
				Me.OnSAMPLE_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOR_CONSIDER", DbType:="NVarChar(MAX)")>  _
	Public Property FOR_CONSIDER() As String
		Get
			Return Me._FOR_CONSIDER
		End Get
		Set
			If (String.Equals(Me._FOR_CONSIDER, value) = false) Then
				Me.OnFOR_CONSIDERChanging(value)
				Me.SendPropertyChanging
				Me._FOR_CONSIDER = value
				Me.SendPropertyChanged("FOR_CONSIDER")
				Me.OnFOR_CONSIDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEIZE", DbType:="NVarChar(MAX)")>  _
	Public Property SEIZE() As String
		Get
			Return Me._SEIZE
		End Get
		Set
			If (String.Equals(Me._SEIZE, value) = false) Then
				Me.OnSEIZEChanging(value)
				Me.SendPropertyChanging
				Me._SEIZE = value
				Me.SendPropertyChanged("SEIZE")
				Me.OnSEIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FREEZE", DbType:="NVarChar(MAX)")>  _
	Public Property FREEZE() As String
		Get
			Return Me._FREEZE
		End Get
		Set
			If (String.Equals(Me._FREEZE, value) = false) Then
				Me.OnFREEZEChanging(value)
				Me.SendPropertyChanging
				Me._FREEZE = value
				Me.SendPropertyChanged("FREEZE")
				Me.OnFREEZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_REVIEW", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_REVIEW() As String
		Get
			Return Me._CHECK_REVIEW
		End Get
		Set
			If (String.Equals(Me._CHECK_REVIEW, value) = false) Then
				Me.OnCHECK_REVIEWChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_REVIEW = value
				Me.SendPropertyChanged("CHECK_REVIEW")
				Me.OnCHECK_REVIEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_LABLE", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_LABLE() As String
		Get
			Return Me._CHECK_LABLE
		End Get
		Set
			If (String.Equals(Me._CHECK_LABLE, value) = false) Then
				Me.OnCHECK_LABLEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_LABLE = value
				Me.SendPropertyChanged("CHECK_LABLE")
				Me.OnCHECK_LABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_REVIEW2", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_REVIEW2() As String
		Get
			Return Me._CHECK_REVIEW2
		End Get
		Set
			If (String.Equals(Me._CHECK_REVIEW2, value) = false) Then
				Me.OnCHECK_REVIEW2Changing(value)
				Me.SendPropertyChanging
				Me._CHECK_REVIEW2 = value
				Me.SendPropertyChanged("CHECK_REVIEW2")
				Me.OnCHECK_REVIEW2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONCLUDE", DbType:="NVarChar(MAX)")>  _
	Public Property CONCLUDE() As String
		Get
			Return Me._CONCLUDE
		End Get
		Set
			If (String.Equals(Me._CONCLUDE, value) = false) Then
				Me.OnCONCLUDEChanging(value)
				Me.SendPropertyChanging
				Me._CONCLUDE = value
				Me.SendPropertyChanged("CONCLUDE")
				Me.OnCONCLUDEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_LICENSE() As String
		Get
			Return Me._NAME_LICENSE
		End Get
		Set
			If (String.Equals(Me._NAME_LICENSE, value) = false) Then
				Me.OnNAME_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_LICENSE = value
				Me.SendPropertyChanged("NAME_LICENSE")
				Me.OnNAME_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OPER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OPER() As String
		Get
			Return Me._NAME_OPER
		End Get
		Set
			If (String.Equals(Me._NAME_OPER, value) = false) Then
				Me.OnNAME_OPERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OPER = value
				Me.SendPropertyChanged("NAME_OPER")
				Me.OnNAME_OPERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS() As String
		Get
			Return Me._WITNESS
		End Get
		Set
			If (String.Equals(Me._WITNESS, value) = false) Then
				Me.OnWITNESSChanging(value)
				Me.SendPropertyChanging
				Me._WITNESS = value
				Me.SendPropertyChanged("WITNESS")
				Me.OnWITNESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS2", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS2() As String
		Get
			Return Me._WITNESS2
		End Get
		Set
			If (String.Equals(Me._WITNESS2, value) = false) Then
				Me.OnWITNESS2Changing(value)
				Me.SendPropertyChanging
				Me._WITNESS2 = value
				Me.SendPropertyChanged("WITNESS2")
				Me.OnWITNESS2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS3", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS3() As String
		Get
			Return Me._WITNESS3
		End Get
		Set
			If (String.Equals(Me._WITNESS3, value) = false) Then
				Me.OnWITNESS3Changing(value)
				Me.SendPropertyChanging
				Me._WITNESS3 = value
				Me.SendPropertyChanged("WITNESS3")
				Me.OnWITNESS3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Staff", DbType:="NVarChar(MAX)")>  _
	Public Property Staff() As String
		Get
			Return Me._Staff
		End Get
		Set
			If (String.Equals(Me._Staff, value) = false) Then
				Me.OnStaffChanging(value)
				Me.SendPropertyChanging
				Me._Staff = value
				Me.SendPropertyChanged("Staff")
				Me.OnStaffChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Staff2", DbType:="NVarChar(MAX)")>  _
	Public Property Staff2() As String
		Get
			Return Me._Staff2
		End Get
		Set
			If (String.Equals(Me._Staff2, value) = false) Then
				Me.OnStaff2Changing(value)
				Me.SendPropertyChanging
				Me._Staff2 = value
				Me.SendPropertyChanged("Staff2")
				Me.OnStaff2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Staff3", DbType:="NVarChar(MAX)")>  _
	Public Property Staff3() As String
		Get
			Return Me._Staff3
		End Get
		Set
			If (String.Equals(Me._Staff3, value) = false) Then
				Me.OnStaff3Changing(value)
				Me.SendPropertyChanging
				Me._Staff3 = value
				Me.SendPropertyChanged("Staff3")
				Me.OnStaff3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Staff4", DbType:="NVarChar(MAX)")>  _
	Public Property Staff4() As String
		Get
			Return Me._Staff4
		End Get
		Set
			If (String.Equals(Me._Staff4, value) = false) Then
				Me.OnStaff4Changing(value)
				Me.SendPropertyChanging
				Me._Staff4 = value
				Me.SendPropertyChanged("Staff4")
				Me.OnStaff4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="DateTime")>  _
	Public Property [DATE]() As System.Nullable(Of Date)
		Get
			Return Me._DATE
		End Get
		Set
			If (Me._DATE.Equals(value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_RECORD_PRODUCT")>  _
Partial Public Class PDF_RECORD_PRODUCT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _INCLUDE As String
	
	Private _CHECK_PLACE As String
	
	Private _NO_ADD As String
	
	Private _SOI_ADD As String
	
	Private _TANON_ADD As String
	
	Private _MOO_ADD As String
	
	Private _TUMBON_ADD As String
	
	Private _AMPER_ADD As String
	
	Private _JUNGWAD As String
	
	Private _NEAR_ADD As String
	
	Private _AREA_ADD As String
	
	Private _TEL_ADD As String
	
	Private _NAME_OPER As String
	
	Private _DATE As String
	
	Private _TIME As String
	
	Private _LABLE_LICENSE As String
	
	Private _SELING As String
	
	Private _SEIZE As String
	
	Private _FREEZE As String
	
	Private _HAVE_DRUG As String
	
	Private _LIST_H_DRUG As String
	
	Private _HAVE_DRUGEXPRIRED As String
	
	Private _LIST_H_DRUGEXPRIRED As String
	
	Private _HAVE_DRUG_NOLICENSE As String
	
	Private _LIST_H_DRUG_NOLICENSE As String
	
	Private _HAVE_DRUG_DAMEGE As String
	
	Private _LIST_H_DRUG_DAMEGE As String
	
	Private _EX_ANALYZY As String
	
	Private _CHECK_BEGIN As String
	
	Private _CHECK_LABLE As String
	
	Private _CHECK_REVIEW As String
	
	Private _REPORT_CHECK As String
	
	Private _NAME_PERSON As String
	
	Private _WITNESS As String
	
	Private _WITNESS2 As String
	
	Private _STAFF As String
	
	Private _STAFF2 As String
	
	Private _STAFF3 As String
	
	Private _STAFF4 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnINCLUDEChanging(value As String)
    End Sub
    Partial Private Sub OnINCLUDEChanged()
    End Sub
    Partial Private Sub OnCHECK_PLACEChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_PLACEChanged()
    End Sub
    Partial Private Sub OnNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNO_ADDChanged()
    End Sub
    Partial Private Sub OnSOI_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnSOI_ADDChanged()
    End Sub
    Partial Private Sub OnTANON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTANON_ADDChanged()
    End Sub
    Partial Private Sub OnMOO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnMOO_ADDChanged()
    End Sub
    Partial Private Sub OnTUMBON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTUMBON_ADDChanged()
    End Sub
    Partial Private Sub OnAMPER_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnAMPER_ADDChanged()
    End Sub
    Partial Private Sub OnJUNGWADChanging(value As String)
    End Sub
    Partial Private Sub OnJUNGWADChanged()
    End Sub
    Partial Private Sub OnNEAR_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNEAR_ADDChanged()
    End Sub
    Partial Private Sub OnAREA_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnAREA_ADDChanged()
    End Sub
    Partial Private Sub OnTEL_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_ADDChanged()
    End Sub
    Partial Private Sub OnNAME_OPERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OPERChanged()
    End Sub
    Partial Private Sub OnDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    Partial Private Sub OnTIMEChanging(value As String)
    End Sub
    Partial Private Sub OnTIMEChanged()
    End Sub
    Partial Private Sub OnLABLE_LICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnLABLE_LICENSEChanged()
    End Sub
    Partial Private Sub OnSELINGChanging(value As String)
    End Sub
    Partial Private Sub OnSELINGChanged()
    End Sub
    Partial Private Sub OnSEIZEChanging(value As String)
    End Sub
    Partial Private Sub OnSEIZEChanged()
    End Sub
    Partial Private Sub OnFREEZEChanging(value As String)
    End Sub
    Partial Private Sub OnFREEZEChanged()
    End Sub
    Partial Private Sub OnHAVE_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnHAVE_DRUGChanged()
    End Sub
    Partial Private Sub OnLIST_H_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnLIST_H_DRUGChanged()
    End Sub
    Partial Private Sub OnHAVE_DRUGEXPRIREDChanging(value As String)
    End Sub
    Partial Private Sub OnHAVE_DRUGEXPRIREDChanged()
    End Sub
    Partial Private Sub OnLIST_H_DRUGEXPRIREDChanging(value As String)
    End Sub
    Partial Private Sub OnLIST_H_DRUGEXPRIREDChanged()
    End Sub
    Partial Private Sub OnHAVE_DRUG_NOLICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnHAVE_DRUG_NOLICENSEChanged()
    End Sub
    Partial Private Sub OnLIST_H_DRUG_NOLICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnLIST_H_DRUG_NOLICENSEChanged()
    End Sub
    Partial Private Sub OnHAVE_DRUG_DAMEGEChanging(value As String)
    End Sub
    Partial Private Sub OnHAVE_DRUG_DAMEGEChanged()
    End Sub
    Partial Private Sub OnLIST_H_DRUG_DAMEGEChanging(value As String)
    End Sub
    Partial Private Sub OnLIST_H_DRUG_DAMEGEChanged()
    End Sub
    Partial Private Sub OnEX_ANALYZYChanging(value As String)
    End Sub
    Partial Private Sub OnEX_ANALYZYChanged()
    End Sub
    Partial Private Sub OnCHECK_BEGINChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_BEGINChanged()
    End Sub
    Partial Private Sub OnCHECK_LABLEChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_LABLEChanged()
    End Sub
    Partial Private Sub OnCHECK_REVIEWChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_REVIEWChanged()
    End Sub
    Partial Private Sub OnREPORT_CHECKChanging(value As String)
    End Sub
    Partial Private Sub OnREPORT_CHECKChanged()
    End Sub
    Partial Private Sub OnNAME_PERSONChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PERSONChanged()
    End Sub
    Partial Private Sub OnWITNESSChanging(value As String)
    End Sub
    Partial Private Sub OnWITNESSChanged()
    End Sub
    Partial Private Sub OnWITNESS2Changing(value As String)
    End Sub
    Partial Private Sub OnWITNESS2Changed()
    End Sub
    Partial Private Sub OnSTAFFChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFFChanged()
    End Sub
    Partial Private Sub OnSTAFF2Changing(value As String)
    End Sub
    Partial Private Sub OnSTAFF2Changed()
    End Sub
    Partial Private Sub OnSTAFF3Changing(value As String)
    End Sub
    Partial Private Sub OnSTAFF3Changed()
    End Sub
    Partial Private Sub OnSTAFF4Changing(value As String)
    End Sub
    Partial Private Sub OnSTAFF4Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCLUDE", DbType:="NVarChar(MAX)")>  _
	Public Property INCLUDE() As String
		Get
			Return Me._INCLUDE
		End Get
		Set
			If (String.Equals(Me._INCLUDE, value) = false) Then
				Me.OnINCLUDEChanging(value)
				Me.SendPropertyChanging
				Me._INCLUDE = value
				Me.SendPropertyChanged("INCLUDE")
				Me.OnINCLUDEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_PLACE", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_PLACE() As String
		Get
			Return Me._CHECK_PLACE
		End Get
		Set
			If (String.Equals(Me._CHECK_PLACE, value) = false) Then
				Me.OnCHECK_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_PLACE = value
				Me.SendPropertyChanged("CHECK_PLACE")
				Me.OnCHECK_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NO_ADD() As String
		Get
			Return Me._NO_ADD
		End Get
		Set
			If (String.Equals(Me._NO_ADD, value) = false) Then
				Me.OnNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NO_ADD = value
				Me.SendPropertyChanged("NO_ADD")
				Me.OnNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property SOI_ADD() As String
		Get
			Return Me._SOI_ADD
		End Get
		Set
			If (String.Equals(Me._SOI_ADD, value) = false) Then
				Me.OnSOI_ADDChanging(value)
				Me.SendPropertyChanging
				Me._SOI_ADD = value
				Me.SendPropertyChanged("SOI_ADD")
				Me.OnSOI_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TANON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TANON_ADD() As String
		Get
			Return Me._TANON_ADD
		End Get
		Set
			If (String.Equals(Me._TANON_ADD, value) = false) Then
				Me.OnTANON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TANON_ADD = value
				Me.SendPropertyChanged("TANON_ADD")
				Me.OnTANON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property MOO_ADD() As String
		Get
			Return Me._MOO_ADD
		End Get
		Set
			If (String.Equals(Me._MOO_ADD, value) = false) Then
				Me.OnMOO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._MOO_ADD = value
				Me.SendPropertyChanged("MOO_ADD")
				Me.OnMOO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TUMBON_ADD() As String
		Get
			Return Me._TUMBON_ADD
		End Get
		Set
			If (String.Equals(Me._TUMBON_ADD, value) = false) Then
				Me.OnTUMBON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ADD = value
				Me.SendPropertyChanged("TUMBON_ADD")
				Me.OnTUMBON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPER_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property AMPER_ADD() As String
		Get
			Return Me._AMPER_ADD
		End Get
		Set
			If (String.Equals(Me._AMPER_ADD, value) = false) Then
				Me.OnAMPER_ADDChanging(value)
				Me.SendPropertyChanging
				Me._AMPER_ADD = value
				Me.SendPropertyChanged("AMPER_ADD")
				Me.OnAMPER_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JUNGWAD", DbType:="NVarChar(MAX)")>  _
	Public Property JUNGWAD() As String
		Get
			Return Me._JUNGWAD
		End Get
		Set
			If (String.Equals(Me._JUNGWAD, value) = false) Then
				Me.OnJUNGWADChanging(value)
				Me.SendPropertyChanging
				Me._JUNGWAD = value
				Me.SendPropertyChanged("JUNGWAD")
				Me.OnJUNGWADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEAR_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NEAR_ADD() As String
		Get
			Return Me._NEAR_ADD
		End Get
		Set
			If (String.Equals(Me._NEAR_ADD, value) = false) Then
				Me.OnNEAR_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NEAR_ADD = value
				Me.SendPropertyChanged("NEAR_ADD")
				Me.OnNEAR_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property AREA_ADD() As String
		Get
			Return Me._AREA_ADD
		End Get
		Set
			If (String.Equals(Me._AREA_ADD, value) = false) Then
				Me.OnAREA_ADDChanging(value)
				Me.SendPropertyChanging
				Me._AREA_ADD = value
				Me.SendPropertyChanged("AREA_ADD")
				Me.OnAREA_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TEL_ADD() As String
		Get
			Return Me._TEL_ADD
		End Get
		Set
			If (String.Equals(Me._TEL_ADD, value) = false) Then
				Me.OnTEL_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TEL_ADD = value
				Me.SendPropertyChanged("TEL_ADD")
				Me.OnTEL_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OPER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OPER() As String
		Get
			Return Me._NAME_OPER
		End Get
		Set
			If (String.Equals(Me._NAME_OPER, value) = false) Then
				Me.OnNAME_OPERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OPER = value
				Me.SendPropertyChanged("NAME_OPER")
				Me.OnNAME_OPERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="NVarChar(MAX)")>  _
	Public Property [DATE]() As String
		Get
			Return Me._DATE
		End Get
		Set
			If (String.Equals(Me._DATE, value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME", DbType:="NVarChar(MAX)")>  _
	Public Property TIME() As String
		Get
			Return Me._TIME
		End Get
		Set
			If (String.Equals(Me._TIME, value) = false) Then
				Me.OnTIMEChanging(value)
				Me.SendPropertyChanging
				Me._TIME = value
				Me.SendPropertyChanged("TIME")
				Me.OnTIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABLE_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property LABLE_LICENSE() As String
		Get
			Return Me._LABLE_LICENSE
		End Get
		Set
			If (String.Equals(Me._LABLE_LICENSE, value) = false) Then
				Me.OnLABLE_LICENSEChanging(value)
				Me.SendPropertyChanging
				Me._LABLE_LICENSE = value
				Me.SendPropertyChanged("LABLE_LICENSE")
				Me.OnLABLE_LICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SELING", DbType:="NVarChar(MAX)")>  _
	Public Property SELING() As String
		Get
			Return Me._SELING
		End Get
		Set
			If (String.Equals(Me._SELING, value) = false) Then
				Me.OnSELINGChanging(value)
				Me.SendPropertyChanging
				Me._SELING = value
				Me.SendPropertyChanged("SELING")
				Me.OnSELINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEIZE", DbType:="NVarChar(MAX)")>  _
	Public Property SEIZE() As String
		Get
			Return Me._SEIZE
		End Get
		Set
			If (String.Equals(Me._SEIZE, value) = false) Then
				Me.OnSEIZEChanging(value)
				Me.SendPropertyChanging
				Me._SEIZE = value
				Me.SendPropertyChanged("SEIZE")
				Me.OnSEIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FREEZE", DbType:="NVarChar(MAX)")>  _
	Public Property FREEZE() As String
		Get
			Return Me._FREEZE
		End Get
		Set
			If (String.Equals(Me._FREEZE, value) = false) Then
				Me.OnFREEZEChanging(value)
				Me.SendPropertyChanging
				Me._FREEZE = value
				Me.SendPropertyChanged("FREEZE")
				Me.OnFREEZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HAVE_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property HAVE_DRUG() As String
		Get
			Return Me._HAVE_DRUG
		End Get
		Set
			If (String.Equals(Me._HAVE_DRUG, value) = false) Then
				Me.OnHAVE_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._HAVE_DRUG = value
				Me.SendPropertyChanged("HAVE_DRUG")
				Me.OnHAVE_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST_H_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property LIST_H_DRUG() As String
		Get
			Return Me._LIST_H_DRUG
		End Get
		Set
			If (String.Equals(Me._LIST_H_DRUG, value) = false) Then
				Me.OnLIST_H_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._LIST_H_DRUG = value
				Me.SendPropertyChanged("LIST_H_DRUG")
				Me.OnLIST_H_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HAVE_DRUGEXPRIRED", DbType:="NVarChar(MAX)")>  _
	Public Property HAVE_DRUGEXPRIRED() As String
		Get
			Return Me._HAVE_DRUGEXPRIRED
		End Get
		Set
			If (String.Equals(Me._HAVE_DRUGEXPRIRED, value) = false) Then
				Me.OnHAVE_DRUGEXPRIREDChanging(value)
				Me.SendPropertyChanging
				Me._HAVE_DRUGEXPRIRED = value
				Me.SendPropertyChanged("HAVE_DRUGEXPRIRED")
				Me.OnHAVE_DRUGEXPRIREDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST_H_DRUGEXPRIRED", DbType:="NVarChar(MAX)")>  _
	Public Property LIST_H_DRUGEXPRIRED() As String
		Get
			Return Me._LIST_H_DRUGEXPRIRED
		End Get
		Set
			If (String.Equals(Me._LIST_H_DRUGEXPRIRED, value) = false) Then
				Me.OnLIST_H_DRUGEXPRIREDChanging(value)
				Me.SendPropertyChanging
				Me._LIST_H_DRUGEXPRIRED = value
				Me.SendPropertyChanged("LIST_H_DRUGEXPRIRED")
				Me.OnLIST_H_DRUGEXPRIREDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HAVE_DRUG_NOLICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property HAVE_DRUG_NOLICENSE() As String
		Get
			Return Me._HAVE_DRUG_NOLICENSE
		End Get
		Set
			If (String.Equals(Me._HAVE_DRUG_NOLICENSE, value) = false) Then
				Me.OnHAVE_DRUG_NOLICENSEChanging(value)
				Me.SendPropertyChanging
				Me._HAVE_DRUG_NOLICENSE = value
				Me.SendPropertyChanged("HAVE_DRUG_NOLICENSE")
				Me.OnHAVE_DRUG_NOLICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST_H_DRUG_NOLICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property LIST_H_DRUG_NOLICENSE() As String
		Get
			Return Me._LIST_H_DRUG_NOLICENSE
		End Get
		Set
			If (String.Equals(Me._LIST_H_DRUG_NOLICENSE, value) = false) Then
				Me.OnLIST_H_DRUG_NOLICENSEChanging(value)
				Me.SendPropertyChanging
				Me._LIST_H_DRUG_NOLICENSE = value
				Me.SendPropertyChanged("LIST_H_DRUG_NOLICENSE")
				Me.OnLIST_H_DRUG_NOLICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HAVE_DRUG_DAMEGE", DbType:="NVarChar(MAX)")>  _
	Public Property HAVE_DRUG_DAMEGE() As String
		Get
			Return Me._HAVE_DRUG_DAMEGE
		End Get
		Set
			If (String.Equals(Me._HAVE_DRUG_DAMEGE, value) = false) Then
				Me.OnHAVE_DRUG_DAMEGEChanging(value)
				Me.SendPropertyChanging
				Me._HAVE_DRUG_DAMEGE = value
				Me.SendPropertyChanged("HAVE_DRUG_DAMEGE")
				Me.OnHAVE_DRUG_DAMEGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST_H_DRUG_DAMEGE", DbType:="NVarChar(MAX)")>  _
	Public Property LIST_H_DRUG_DAMEGE() As String
		Get
			Return Me._LIST_H_DRUG_DAMEGE
		End Get
		Set
			If (String.Equals(Me._LIST_H_DRUG_DAMEGE, value) = false) Then
				Me.OnLIST_H_DRUG_DAMEGEChanging(value)
				Me.SendPropertyChanging
				Me._LIST_H_DRUG_DAMEGE = value
				Me.SendPropertyChanged("LIST_H_DRUG_DAMEGE")
				Me.OnLIST_H_DRUG_DAMEGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_ANALYZY", DbType:="NVarChar(MAX)")>  _
	Public Property EX_ANALYZY() As String
		Get
			Return Me._EX_ANALYZY
		End Get
		Set
			If (String.Equals(Me._EX_ANALYZY, value) = false) Then
				Me.OnEX_ANALYZYChanging(value)
				Me.SendPropertyChanging
				Me._EX_ANALYZY = value
				Me.SendPropertyChanged("EX_ANALYZY")
				Me.OnEX_ANALYZYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_BEGIN", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_BEGIN() As String
		Get
			Return Me._CHECK_BEGIN
		End Get
		Set
			If (String.Equals(Me._CHECK_BEGIN, value) = false) Then
				Me.OnCHECK_BEGINChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_BEGIN = value
				Me.SendPropertyChanged("CHECK_BEGIN")
				Me.OnCHECK_BEGINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_LABLE", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_LABLE() As String
		Get
			Return Me._CHECK_LABLE
		End Get
		Set
			If (String.Equals(Me._CHECK_LABLE, value) = false) Then
				Me.OnCHECK_LABLEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_LABLE = value
				Me.SendPropertyChanged("CHECK_LABLE")
				Me.OnCHECK_LABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_REVIEW", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_REVIEW() As String
		Get
			Return Me._CHECK_REVIEW
		End Get
		Set
			If (String.Equals(Me._CHECK_REVIEW, value) = false) Then
				Me.OnCHECK_REVIEWChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_REVIEW = value
				Me.SendPropertyChanged("CHECK_REVIEW")
				Me.OnCHECK_REVIEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT_CHECK", DbType:="NVarChar(MAX)")>  _
	Public Property REPORT_CHECK() As String
		Get
			Return Me._REPORT_CHECK
		End Get
		Set
			If (String.Equals(Me._REPORT_CHECK, value) = false) Then
				Me.OnREPORT_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._REPORT_CHECK = value
				Me.SendPropertyChanged("REPORT_CHECK")
				Me.OnREPORT_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PERSON", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PERSON() As String
		Get
			Return Me._NAME_PERSON
		End Get
		Set
			If (String.Equals(Me._NAME_PERSON, value) = false) Then
				Me.OnNAME_PERSONChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PERSON = value
				Me.SendPropertyChanged("NAME_PERSON")
				Me.OnNAME_PERSONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS() As String
		Get
			Return Me._WITNESS
		End Get
		Set
			If (String.Equals(Me._WITNESS, value) = false) Then
				Me.OnWITNESSChanging(value)
				Me.SendPropertyChanging
				Me._WITNESS = value
				Me.SendPropertyChanged("WITNESS")
				Me.OnWITNESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WITNESS2", DbType:="NVarChar(MAX)")>  _
	Public Property WITNESS2() As String
		Get
			Return Me._WITNESS2
		End Get
		Set
			If (String.Equals(Me._WITNESS2, value) = false) Then
				Me.OnWITNESS2Changing(value)
				Me.SendPropertyChanging
				Me._WITNESS2 = value
				Me.SendPropertyChanged("WITNESS2")
				Me.OnWITNESS2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF() As String
		Get
			Return Me._STAFF
		End Get
		Set
			If (String.Equals(Me._STAFF, value) = false) Then
				Me.OnSTAFFChanging(value)
				Me.SendPropertyChanging
				Me._STAFF = value
				Me.SendPropertyChanged("STAFF")
				Me.OnSTAFFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF2", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF2() As String
		Get
			Return Me._STAFF2
		End Get
		Set
			If (String.Equals(Me._STAFF2, value) = false) Then
				Me.OnSTAFF2Changing(value)
				Me.SendPropertyChanging
				Me._STAFF2 = value
				Me.SendPropertyChanged("STAFF2")
				Me.OnSTAFF2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF3", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF3() As String
		Get
			Return Me._STAFF3
		End Get
		Set
			If (String.Equals(Me._STAFF3, value) = false) Then
				Me.OnSTAFF3Changing(value)
				Me.SendPropertyChanging
				Me._STAFF3 = value
				Me.SendPropertyChanged("STAFF3")
				Me.OnSTAFF3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF4", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF4() As String
		Get
			Return Me._STAFF4
		End Get
		Set
			If (String.Equals(Me._STAFF4, value) = false) Then
				Me.OnSTAFF4Changing(value)
				Me.SendPropertyChanging
				Me._STAFF4 = value
				Me.SendPropertyChanged("STAFF4")
				Me.OnSTAFF4Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_RECORD_TESTIMONYFDA")>  _
Partial Public Class PDF_RECORD_TESTIMONYFDA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DATE As System.Nullable(Of Date)
	
	Private _MONTH As System.Nullable(Of Date)
	
	Private _YEAR As System.Nullable(Of Date)
	
	Private _TES_FROM As String
	
	Private _SUBJECT As String
	
	Private _BEFORE As String
	
	Private _NAME As String
	
	Private _AGE As String
	
	Private _RACE As String
	
	Private _NATIONLITY As String
	
	Private _ARE As String
	
	Private _OF_PLACE As String
	
	Private _NAME_PLACE As String
	
	Private _NO_ADD As String
	
	Private _SOI_ADD As String
	
	Private _TANON_ADD As String
	
	Private _MOO_ADD As String
	
	Private _TUMBON_ADD As String
	
	Private _ZIP_CODE As String
	
	Private _PLACE_NEAR As String
	
	Private _POLICE_AREA As String
	
	Private _GIVE_TESTI As String
	
	Private _RECORD_TESTI As String
	
	Private _GIVE_WORD As String
	
	Private _SIGN As String
	
	Private _SIGN2 As String
	
	Private _OFFICAL As String
	
	Private _OFFICAL2 As String
	
	Private _OFFICAL3 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    Partial Private Sub OnMONTHChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnMONTHChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnTES_FROMChanging(value As String)
    End Sub
    Partial Private Sub OnTES_FROMChanged()
    End Sub
    Partial Private Sub OnSUBJECTChanging(value As String)
    End Sub
    Partial Private Sub OnSUBJECTChanged()
    End Sub
    Partial Private Sub OnBEFOREChanging(value As String)
    End Sub
    Partial Private Sub OnBEFOREChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnAGEChanging(value As String)
    End Sub
    Partial Private Sub OnAGEChanged()
    End Sub
    Partial Private Sub OnRACEChanging(value As String)
    End Sub
    Partial Private Sub OnRACEChanged()
    End Sub
    Partial Private Sub OnNATIONLITYChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONLITYChanged()
    End Sub
    Partial Private Sub OnAREChanging(value As String)
    End Sub
    Partial Private Sub OnAREChanged()
    End Sub
    Partial Private Sub OnOF_PLACEChanging(value As String)
    End Sub
    Partial Private Sub OnOF_PLACEChanged()
    End Sub
    Partial Private Sub OnNAME_PLACEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PLACEChanged()
    End Sub
    Partial Private Sub OnNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNO_ADDChanged()
    End Sub
    Partial Private Sub OnSOI_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnSOI_ADDChanged()
    End Sub
    Partial Private Sub OnTANON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTANON_ADDChanged()
    End Sub
    Partial Private Sub OnMOO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnMOO_ADDChanged()
    End Sub
    Partial Private Sub OnTUMBON_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnTUMBON_ADDChanged()
    End Sub
    Partial Private Sub OnZIP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIP_CODEChanged()
    End Sub
    Partial Private Sub OnPLACE_NEARChanging(value As String)
    End Sub
    Partial Private Sub OnPLACE_NEARChanged()
    End Sub
    Partial Private Sub OnPOLICE_AREAChanging(value As String)
    End Sub
    Partial Private Sub OnPOLICE_AREAChanged()
    End Sub
    Partial Private Sub OnGIVE_TESTIChanging(value As String)
    End Sub
    Partial Private Sub OnGIVE_TESTIChanged()
    End Sub
    Partial Private Sub OnRECORD_TESTIChanging(value As String)
    End Sub
    Partial Private Sub OnRECORD_TESTIChanged()
    End Sub
    Partial Private Sub OnGIVE_WORDChanging(value As String)
    End Sub
    Partial Private Sub OnGIVE_WORDChanged()
    End Sub
    Partial Private Sub OnSIGNChanging(value As String)
    End Sub
    Partial Private Sub OnSIGNChanged()
    End Sub
    Partial Private Sub OnSIGN2Changing(value As String)
    End Sub
    Partial Private Sub OnSIGN2Changed()
    End Sub
    Partial Private Sub OnOFFICALChanging(value As String)
    End Sub
    Partial Private Sub OnOFFICALChanged()
    End Sub
    Partial Private Sub OnOFFICAL2Changing(value As String)
    End Sub
    Partial Private Sub OnOFFICAL2Changed()
    End Sub
    Partial Private Sub OnOFFICAL3Changing(value As String)
    End Sub
    Partial Private Sub OnOFFICAL3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="DateTime")>  _
	Public Property [DATE]() As System.Nullable(Of Date)
		Get
			Return Me._DATE
		End Get
		Set
			If (Me._DATE.Equals(value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONTH", DbType:="DateTime")>  _
	Public Property MONTH() As System.Nullable(Of Date)
		Get
			Return Me._MONTH
		End Get
		Set
			If (Me._MONTH.Equals(value) = false) Then
				Me.OnMONTHChanging(value)
				Me.SendPropertyChanging
				Me._MONTH = value
				Me.SendPropertyChanged("MONTH")
				Me.OnMONTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="DateTime")>  _
	Public Property YEAR() As System.Nullable(Of Date)
		Get
			Return Me._YEAR
		End Get
		Set
			If (Me._YEAR.Equals(value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TES_FROM", DbType:="NVarChar(MAX)")>  _
	Public Property TES_FROM() As String
		Get
			Return Me._TES_FROM
		End Get
		Set
			If (String.Equals(Me._TES_FROM, value) = false) Then
				Me.OnTES_FROMChanging(value)
				Me.SendPropertyChanging
				Me._TES_FROM = value
				Me.SendPropertyChanged("TES_FROM")
				Me.OnTES_FROMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUBJECT", DbType:="NVarChar(MAX)")>  _
	Public Property SUBJECT() As String
		Get
			Return Me._SUBJECT
		End Get
		Set
			If (String.Equals(Me._SUBJECT, value) = false) Then
				Me.OnSUBJECTChanging(value)
				Me.SendPropertyChanging
				Me._SUBJECT = value
				Me.SendPropertyChanged("SUBJECT")
				Me.OnSUBJECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BEFORE", DbType:="NVarChar(MAX)")>  _
	Public Property BEFORE() As String
		Get
			Return Me._BEFORE
		End Get
		Set
			If (String.Equals(Me._BEFORE, value) = false) Then
				Me.OnBEFOREChanging(value)
				Me.SendPropertyChanging
				Me._BEFORE = value
				Me.SendPropertyChanged("BEFORE")
				Me.OnBEFOREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE", DbType:="NVarChar(MAX)")>  _
	Public Property AGE() As String
		Get
			Return Me._AGE
		End Get
		Set
			If (String.Equals(Me._AGE, value) = false) Then
				Me.OnAGEChanging(value)
				Me.SendPropertyChanging
				Me._AGE = value
				Me.SendPropertyChanged("AGE")
				Me.OnAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RACE", DbType:="NVarChar(MAX)")>  _
	Public Property RACE() As String
		Get
			Return Me._RACE
		End Get
		Set
			If (String.Equals(Me._RACE, value) = false) Then
				Me.OnRACEChanging(value)
				Me.SendPropertyChanging
				Me._RACE = value
				Me.SendPropertyChanged("RACE")
				Me.OnRACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONLITY", DbType:="NVarChar(MAX)")>  _
	Public Property NATIONLITY() As String
		Get
			Return Me._NATIONLITY
		End Get
		Set
			If (String.Equals(Me._NATIONLITY, value) = false) Then
				Me.OnNATIONLITYChanging(value)
				Me.SendPropertyChanging
				Me._NATIONLITY = value
				Me.SendPropertyChanged("NATIONLITY")
				Me.OnNATIONLITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARE", DbType:="NVarChar(50)")>  _
	Public Property ARE() As String
		Get
			Return Me._ARE
		End Get
		Set
			If (String.Equals(Me._ARE, value) = false) Then
				Me.OnAREChanging(value)
				Me.SendPropertyChanging
				Me._ARE = value
				Me.SendPropertyChanged("ARE")
				Me.OnAREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OF_PLACE", DbType:="NVarChar(MAX)")>  _
	Public Property OF_PLACE() As String
		Get
			Return Me._OF_PLACE
		End Get
		Set
			If (String.Equals(Me._OF_PLACE, value) = false) Then
				Me.OnOF_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._OF_PLACE = value
				Me.SendPropertyChanged("OF_PLACE")
				Me.OnOF_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PLACE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PLACE() As String
		Get
			Return Me._NAME_PLACE
		End Get
		Set
			If (String.Equals(Me._NAME_PLACE, value) = false) Then
				Me.OnNAME_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PLACE = value
				Me.SendPropertyChanged("NAME_PLACE")
				Me.OnNAME_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NO_ADD() As String
		Get
			Return Me._NO_ADD
		End Get
		Set
			If (String.Equals(Me._NO_ADD, value) = false) Then
				Me.OnNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NO_ADD = value
				Me.SendPropertyChanged("NO_ADD")
				Me.OnNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property SOI_ADD() As String
		Get
			Return Me._SOI_ADD
		End Get
		Set
			If (String.Equals(Me._SOI_ADD, value) = false) Then
				Me.OnSOI_ADDChanging(value)
				Me.SendPropertyChanging
				Me._SOI_ADD = value
				Me.SendPropertyChanged("SOI_ADD")
				Me.OnSOI_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TANON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TANON_ADD() As String
		Get
			Return Me._TANON_ADD
		End Get
		Set
			If (String.Equals(Me._TANON_ADD, value) = false) Then
				Me.OnTANON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TANON_ADD = value
				Me.SendPropertyChanged("TANON_ADD")
				Me.OnTANON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property MOO_ADD() As String
		Get
			Return Me._MOO_ADD
		End Get
		Set
			If (String.Equals(Me._MOO_ADD, value) = false) Then
				Me.OnMOO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._MOO_ADD = value
				Me.SendPropertyChanged("MOO_ADD")
				Me.OnMOO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property TUMBON_ADD() As String
		Get
			Return Me._TUMBON_ADD
		End Get
		Set
			If (String.Equals(Me._TUMBON_ADD, value) = false) Then
				Me.OnTUMBON_ADDChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ADD = value
				Me.SendPropertyChanged("TUMBON_ADD")
				Me.OnTUMBON_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ZIP_CODE() As String
		Get
			Return Me._ZIP_CODE
		End Get
		Set
			If (String.Equals(Me._ZIP_CODE, value) = false) Then
				Me.OnZIP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIP_CODE = value
				Me.SendPropertyChanged("ZIP_CODE")
				Me.OnZIP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACE_NEAR", DbType:="NVarChar(MAX)")>  _
	Public Property PLACE_NEAR() As String
		Get
			Return Me._PLACE_NEAR
		End Get
		Set
			If (String.Equals(Me._PLACE_NEAR, value) = false) Then
				Me.OnPLACE_NEARChanging(value)
				Me.SendPropertyChanging
				Me._PLACE_NEAR = value
				Me.SendPropertyChanged("PLACE_NEAR")
				Me.OnPLACE_NEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POLICE_AREA", DbType:="NVarChar(MAX)")>  _
	Public Property POLICE_AREA() As String
		Get
			Return Me._POLICE_AREA
		End Get
		Set
			If (String.Equals(Me._POLICE_AREA, value) = false) Then
				Me.OnPOLICE_AREAChanging(value)
				Me.SendPropertyChanging
				Me._POLICE_AREA = value
				Me.SendPropertyChanged("POLICE_AREA")
				Me.OnPOLICE_AREAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GIVE_TESTI", DbType:="NVarChar(MAX)")>  _
	Public Property GIVE_TESTI() As String
		Get
			Return Me._GIVE_TESTI
		End Get
		Set
			If (String.Equals(Me._GIVE_TESTI, value) = false) Then
				Me.OnGIVE_TESTIChanging(value)
				Me.SendPropertyChanging
				Me._GIVE_TESTI = value
				Me.SendPropertyChanged("GIVE_TESTI")
				Me.OnGIVE_TESTIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECORD_TESTI", DbType:="NVarChar(MAX)")>  _
	Public Property RECORD_TESTI() As String
		Get
			Return Me._RECORD_TESTI
		End Get
		Set
			If (String.Equals(Me._RECORD_TESTI, value) = false) Then
				Me.OnRECORD_TESTIChanging(value)
				Me.SendPropertyChanging
				Me._RECORD_TESTI = value
				Me.SendPropertyChanged("RECORD_TESTI")
				Me.OnRECORD_TESTIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GIVE_WORD", DbType:="NVarChar(MAX)")>  _
	Public Property GIVE_WORD() As String
		Get
			Return Me._GIVE_WORD
		End Get
		Set
			If (String.Equals(Me._GIVE_WORD, value) = false) Then
				Me.OnGIVE_WORDChanging(value)
				Me.SendPropertyChanging
				Me._GIVE_WORD = value
				Me.SendPropertyChanged("GIVE_WORD")
				Me.OnGIVE_WORDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIGN", DbType:="NVarChar(MAX)")>  _
	Public Property SIGN() As String
		Get
			Return Me._SIGN
		End Get
		Set
			If (String.Equals(Me._SIGN, value) = false) Then
				Me.OnSIGNChanging(value)
				Me.SendPropertyChanging
				Me._SIGN = value
				Me.SendPropertyChanged("SIGN")
				Me.OnSIGNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIGN2", DbType:="NVarChar(MAX)")>  _
	Public Property SIGN2() As String
		Get
			Return Me._SIGN2
		End Get
		Set
			If (String.Equals(Me._SIGN2, value) = false) Then
				Me.OnSIGN2Changing(value)
				Me.SendPropertyChanging
				Me._SIGN2 = value
				Me.SendPropertyChanged("SIGN2")
				Me.OnSIGN2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFFICAL", DbType:="NVarChar(MAX)")>  _
	Public Property OFFICAL() As String
		Get
			Return Me._OFFICAL
		End Get
		Set
			If (String.Equals(Me._OFFICAL, value) = false) Then
				Me.OnOFFICALChanging(value)
				Me.SendPropertyChanging
				Me._OFFICAL = value
				Me.SendPropertyChanged("OFFICAL")
				Me.OnOFFICALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFFICAL2", DbType:="NVarChar(MAX)")>  _
	Public Property OFFICAL2() As String
		Get
			Return Me._OFFICAL2
		End Get
		Set
			If (String.Equals(Me._OFFICAL2, value) = false) Then
				Me.OnOFFICAL2Changing(value)
				Me.SendPropertyChanging
				Me._OFFICAL2 = value
				Me.SendPropertyChanged("OFFICAL2")
				Me.OnOFFICAL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFFICAL3", DbType:="NVarChar(MAX)")>  _
	Public Property OFFICAL3() As String
		Get
			Return Me._OFFICAL3
		End Get
		Set
			If (String.Equals(Me._OFFICAL3, value) = false) Then
				Me.OnOFFICAL3Changing(value)
				Me.SendPropertyChanging
				Me._OFFICAL3 = value
				Me.SendPropertyChanged("OFFICAL3")
				Me.OnOFFICAL3Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_REPORT_CHECKGMP")>  _
Partial Public Class PDF_REPORT_CHECKGMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME_ADD As String
	
	Private _LOCATION As String
	
	Private _TELEPHONE As String
	
	Private _FAX As String
	
	Private _EMAIL As String
	
	Private _DATE_CHECK As System.Nullable(Of Date)
	
	Private _NAME_INSPEC As String
	
	Private _NAME_TEAM As String
	
	Private _NAME_CHECK As String
	
	Private _NAME_OBSERVER As String
	
	Private _REFERENCE As String
	
	Private _DRUG_LICENSEE As String
	
	Private _CER_ISO As String
	
	Private _LICENSEE_EXPORT As String
	
	Private _DATE_EXPIRED As System.Nullable(Of Date)
	
	Private _PERSONAL As String
	
	Private _PERMISES_EQUIPMENT As String
	
	Private _DOCUMENTATION As String
	
	Private _PRODUTION As String
	
	Private _QUALITY_CONTROL As String
	
	Private _CONTRACT_MANU As String
	
	Private _COMPLAINT_PRORECALL As String
	
	Private _SELF_INSPECTION As String
	
	Private _DISTRIBUTION_SHIMENT As String
	
	Private _DISTRIBUTION_SHIMENT2 As String
	
	Private _QUESTION As String
	
	Private _OTHER_SPECIFIC As String
	
	Private _SITE_MASTER_FILE As String
	
	Private _DRUG_COLLECTION As String
	
	Private _REPORT_GMP As String
	
	Private _DOC_REPORT As String
	
	Private _DOC_REPORT2 As String
	
	Private _CRITICAL_DEFICIEN As String
	
	Private _MAJOR_DEFICIEN As String
	
	Private _MINOR_DEFICIEN As String
	
	Private _MINOR_DEFICIEN2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAME_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDChanged()
    End Sub
    Partial Private Sub OnLOCATIONChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATIONChanged()
    End Sub
    Partial Private Sub OnTELEPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnTELEPHONEChanged()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnDATE_CHECKChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CHECKChanged()
    End Sub
    Partial Private Sub OnNAME_INSPECChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_INSPECChanged()
    End Sub
    Partial Private Sub OnNAME_TEAMChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_TEAMChanged()
    End Sub
    Partial Private Sub OnNAME_CHECKChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_CHECKChanged()
    End Sub
    Partial Private Sub OnNAME_OBSERVERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OBSERVERChanged()
    End Sub
    Partial Private Sub OnREFERENCEChanging(value As String)
    End Sub
    Partial Private Sub OnREFERENCEChanged()
    End Sub
    Partial Private Sub OnDRUG_LICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_LICENSEEChanged()
    End Sub
    Partial Private Sub OnCER_ISOChanging(value As String)
    End Sub
    Partial Private Sub OnCER_ISOChanged()
    End Sub
    Partial Private Sub OnLICENSEE_EXPORTChanging(value As String)
    End Sub
    Partial Private Sub OnLICENSEE_EXPORTChanged()
    End Sub
    Partial Private Sub OnDATE_EXPIREDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_EXPIREDChanged()
    End Sub
    Partial Private Sub OnPERSONALChanging(value As String)
    End Sub
    Partial Private Sub OnPERSONALChanged()
    End Sub
    Partial Private Sub OnPERMISES_EQUIPMENTChanging(value As String)
    End Sub
    Partial Private Sub OnPERMISES_EQUIPMENTChanged()
    End Sub
    Partial Private Sub OnDOCUMENTATIONChanging(value As String)
    End Sub
    Partial Private Sub OnDOCUMENTATIONChanged()
    End Sub
    Partial Private Sub OnPRODUTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUTIONChanged()
    End Sub
    Partial Private Sub OnQUALITY_CONTROLChanging(value As String)
    End Sub
    Partial Private Sub OnQUALITY_CONTROLChanged()
    End Sub
    Partial Private Sub OnCONTRACT_MANUChanging(value As String)
    End Sub
    Partial Private Sub OnCONTRACT_MANUChanged()
    End Sub
    Partial Private Sub OnCOMPLAINT_PRORECALLChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPLAINT_PRORECALLChanged()
    End Sub
    Partial Private Sub OnSELF_INSPECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnSELF_INSPECTIONChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTION_SHIMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRIBUTION_SHIMENTChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTION_SHIMENT2Changing(value As String)
    End Sub
    Partial Private Sub OnDISTRIBUTION_SHIMENT2Changed()
    End Sub
    Partial Private Sub OnQUESTIONChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTIONChanged()
    End Sub
    Partial Private Sub OnOTHER_SPECIFICChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_SPECIFICChanged()
    End Sub
    Partial Private Sub OnSITE_MASTER_FILEChanging(value As String)
    End Sub
    Partial Private Sub OnSITE_MASTER_FILEChanged()
    End Sub
    Partial Private Sub OnDRUG_COLLECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_COLLECTIONChanged()
    End Sub
    Partial Private Sub OnREPORT_GMPChanging(value As String)
    End Sub
    Partial Private Sub OnREPORT_GMPChanged()
    End Sub
    Partial Private Sub OnDOC_REPORTChanging(value As String)
    End Sub
    Partial Private Sub OnDOC_REPORTChanged()
    End Sub
    Partial Private Sub OnDOC_REPORT2Changing(value As String)
    End Sub
    Partial Private Sub OnDOC_REPORT2Changed()
    End Sub
    Partial Private Sub OnCRITICAL_DEFICIENChanging(value As String)
    End Sub
    Partial Private Sub OnCRITICAL_DEFICIENChanged()
    End Sub
    Partial Private Sub OnMAJOR_DEFICIENChanging(value As String)
    End Sub
    Partial Private Sub OnMAJOR_DEFICIENChanged()
    End Sub
    Partial Private Sub OnMINOR_DEFICIENChanging(value As String)
    End Sub
    Partial Private Sub OnMINOR_DEFICIENChanged()
    End Sub
    Partial Private Sub OnMINOR_DEFICIEN2Changing(value As String)
    End Sub
    Partial Private Sub OnMINOR_DEFICIEN2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADD", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADD() As String
		Get
			Return Me._NAME_ADD
		End Get
		Set
			If (String.Equals(Me._NAME_ADD, value) = false) Then
				Me.OnNAME_ADDChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADD = value
				Me.SendPropertyChanged("NAME_ADD")
				Me.OnNAME_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION() As String
		Get
			Return Me._LOCATION
		End Get
		Set
			If (String.Equals(Me._LOCATION, value) = false) Then
				Me.OnLOCATIONChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION = value
				Me.SendPropertyChanged("LOCATION")
				Me.OnLOCATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TELEPHONE", DbType:="NVarChar(MAX)")>  _
	Public Property TELEPHONE() As String
		Get
			Return Me._TELEPHONE
		End Get
		Set
			If (String.Equals(Me._TELEPHONE, value) = false) Then
				Me.OnTELEPHONEChanging(value)
				Me.SendPropertyChanging
				Me._TELEPHONE = value
				Me.SendPropertyChanged("TELEPHONE")
				Me.OnTELEPHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="NVarChar(MAX)")>  _
	Public Property FAX() As String
		Get
			Return Me._FAX
		End Get
		Set
			If (String.Equals(Me._FAX, value) = false) Then
				Me.OnFAXChanging(value)
				Me.SendPropertyChanging
				Me._FAX = value
				Me.SendPropertyChanged("FAX")
				Me.OnFAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CHECK", DbType:="DateTime")>  _
	Public Property DATE_CHECK() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CHECK
		End Get
		Set
			If (Me._DATE_CHECK.Equals(value) = false) Then
				Me.OnDATE_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._DATE_CHECK = value
				Me.SendPropertyChanged("DATE_CHECK")
				Me.OnDATE_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_INSPEC", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_INSPEC() As String
		Get
			Return Me._NAME_INSPEC
		End Get
		Set
			If (String.Equals(Me._NAME_INSPEC, value) = false) Then
				Me.OnNAME_INSPECChanging(value)
				Me.SendPropertyChanging
				Me._NAME_INSPEC = value
				Me.SendPropertyChanged("NAME_INSPEC")
				Me.OnNAME_INSPECChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_TEAM", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_TEAM() As String
		Get
			Return Me._NAME_TEAM
		End Get
		Set
			If (String.Equals(Me._NAME_TEAM, value) = false) Then
				Me.OnNAME_TEAMChanging(value)
				Me.SendPropertyChanging
				Me._NAME_TEAM = value
				Me.SendPropertyChanged("NAME_TEAM")
				Me.OnNAME_TEAMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_CHECK", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_CHECK() As String
		Get
			Return Me._NAME_CHECK
		End Get
		Set
			If (String.Equals(Me._NAME_CHECK, value) = false) Then
				Me.OnNAME_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._NAME_CHECK = value
				Me.SendPropertyChanged("NAME_CHECK")
				Me.OnNAME_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OBSERVER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OBSERVER() As String
		Get
			Return Me._NAME_OBSERVER
		End Get
		Set
			If (String.Equals(Me._NAME_OBSERVER, value) = false) Then
				Me.OnNAME_OBSERVERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OBSERVER = value
				Me.SendPropertyChanged("NAME_OBSERVER")
				Me.OnNAME_OBSERVERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFERENCE", DbType:="NVarChar(MAX)")>  _
	Public Property REFERENCE() As String
		Get
			Return Me._REFERENCE
		End Get
		Set
			If (String.Equals(Me._REFERENCE, value) = false) Then
				Me.OnREFERENCEChanging(value)
				Me.SendPropertyChanging
				Me._REFERENCE = value
				Me.SendPropertyChanged("REFERENCE")
				Me.OnREFERENCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_LICENSEE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_LICENSEE() As String
		Get
			Return Me._DRUG_LICENSEE
		End Get
		Set
			If (String.Equals(Me._DRUG_LICENSEE, value) = false) Then
				Me.OnDRUG_LICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_LICENSEE = value
				Me.SendPropertyChanged("DRUG_LICENSEE")
				Me.OnDRUG_LICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_ISO", DbType:="NVarChar(MAX)")>  _
	Public Property CER_ISO() As String
		Get
			Return Me._CER_ISO
		End Get
		Set
			If (String.Equals(Me._CER_ISO, value) = false) Then
				Me.OnCER_ISOChanging(value)
				Me.SendPropertyChanging
				Me._CER_ISO = value
				Me.SendPropertyChanged("CER_ISO")
				Me.OnCER_ISOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICENSEE_EXPORT", DbType:="NVarChar(MAX)")>  _
	Public Property LICENSEE_EXPORT() As String
		Get
			Return Me._LICENSEE_EXPORT
		End Get
		Set
			If (String.Equals(Me._LICENSEE_EXPORT, value) = false) Then
				Me.OnLICENSEE_EXPORTChanging(value)
				Me.SendPropertyChanging
				Me._LICENSEE_EXPORT = value
				Me.SendPropertyChanged("LICENSEE_EXPORT")
				Me.OnLICENSEE_EXPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_EXPIRED", DbType:="DateTime")>  _
	Public Property DATE_EXPIRED() As System.Nullable(Of Date)
		Get
			Return Me._DATE_EXPIRED
		End Get
		Set
			If (Me._DATE_EXPIRED.Equals(value) = false) Then
				Me.OnDATE_EXPIREDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_EXPIRED = value
				Me.SendPropertyChanged("DATE_EXPIRED")
				Me.OnDATE_EXPIREDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSONAL", DbType:="NVarChar(MAX)")>  _
	Public Property PERSONAL() As String
		Get
			Return Me._PERSONAL
		End Get
		Set
			If (String.Equals(Me._PERSONAL, value) = false) Then
				Me.OnPERSONALChanging(value)
				Me.SendPropertyChanging
				Me._PERSONAL = value
				Me.SendPropertyChanged("PERSONAL")
				Me.OnPERSONALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMISES_EQUIPMENT", DbType:="NVarChar(MAX)")>  _
	Public Property PERMISES_EQUIPMENT() As String
		Get
			Return Me._PERMISES_EQUIPMENT
		End Get
		Set
			If (String.Equals(Me._PERMISES_EQUIPMENT, value) = false) Then
				Me.OnPERMISES_EQUIPMENTChanging(value)
				Me.SendPropertyChanging
				Me._PERMISES_EQUIPMENT = value
				Me.SendPropertyChanged("PERMISES_EQUIPMENT")
				Me.OnPERMISES_EQUIPMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENTATION", DbType:="NVarChar(MAX)")>  _
	Public Property DOCUMENTATION() As String
		Get
			Return Me._DOCUMENTATION
		End Get
		Set
			If (String.Equals(Me._DOCUMENTATION, value) = false) Then
				Me.OnDOCUMENTATIONChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENTATION = value
				Me.SendPropertyChanged("DOCUMENTATION")
				Me.OnDOCUMENTATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUTION", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUTION() As String
		Get
			Return Me._PRODUTION
		End Get
		Set
			If (String.Equals(Me._PRODUTION, value) = false) Then
				Me.OnPRODUTIONChanging(value)
				Me.SendPropertyChanging
				Me._PRODUTION = value
				Me.SendPropertyChanged("PRODUTION")
				Me.OnPRODUTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUALITY_CONTROL", DbType:="NVarChar(MAX)")>  _
	Public Property QUALITY_CONTROL() As String
		Get
			Return Me._QUALITY_CONTROL
		End Get
		Set
			If (String.Equals(Me._QUALITY_CONTROL, value) = false) Then
				Me.OnQUALITY_CONTROLChanging(value)
				Me.SendPropertyChanging
				Me._QUALITY_CONTROL = value
				Me.SendPropertyChanged("QUALITY_CONTROL")
				Me.OnQUALITY_CONTROLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRACT_MANU", DbType:="NVarChar(MAX)")>  _
	Public Property CONTRACT_MANU() As String
		Get
			Return Me._CONTRACT_MANU
		End Get
		Set
			If (String.Equals(Me._CONTRACT_MANU, value) = false) Then
				Me.OnCONTRACT_MANUChanging(value)
				Me.SendPropertyChanging
				Me._CONTRACT_MANU = value
				Me.SendPropertyChanged("CONTRACT_MANU")
				Me.OnCONTRACT_MANUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPLAINT_PRORECALL", DbType:="NVarChar(MAX)")>  _
	Public Property COMPLAINT_PRORECALL() As String
		Get
			Return Me._COMPLAINT_PRORECALL
		End Get
		Set
			If (String.Equals(Me._COMPLAINT_PRORECALL, value) = false) Then
				Me.OnCOMPLAINT_PRORECALLChanging(value)
				Me.SendPropertyChanging
				Me._COMPLAINT_PRORECALL = value
				Me.SendPropertyChanged("COMPLAINT_PRORECALL")
				Me.OnCOMPLAINT_PRORECALLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SELF_INSPECTION", DbType:="NVarChar(MAX)")>  _
	Public Property SELF_INSPECTION() As String
		Get
			Return Me._SELF_INSPECTION
		End Get
		Set
			If (String.Equals(Me._SELF_INSPECTION, value) = false) Then
				Me.OnSELF_INSPECTIONChanging(value)
				Me.SendPropertyChanging
				Me._SELF_INSPECTION = value
				Me.SendPropertyChanged("SELF_INSPECTION")
				Me.OnSELF_INSPECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTION_SHIMENT", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRIBUTION_SHIMENT() As String
		Get
			Return Me._DISTRIBUTION_SHIMENT
		End Get
		Set
			If (String.Equals(Me._DISTRIBUTION_SHIMENT, value) = false) Then
				Me.OnDISTRIBUTION_SHIMENTChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTION_SHIMENT = value
				Me.SendPropertyChanged("DISTRIBUTION_SHIMENT")
				Me.OnDISTRIBUTION_SHIMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTION_SHIMENT2", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRIBUTION_SHIMENT2() As String
		Get
			Return Me._DISTRIBUTION_SHIMENT2
		End Get
		Set
			If (String.Equals(Me._DISTRIBUTION_SHIMENT2, value) = false) Then
				Me.OnDISTRIBUTION_SHIMENT2Changing(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTION_SHIMENT2 = value
				Me.SendPropertyChanged("DISTRIBUTION_SHIMENT2")
				Me.OnDISTRIBUTION_SHIMENT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTION() As String
		Get
			Return Me._QUESTION
		End Get
		Set
			If (String.Equals(Me._QUESTION, value) = false) Then
				Me.OnQUESTIONChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION = value
				Me.SendPropertyChanged("QUESTION")
				Me.OnQUESTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_SPECIFIC", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_SPECIFIC() As String
		Get
			Return Me._OTHER_SPECIFIC
		End Get
		Set
			If (String.Equals(Me._OTHER_SPECIFIC, value) = false) Then
				Me.OnOTHER_SPECIFICChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_SPECIFIC = value
				Me.SendPropertyChanged("OTHER_SPECIFIC")
				Me.OnOTHER_SPECIFICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SITE_MASTER_FILE", DbType:="NVarChar(MAX)")>  _
	Public Property SITE_MASTER_FILE() As String
		Get
			Return Me._SITE_MASTER_FILE
		End Get
		Set
			If (String.Equals(Me._SITE_MASTER_FILE, value) = false) Then
				Me.OnSITE_MASTER_FILEChanging(value)
				Me.SendPropertyChanging
				Me._SITE_MASTER_FILE = value
				Me.SendPropertyChanged("SITE_MASTER_FILE")
				Me.OnSITE_MASTER_FILEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_COLLECTION", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_COLLECTION() As String
		Get
			Return Me._DRUG_COLLECTION
		End Get
		Set
			If (String.Equals(Me._DRUG_COLLECTION, value) = false) Then
				Me.OnDRUG_COLLECTIONChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_COLLECTION = value
				Me.SendPropertyChanged("DRUG_COLLECTION")
				Me.OnDRUG_COLLECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT_GMP", DbType:="NVarChar(MAX)")>  _
	Public Property REPORT_GMP() As String
		Get
			Return Me._REPORT_GMP
		End Get
		Set
			If (String.Equals(Me._REPORT_GMP, value) = false) Then
				Me.OnREPORT_GMPChanging(value)
				Me.SendPropertyChanging
				Me._REPORT_GMP = value
				Me.SendPropertyChanged("REPORT_GMP")
				Me.OnREPORT_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_REPORT", DbType:="NVarChar(MAX)")>  _
	Public Property DOC_REPORT() As String
		Get
			Return Me._DOC_REPORT
		End Get
		Set
			If (String.Equals(Me._DOC_REPORT, value) = false) Then
				Me.OnDOC_REPORTChanging(value)
				Me.SendPropertyChanging
				Me._DOC_REPORT = value
				Me.SendPropertyChanged("DOC_REPORT")
				Me.OnDOC_REPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_REPORT2", DbType:="NVarChar(MAX)")>  _
	Public Property DOC_REPORT2() As String
		Get
			Return Me._DOC_REPORT2
		End Get
		Set
			If (String.Equals(Me._DOC_REPORT2, value) = false) Then
				Me.OnDOC_REPORT2Changing(value)
				Me.SendPropertyChanging
				Me._DOC_REPORT2 = value
				Me.SendPropertyChanged("DOC_REPORT2")
				Me.OnDOC_REPORT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRITICAL_DEFICIEN", DbType:="NVarChar(MAX)")>  _
	Public Property CRITICAL_DEFICIEN() As String
		Get
			Return Me._CRITICAL_DEFICIEN
		End Get
		Set
			If (String.Equals(Me._CRITICAL_DEFICIEN, value) = false) Then
				Me.OnCRITICAL_DEFICIENChanging(value)
				Me.SendPropertyChanging
				Me._CRITICAL_DEFICIEN = value
				Me.SendPropertyChanged("CRITICAL_DEFICIEN")
				Me.OnCRITICAL_DEFICIENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAJOR_DEFICIEN", DbType:="NVarChar(MAX)")>  _
	Public Property MAJOR_DEFICIEN() As String
		Get
			Return Me._MAJOR_DEFICIEN
		End Get
		Set
			If (String.Equals(Me._MAJOR_DEFICIEN, value) = false) Then
				Me.OnMAJOR_DEFICIENChanging(value)
				Me.SendPropertyChanging
				Me._MAJOR_DEFICIEN = value
				Me.SendPropertyChanged("MAJOR_DEFICIEN")
				Me.OnMAJOR_DEFICIENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MINOR_DEFICIEN", DbType:="NVarChar(MAX)")>  _
	Public Property MINOR_DEFICIEN() As String
		Get
			Return Me._MINOR_DEFICIEN
		End Get
		Set
			If (String.Equals(Me._MINOR_DEFICIEN, value) = false) Then
				Me.OnMINOR_DEFICIENChanging(value)
				Me.SendPropertyChanging
				Me._MINOR_DEFICIEN = value
				Me.SendPropertyChanged("MINOR_DEFICIEN")
				Me.OnMINOR_DEFICIENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MINOR_DEFICIEN2", DbType:="NVarChar(MAX)")>  _
	Public Property MINOR_DEFICIEN2() As String
		Get
			Return Me._MINOR_DEFICIEN2
		End Get
		Set
			If (String.Equals(Me._MINOR_DEFICIEN2, value) = false) Then
				Me.OnMINOR_DEFICIEN2Changing(value)
				Me.SendPropertyChanging
				Me._MINOR_DEFICIEN2 = value
				Me.SendPropertyChanged("MINOR_DEFICIEN2")
				Me.OnMINOR_DEFICIEN2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_REPORT_DRUGCHARGED")>  _
Partial Public Class PDF_REPORT_DRUGCHARGED
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME_IMPORTDRUG As String
	
	Private _NAME_LICENSEE As String
	
	Private _LICENSE As String
	
	Private _NAME_DRUG As String
	
	Private _NUMBER_REGISTRATION As String
	
	Private _NAME_COMMON As String
	
	Private _FOMAT As String
	
	Private _NUMBER_LOT As String
	
	Private _DATE_MANUFACTURE As System.Nullable(Of Date)
	
	Private _DATE_EXPIREDDRUG As String
	
	Private _TOTAL_MAN_IM As String
	
	Private _SIZE_CONTAIN As String
	
	Private _SIZE_CONTAIN2 As String
	
	Private _SIZE_CONTAIN3 As String
	
	Private _NUM_SPEC_SIZE As String
	
	Private _NUM_SPEC_SIZE2 As String
	
	Private _NUM_SPEC_SIZE3 As String
	
	Private _PERCENT_EXDRUG As String
	
	Private _NUM_SPEC_SIZE_SALE As String
	
	Private _PERCENT_EXDRUG2 As String
	
	Private _NUM_SPEC_SIZE_PLACE As String
	
	Private _PERCENT_EXDRUG3 As String
	
	Private _NUM_SPEC_SIZE_RE As String
	
	Private _PERCENT_EXDRUG4 As String
	
	Private _DATE As System.Nullable(Of Date)
	
	Private _NAME_CONFIRM As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAME_IMPORTDRUGChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_IMPORTDRUGChanged()
    End Sub
    Partial Private Sub OnNAME_LICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_LICENSEEChanged()
    End Sub
    Partial Private Sub OnLICENSEChanging(value As String)
    End Sub
    Partial Private Sub OnLICENSEChanged()
    End Sub
    Partial Private Sub OnNAME_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_DRUGChanged()
    End Sub
    Partial Private Sub OnNUMBER_REGISTRATIONChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_REGISTRATIONChanged()
    End Sub
    Partial Private Sub OnNAME_COMMONChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_COMMONChanged()
    End Sub
    Partial Private Sub OnFOMATChanging(value As String)
    End Sub
    Partial Private Sub OnFOMATChanged()
    End Sub
    Partial Private Sub OnNUMBER_LOTChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_LOTChanged()
    End Sub
    Partial Private Sub OnDATE_MANUFACTUREChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_MANUFACTUREChanged()
    End Sub
    Partial Private Sub OnDATE_EXPIREDDRUGChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_EXPIREDDRUGChanged()
    End Sub
    Partial Private Sub OnTOTAL_MAN_IMChanging(value As String)
    End Sub
    Partial Private Sub OnTOTAL_MAN_IMChanged()
    End Sub
    Partial Private Sub OnSIZE_CONTAINChanging(value As String)
    End Sub
    Partial Private Sub OnSIZE_CONTAINChanged()
    End Sub
    Partial Private Sub OnSIZE_CONTAIN2Changing(value As String)
    End Sub
    Partial Private Sub OnSIZE_CONTAIN2Changed()
    End Sub
    Partial Private Sub OnSIZE_CONTAIN3Changing(value As String)
    End Sub
    Partial Private Sub OnSIZE_CONTAIN3Changed()
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZEChanging(value As String)
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZEChanged()
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZE2Changing(value As String)
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZE2Changed()
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZE3Changing(value As String)
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZE3Changed()
    End Sub
    Partial Private Sub OnPERCENT_EXDRUGChanging(value As String)
    End Sub
    Partial Private Sub OnPERCENT_EXDRUGChanged()
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZE_SALEChanging(value As String)
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZE_SALEChanged()
    End Sub
    Partial Private Sub OnPERCENT_EXDRUG2Changing(value As String)
    End Sub
    Partial Private Sub OnPERCENT_EXDRUG2Changed()
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZE_PLACEChanging(value As String)
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZE_PLACEChanged()
    End Sub
    Partial Private Sub OnPERCENT_EXDRUG3Changing(value As String)
    End Sub
    Partial Private Sub OnPERCENT_EXDRUG3Changed()
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZE_REChanging(value As String)
    End Sub
    Partial Private Sub OnNUM_SPEC_SIZE_REChanged()
    End Sub
    Partial Private Sub OnPERCENT_EXDRUG4Changing(value As String)
    End Sub
    Partial Private Sub OnPERCENT_EXDRUG4Changed()
    End Sub
    Partial Private Sub OnDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    Partial Private Sub OnNAME_CONFIRMChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_CONFIRMChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_IMPORTDRUG", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_IMPORTDRUG() As String
		Get
			Return Me._NAME_IMPORTDRUG
		End Get
		Set
			If (String.Equals(Me._NAME_IMPORTDRUG, value) = false) Then
				Me.OnNAME_IMPORTDRUGChanging(value)
				Me.SendPropertyChanging
				Me._NAME_IMPORTDRUG = value
				Me.SendPropertyChanged("NAME_IMPORTDRUG")
				Me.OnNAME_IMPORTDRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_LICENSEE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_LICENSEE() As String
		Get
			Return Me._NAME_LICENSEE
		End Get
		Set
			If (String.Equals(Me._NAME_LICENSEE, value) = false) Then
				Me.OnNAME_LICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_LICENSEE = value
				Me.SendPropertyChanged("NAME_LICENSEE")
				Me.OnNAME_LICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICENSE", DbType:="NVarChar(MAX)")>  _
	Public Property LICENSE() As String
		Get
			Return Me._LICENSE
		End Get
		Set
			If (String.Equals(Me._LICENSE, value) = false) Then
				Me.OnLICENSEChanging(value)
				Me.SendPropertyChanging
				Me._LICENSE = value
				Me.SendPropertyChanged("LICENSE")
				Me.OnLICENSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_DRUG() As String
		Get
			Return Me._NAME_DRUG
		End Get
		Set
			If (String.Equals(Me._NAME_DRUG, value) = false) Then
				Me.OnNAME_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._NAME_DRUG = value
				Me.SendPropertyChanged("NAME_DRUG")
				Me.OnNAME_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_REGISTRATION", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_REGISTRATION() As String
		Get
			Return Me._NUMBER_REGISTRATION
		End Get
		Set
			If (String.Equals(Me._NUMBER_REGISTRATION, value) = false) Then
				Me.OnNUMBER_REGISTRATIONChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_REGISTRATION = value
				Me.SendPropertyChanged("NUMBER_REGISTRATION")
				Me.OnNUMBER_REGISTRATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_COMMON", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_COMMON() As String
		Get
			Return Me._NAME_COMMON
		End Get
		Set
			If (String.Equals(Me._NAME_COMMON, value) = false) Then
				Me.OnNAME_COMMONChanging(value)
				Me.SendPropertyChanging
				Me._NAME_COMMON = value
				Me.SendPropertyChanged("NAME_COMMON")
				Me.OnNAME_COMMONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOMAT", DbType:="NVarChar(MAX)")>  _
	Public Property FOMAT() As String
		Get
			Return Me._FOMAT
		End Get
		Set
			If (String.Equals(Me._FOMAT, value) = false) Then
				Me.OnFOMATChanging(value)
				Me.SendPropertyChanging
				Me._FOMAT = value
				Me.SendPropertyChanged("FOMAT")
				Me.OnFOMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_LOT", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_LOT() As String
		Get
			Return Me._NUMBER_LOT
		End Get
		Set
			If (String.Equals(Me._NUMBER_LOT, value) = false) Then
				Me.OnNUMBER_LOTChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_LOT = value
				Me.SendPropertyChanged("NUMBER_LOT")
				Me.OnNUMBER_LOTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_MANUFACTURE", DbType:="DateTime")>  _
	Public Property DATE_MANUFACTURE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_MANUFACTURE
		End Get
		Set
			If (Me._DATE_MANUFACTURE.Equals(value) = false) Then
				Me.OnDATE_MANUFACTUREChanging(value)
				Me.SendPropertyChanging
				Me._DATE_MANUFACTURE = value
				Me.SendPropertyChanged("DATE_MANUFACTURE")
				Me.OnDATE_MANUFACTUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_EXPIREDDRUG", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_EXPIREDDRUG() As String
		Get
			Return Me._DATE_EXPIREDDRUG
		End Get
		Set
			If (String.Equals(Me._DATE_EXPIREDDRUG, value) = false) Then
				Me.OnDATE_EXPIREDDRUGChanging(value)
				Me.SendPropertyChanging
				Me._DATE_EXPIREDDRUG = value
				Me.SendPropertyChanged("DATE_EXPIREDDRUG")
				Me.OnDATE_EXPIREDDRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOTAL_MAN_IM", DbType:="NVarChar(MAX)")>  _
	Public Property TOTAL_MAN_IM() As String
		Get
			Return Me._TOTAL_MAN_IM
		End Get
		Set
			If (String.Equals(Me._TOTAL_MAN_IM, value) = false) Then
				Me.OnTOTAL_MAN_IMChanging(value)
				Me.SendPropertyChanging
				Me._TOTAL_MAN_IM = value
				Me.SendPropertyChanged("TOTAL_MAN_IM")
				Me.OnTOTAL_MAN_IMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_CONTAIN", DbType:="NVarChar(MAX)")>  _
	Public Property SIZE_CONTAIN() As String
		Get
			Return Me._SIZE_CONTAIN
		End Get
		Set
			If (String.Equals(Me._SIZE_CONTAIN, value) = false) Then
				Me.OnSIZE_CONTAINChanging(value)
				Me.SendPropertyChanging
				Me._SIZE_CONTAIN = value
				Me.SendPropertyChanged("SIZE_CONTAIN")
				Me.OnSIZE_CONTAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_CONTAIN2", DbType:="NVarChar(MAX)")>  _
	Public Property SIZE_CONTAIN2() As String
		Get
			Return Me._SIZE_CONTAIN2
		End Get
		Set
			If (String.Equals(Me._SIZE_CONTAIN2, value) = false) Then
				Me.OnSIZE_CONTAIN2Changing(value)
				Me.SendPropertyChanging
				Me._SIZE_CONTAIN2 = value
				Me.SendPropertyChanged("SIZE_CONTAIN2")
				Me.OnSIZE_CONTAIN2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_CONTAIN3", DbType:="NVarChar(MAX)")>  _
	Public Property SIZE_CONTAIN3() As String
		Get
			Return Me._SIZE_CONTAIN3
		End Get
		Set
			If (String.Equals(Me._SIZE_CONTAIN3, value) = false) Then
				Me.OnSIZE_CONTAIN3Changing(value)
				Me.SendPropertyChanging
				Me._SIZE_CONTAIN3 = value
				Me.SendPropertyChanged("SIZE_CONTAIN3")
				Me.OnSIZE_CONTAIN3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM_SPEC_SIZE", DbType:="NVarChar(MAX)")>  _
	Public Property NUM_SPEC_SIZE() As String
		Get
			Return Me._NUM_SPEC_SIZE
		End Get
		Set
			If (String.Equals(Me._NUM_SPEC_SIZE, value) = false) Then
				Me.OnNUM_SPEC_SIZEChanging(value)
				Me.SendPropertyChanging
				Me._NUM_SPEC_SIZE = value
				Me.SendPropertyChanged("NUM_SPEC_SIZE")
				Me.OnNUM_SPEC_SIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM_SPEC_SIZE2", DbType:="NVarChar(MAX)")>  _
	Public Property NUM_SPEC_SIZE2() As String
		Get
			Return Me._NUM_SPEC_SIZE2
		End Get
		Set
			If (String.Equals(Me._NUM_SPEC_SIZE2, value) = false) Then
				Me.OnNUM_SPEC_SIZE2Changing(value)
				Me.SendPropertyChanging
				Me._NUM_SPEC_SIZE2 = value
				Me.SendPropertyChanged("NUM_SPEC_SIZE2")
				Me.OnNUM_SPEC_SIZE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM_SPEC_SIZE3", DbType:="NVarChar(MAX)")>  _
	Public Property NUM_SPEC_SIZE3() As String
		Get
			Return Me._NUM_SPEC_SIZE3
		End Get
		Set
			If (String.Equals(Me._NUM_SPEC_SIZE3, value) = false) Then
				Me.OnNUM_SPEC_SIZE3Changing(value)
				Me.SendPropertyChanging
				Me._NUM_SPEC_SIZE3 = value
				Me.SendPropertyChanged("NUM_SPEC_SIZE3")
				Me.OnNUM_SPEC_SIZE3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERCENT_EXDRUG", DbType:="NVarChar(MAX)")>  _
	Public Property PERCENT_EXDRUG() As String
		Get
			Return Me._PERCENT_EXDRUG
		End Get
		Set
			If (String.Equals(Me._PERCENT_EXDRUG, value) = false) Then
				Me.OnPERCENT_EXDRUGChanging(value)
				Me.SendPropertyChanging
				Me._PERCENT_EXDRUG = value
				Me.SendPropertyChanged("PERCENT_EXDRUG")
				Me.OnPERCENT_EXDRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM_SPEC_SIZE_SALE", DbType:="NVarChar(MAX)")>  _
	Public Property NUM_SPEC_SIZE_SALE() As String
		Get
			Return Me._NUM_SPEC_SIZE_SALE
		End Get
		Set
			If (String.Equals(Me._NUM_SPEC_SIZE_SALE, value) = false) Then
				Me.OnNUM_SPEC_SIZE_SALEChanging(value)
				Me.SendPropertyChanging
				Me._NUM_SPEC_SIZE_SALE = value
				Me.SendPropertyChanged("NUM_SPEC_SIZE_SALE")
				Me.OnNUM_SPEC_SIZE_SALEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERCENT_EXDRUG2", DbType:="NVarChar(MAX)")>  _
	Public Property PERCENT_EXDRUG2() As String
		Get
			Return Me._PERCENT_EXDRUG2
		End Get
		Set
			If (String.Equals(Me._PERCENT_EXDRUG2, value) = false) Then
				Me.OnPERCENT_EXDRUG2Changing(value)
				Me.SendPropertyChanging
				Me._PERCENT_EXDRUG2 = value
				Me.SendPropertyChanged("PERCENT_EXDRUG2")
				Me.OnPERCENT_EXDRUG2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM_SPEC_SIZE_PLACE", DbType:="NVarChar(MAX)")>  _
	Public Property NUM_SPEC_SIZE_PLACE() As String
		Get
			Return Me._NUM_SPEC_SIZE_PLACE
		End Get
		Set
			If (String.Equals(Me._NUM_SPEC_SIZE_PLACE, value) = false) Then
				Me.OnNUM_SPEC_SIZE_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._NUM_SPEC_SIZE_PLACE = value
				Me.SendPropertyChanged("NUM_SPEC_SIZE_PLACE")
				Me.OnNUM_SPEC_SIZE_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERCENT_EXDRUG3", DbType:="NVarChar(MAX)")>  _
	Public Property PERCENT_EXDRUG3() As String
		Get
			Return Me._PERCENT_EXDRUG3
		End Get
		Set
			If (String.Equals(Me._PERCENT_EXDRUG3, value) = false) Then
				Me.OnPERCENT_EXDRUG3Changing(value)
				Me.SendPropertyChanging
				Me._PERCENT_EXDRUG3 = value
				Me.SendPropertyChanged("PERCENT_EXDRUG3")
				Me.OnPERCENT_EXDRUG3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM_SPEC_SIZE_RE", DbType:="NVarChar(MAX)")>  _
	Public Property NUM_SPEC_SIZE_RE() As String
		Get
			Return Me._NUM_SPEC_SIZE_RE
		End Get
		Set
			If (String.Equals(Me._NUM_SPEC_SIZE_RE, value) = false) Then
				Me.OnNUM_SPEC_SIZE_REChanging(value)
				Me.SendPropertyChanging
				Me._NUM_SPEC_SIZE_RE = value
				Me.SendPropertyChanged("NUM_SPEC_SIZE_RE")
				Me.OnNUM_SPEC_SIZE_REChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERCENT_EXDRUG4", DbType:="NVarChar(MAX)")>  _
	Public Property PERCENT_EXDRUG4() As String
		Get
			Return Me._PERCENT_EXDRUG4
		End Get
		Set
			If (String.Equals(Me._PERCENT_EXDRUG4, value) = false) Then
				Me.OnPERCENT_EXDRUG4Changing(value)
				Me.SendPropertyChanging
				Me._PERCENT_EXDRUG4 = value
				Me.SendPropertyChanged("PERCENT_EXDRUG4")
				Me.OnPERCENT_EXDRUG4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="DateTime")>  _
	Public Property [DATE]() As System.Nullable(Of Date)
		Get
			Return Me._DATE
		End Get
		Set
			If (Me._DATE.Equals(value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_CONFIRM", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_CONFIRM() As String
		Get
			Return Me._NAME_CONFIRM
		End Get
		Set
			If (String.Equals(Me._NAME_CONFIRM, value) = false) Then
				Me.OnNAME_CONFIRMChanging(value)
				Me.SendPropertyChanging
				Me._NAME_CONFIRM = value
				Me.SendPropertyChanged("NAME_CONFIRM")
				Me.OnNAME_CONFIRMChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PDF_RISKASSESSMENT")>  _
Partial Public Class PDF_RISKASSESSMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME_PRODUCER As String
	
	Private _LOCATION_PRODUCER As String
	
	Private _NUMBER_LICENSEE As String
	
	Private _SCOPE_CHECK As String
	
	Private _DATE_CHECK As System.Nullable(Of Date)
	
	Private _NAME_LEADER As String
	
	Private _COMPLEXITY As System.Nullable(Of Integer)
	
	Private _CRITICALITY As System.Nullable(Of Integer)
	
	Private _RATE_RICK As String
	
	Private _FIND_SERIOUS As String
	
	Private _FIND_IMPORTANT_RE As String
	
	Private _FIND_IMPORTANT As String
	
	Private _FIND_LITTLE As String
	
	Private _FIND_NOTICE As String
	
	Private _COMPLIANCE_RISK As String
	
	Private _INTRINSIC_RISK As String
	
	Private _COMMENT_FMP As String
	
	Private _M_APPROPRIATE As System.Nullable(Of Integer)
	
	Private _M_NOT_APPROPRIATE As System.Nullable(Of Integer)
	
	Private _DUR_TO As String
	
	Private _REPORT_M As System.Nullable(Of Integer)
	
	Private _RECOM_FMP As String
	
	Private _TIMENEXT_CHECK As System.Nullable(Of Integer)
	
	Private _NO_OR_PROPERTY As String
	
	Private _IF_PROPERTY As String
	
	Private _NAME As String
	
	Private _HAND_WRITE As String
	
	Private _DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAME_PRODUCERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PRODUCERChanged()
    End Sub
    Partial Private Sub OnLOCATION_PRODUCERChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_PRODUCERChanged()
    End Sub
    Partial Private Sub OnNUMBER_LICENSEEChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBER_LICENSEEChanged()
    End Sub
    Partial Private Sub OnSCOPE_CHECKChanging(value As String)
    End Sub
    Partial Private Sub OnSCOPE_CHECKChanged()
    End Sub
    Partial Private Sub OnDATE_CHECKChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CHECKChanged()
    End Sub
    Partial Private Sub OnNAME_LEADERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_LEADERChanged()
    End Sub
    Partial Private Sub OnCOMPLEXITYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOMPLEXITYChanged()
    End Sub
    Partial Private Sub OnCRITICALITYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCRITICALITYChanged()
    End Sub
    Partial Private Sub OnRATE_RICKChanging(value As String)
    End Sub
    Partial Private Sub OnRATE_RICKChanged()
    End Sub
    Partial Private Sub OnFIND_SERIOUSChanging(value As String)
    End Sub
    Partial Private Sub OnFIND_SERIOUSChanged()
    End Sub
    Partial Private Sub OnFIND_IMPORTANT_REChanging(value As String)
    End Sub
    Partial Private Sub OnFIND_IMPORTANT_REChanged()
    End Sub
    Partial Private Sub OnFIND_IMPORTANTChanging(value As String)
    End Sub
    Partial Private Sub OnFIND_IMPORTANTChanged()
    End Sub
    Partial Private Sub OnFIND_LITTLEChanging(value As String)
    End Sub
    Partial Private Sub OnFIND_LITTLEChanged()
    End Sub
    Partial Private Sub OnFIND_NOTICEChanging(value As String)
    End Sub
    Partial Private Sub OnFIND_NOTICEChanged()
    End Sub
    Partial Private Sub OnCOMPLIANCE_RISKChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPLIANCE_RISKChanged()
    End Sub
    Partial Private Sub OnINTRINSIC_RISKChanging(value As String)
    End Sub
    Partial Private Sub OnINTRINSIC_RISKChanged()
    End Sub
    Partial Private Sub OnCOMMENT_FMPChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENT_FMPChanged()
    End Sub
    Partial Private Sub OnM_APPROPRIATEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnM_APPROPRIATEChanged()
    End Sub
    Partial Private Sub OnM_NOT_APPROPRIATEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnM_NOT_APPROPRIATEChanged()
    End Sub
    Partial Private Sub OnDUR_TOChanging(value As String)
    End Sub
    Partial Private Sub OnDUR_TOChanged()
    End Sub
    Partial Private Sub OnREPORT_MChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREPORT_MChanged()
    End Sub
    Partial Private Sub OnRECOM_FMPChanging(value As String)
    End Sub
    Partial Private Sub OnRECOM_FMPChanged()
    End Sub
    Partial Private Sub OnTIMENEXT_CHECKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTIMENEXT_CHECKChanged()
    End Sub
    Partial Private Sub OnNO_OR_PROPERTYChanging(value As String)
    End Sub
    Partial Private Sub OnNO_OR_PROPERTYChanged()
    End Sub
    Partial Private Sub OnIF_PROPERTYChanging(value As String)
    End Sub
    Partial Private Sub OnIF_PROPERTYChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnHAND_WRITEChanging(value As String)
    End Sub
    Partial Private Sub OnHAND_WRITEChanged()
    End Sub
    Partial Private Sub OnDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PRODUCER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PRODUCER() As String
		Get
			Return Me._NAME_PRODUCER
		End Get
		Set
			If (String.Equals(Me._NAME_PRODUCER, value) = false) Then
				Me.OnNAME_PRODUCERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PRODUCER = value
				Me.SendPropertyChanged("NAME_PRODUCER")
				Me.OnNAME_PRODUCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_PRODUCER", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_PRODUCER() As String
		Get
			Return Me._LOCATION_PRODUCER
		End Get
		Set
			If (String.Equals(Me._LOCATION_PRODUCER, value) = false) Then
				Me.OnLOCATION_PRODUCERChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_PRODUCER = value
				Me.SendPropertyChanged("LOCATION_PRODUCER")
				Me.OnLOCATION_PRODUCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER_LICENSEE", DbType:="NVarChar(MAX)")>  _
	Public Property NUMBER_LICENSEE() As String
		Get
			Return Me._NUMBER_LICENSEE
		End Get
		Set
			If (String.Equals(Me._NUMBER_LICENSEE, value) = false) Then
				Me.OnNUMBER_LICENSEEChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER_LICENSEE = value
				Me.SendPropertyChanged("NUMBER_LICENSEE")
				Me.OnNUMBER_LICENSEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCOPE_CHECK", DbType:="NVarChar(MAX)")>  _
	Public Property SCOPE_CHECK() As String
		Get
			Return Me._SCOPE_CHECK
		End Get
		Set
			If (String.Equals(Me._SCOPE_CHECK, value) = false) Then
				Me.OnSCOPE_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._SCOPE_CHECK = value
				Me.SendPropertyChanged("SCOPE_CHECK")
				Me.OnSCOPE_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CHECK", DbType:="DateTime")>  _
	Public Property DATE_CHECK() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CHECK
		End Get
		Set
			If (Me._DATE_CHECK.Equals(value) = false) Then
				Me.OnDATE_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._DATE_CHECK = value
				Me.SendPropertyChanged("DATE_CHECK")
				Me.OnDATE_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_LEADER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_LEADER() As String
		Get
			Return Me._NAME_LEADER
		End Get
		Set
			If (String.Equals(Me._NAME_LEADER, value) = false) Then
				Me.OnNAME_LEADERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_LEADER = value
				Me.SendPropertyChanged("NAME_LEADER")
				Me.OnNAME_LEADERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPLEXITY", DbType:="Int")>  _
	Public Property COMPLEXITY() As System.Nullable(Of Integer)
		Get
			Return Me._COMPLEXITY
		End Get
		Set
			If (Me._COMPLEXITY.Equals(value) = false) Then
				Me.OnCOMPLEXITYChanging(value)
				Me.SendPropertyChanging
				Me._COMPLEXITY = value
				Me.SendPropertyChanged("COMPLEXITY")
				Me.OnCOMPLEXITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRITICALITY", DbType:="Int")>  _
	Public Property CRITICALITY() As System.Nullable(Of Integer)
		Get
			Return Me._CRITICALITY
		End Get
		Set
			If (Me._CRITICALITY.Equals(value) = false) Then
				Me.OnCRITICALITYChanging(value)
				Me.SendPropertyChanging
				Me._CRITICALITY = value
				Me.SendPropertyChanged("CRITICALITY")
				Me.OnCRITICALITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RATE_RICK", DbType:="NVarChar(MAX)")>  _
	Public Property RATE_RICK() As String
		Get
			Return Me._RATE_RICK
		End Get
		Set
			If (String.Equals(Me._RATE_RICK, value) = false) Then
				Me.OnRATE_RICKChanging(value)
				Me.SendPropertyChanging
				Me._RATE_RICK = value
				Me.SendPropertyChanged("RATE_RICK")
				Me.OnRATE_RICKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIND_SERIOUS", DbType:="NVarChar(MAX)")>  _
	Public Property FIND_SERIOUS() As String
		Get
			Return Me._FIND_SERIOUS
		End Get
		Set
			If (String.Equals(Me._FIND_SERIOUS, value) = false) Then
				Me.OnFIND_SERIOUSChanging(value)
				Me.SendPropertyChanging
				Me._FIND_SERIOUS = value
				Me.SendPropertyChanged("FIND_SERIOUS")
				Me.OnFIND_SERIOUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIND_IMPORTANT_RE", DbType:="NVarChar(MAX)")>  _
	Public Property FIND_IMPORTANT_RE() As String
		Get
			Return Me._FIND_IMPORTANT_RE
		End Get
		Set
			If (String.Equals(Me._FIND_IMPORTANT_RE, value) = false) Then
				Me.OnFIND_IMPORTANT_REChanging(value)
				Me.SendPropertyChanging
				Me._FIND_IMPORTANT_RE = value
				Me.SendPropertyChanged("FIND_IMPORTANT_RE")
				Me.OnFIND_IMPORTANT_REChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIND_IMPORTANT", DbType:="NVarChar(MAX)")>  _
	Public Property FIND_IMPORTANT() As String
		Get
			Return Me._FIND_IMPORTANT
		End Get
		Set
			If (String.Equals(Me._FIND_IMPORTANT, value) = false) Then
				Me.OnFIND_IMPORTANTChanging(value)
				Me.SendPropertyChanging
				Me._FIND_IMPORTANT = value
				Me.SendPropertyChanged("FIND_IMPORTANT")
				Me.OnFIND_IMPORTANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIND_LITTLE", DbType:="NVarChar(MAX)")>  _
	Public Property FIND_LITTLE() As String
		Get
			Return Me._FIND_LITTLE
		End Get
		Set
			If (String.Equals(Me._FIND_LITTLE, value) = false) Then
				Me.OnFIND_LITTLEChanging(value)
				Me.SendPropertyChanging
				Me._FIND_LITTLE = value
				Me.SendPropertyChanged("FIND_LITTLE")
				Me.OnFIND_LITTLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIND_NOTICE", DbType:="NVarChar(MAX)")>  _
	Public Property FIND_NOTICE() As String
		Get
			Return Me._FIND_NOTICE
		End Get
		Set
			If (String.Equals(Me._FIND_NOTICE, value) = false) Then
				Me.OnFIND_NOTICEChanging(value)
				Me.SendPropertyChanging
				Me._FIND_NOTICE = value
				Me.SendPropertyChanged("FIND_NOTICE")
				Me.OnFIND_NOTICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPLIANCE_RISK", DbType:="NVarChar(MAX)")>  _
	Public Property COMPLIANCE_RISK() As String
		Get
			Return Me._COMPLIANCE_RISK
		End Get
		Set
			If (String.Equals(Me._COMPLIANCE_RISK, value) = false) Then
				Me.OnCOMPLIANCE_RISKChanging(value)
				Me.SendPropertyChanging
				Me._COMPLIANCE_RISK = value
				Me.SendPropertyChanged("COMPLIANCE_RISK")
				Me.OnCOMPLIANCE_RISKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTRINSIC_RISK", DbType:="NVarChar(MAX)")>  _
	Public Property INTRINSIC_RISK() As String
		Get
			Return Me._INTRINSIC_RISK
		End Get
		Set
			If (String.Equals(Me._INTRINSIC_RISK, value) = false) Then
				Me.OnINTRINSIC_RISKChanging(value)
				Me.SendPropertyChanging
				Me._INTRINSIC_RISK = value
				Me.SendPropertyChanged("INTRINSIC_RISK")
				Me.OnINTRINSIC_RISKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENT_FMP", DbType:="NVarChar(MAX)")>  _
	Public Property COMMENT_FMP() As String
		Get
			Return Me._COMMENT_FMP
		End Get
		Set
			If (String.Equals(Me._COMMENT_FMP, value) = false) Then
				Me.OnCOMMENT_FMPChanging(value)
				Me.SendPropertyChanging
				Me._COMMENT_FMP = value
				Me.SendPropertyChanged("COMMENT_FMP")
				Me.OnCOMMENT_FMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_M_APPROPRIATE", DbType:="Int")>  _
	Public Property M_APPROPRIATE() As System.Nullable(Of Integer)
		Get
			Return Me._M_APPROPRIATE
		End Get
		Set
			If (Me._M_APPROPRIATE.Equals(value) = false) Then
				Me.OnM_APPROPRIATEChanging(value)
				Me.SendPropertyChanging
				Me._M_APPROPRIATE = value
				Me.SendPropertyChanged("M_APPROPRIATE")
				Me.OnM_APPROPRIATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_M_NOT_APPROPRIATE", DbType:="Int")>  _
	Public Property M_NOT_APPROPRIATE() As System.Nullable(Of Integer)
		Get
			Return Me._M_NOT_APPROPRIATE
		End Get
		Set
			If (Me._M_NOT_APPROPRIATE.Equals(value) = false) Then
				Me.OnM_NOT_APPROPRIATEChanging(value)
				Me.SendPropertyChanging
				Me._M_NOT_APPROPRIATE = value
				Me.SendPropertyChanged("M_NOT_APPROPRIATE")
				Me.OnM_NOT_APPROPRIATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUR_TO", DbType:="NVarChar(MAX)")>  _
	Public Property DUR_TO() As String
		Get
			Return Me._DUR_TO
		End Get
		Set
			If (String.Equals(Me._DUR_TO, value) = false) Then
				Me.OnDUR_TOChanging(value)
				Me.SendPropertyChanging
				Me._DUR_TO = value
				Me.SendPropertyChanged("DUR_TO")
				Me.OnDUR_TOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT_M", DbType:="Int")>  _
	Public Property REPORT_M() As System.Nullable(Of Integer)
		Get
			Return Me._REPORT_M
		End Get
		Set
			If (Me._REPORT_M.Equals(value) = false) Then
				Me.OnREPORT_MChanging(value)
				Me.SendPropertyChanging
				Me._REPORT_M = value
				Me.SendPropertyChanged("REPORT_M")
				Me.OnREPORT_MChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECOM_FMP", DbType:="NVarChar(MAX)")>  _
	Public Property RECOM_FMP() As String
		Get
			Return Me._RECOM_FMP
		End Get
		Set
			If (String.Equals(Me._RECOM_FMP, value) = false) Then
				Me.OnRECOM_FMPChanging(value)
				Me.SendPropertyChanging
				Me._RECOM_FMP = value
				Me.SendPropertyChanged("RECOM_FMP")
				Me.OnRECOM_FMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIMENEXT_CHECK", DbType:="Int")>  _
	Public Property TIMENEXT_CHECK() As System.Nullable(Of Integer)
		Get
			Return Me._TIMENEXT_CHECK
		End Get
		Set
			If (Me._TIMENEXT_CHECK.Equals(value) = false) Then
				Me.OnTIMENEXT_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._TIMENEXT_CHECK = value
				Me.SendPropertyChanged("TIMENEXT_CHECK")
				Me.OnTIMENEXT_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_OR_PROPERTY", DbType:="NVarChar(MAX)")>  _
	Public Property NO_OR_PROPERTY() As String
		Get
			Return Me._NO_OR_PROPERTY
		End Get
		Set
			If (String.Equals(Me._NO_OR_PROPERTY, value) = false) Then
				Me.OnNO_OR_PROPERTYChanging(value)
				Me.SendPropertyChanging
				Me._NO_OR_PROPERTY = value
				Me.SendPropertyChanged("NO_OR_PROPERTY")
				Me.OnNO_OR_PROPERTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IF_PROPERTY", DbType:="NVarChar(MAX)")>  _
	Public Property IF_PROPERTY() As String
		Get
			Return Me._IF_PROPERTY
		End Get
		Set
			If (String.Equals(Me._IF_PROPERTY, value) = false) Then
				Me.OnIF_PROPERTYChanging(value)
				Me.SendPropertyChanging
				Me._IF_PROPERTY = value
				Me.SendPropertyChanged("IF_PROPERTY")
				Me.OnIF_PROPERTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HAND_WRITE", DbType:="NVarChar(MAX)")>  _
	Public Property HAND_WRITE() As String
		Get
			Return Me._HAND_WRITE
		End Get
		Set
			If (String.Equals(Me._HAND_WRITE, value) = false) Then
				Me.OnHAND_WRITEChanging(value)
				Me.SendPropertyChanging
				Me._HAND_WRITE = value
				Me.SendPropertyChanged("HAND_WRITE")
				Me.OnHAND_WRITEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DATE", Storage:="_DATE", DbType:="DateTime")>  _
	Public Property [DATE]() As System.Nullable(Of Date)
		Get
			Return Me._DATE
		End Get
		Set
			If (Me._DATE.Equals(value) = false) Then
				Me.OnDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE = value
				Me.SendPropertyChanged("[DATE]")
				Me.OnDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PLACE_GMP")>  _
Partial Public Class PLACE_GMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SUP_ID As System.Nullable(Of Integer)
	
	Private _ORDER_ID As System.Nullable(Of Integer)
	
	Private _PLACN_NAME As String
	
	Private _PRODUCT_CODE As String
	
	Private _License As String
	
	Private _License_original As String
	
	Private _pvncd As String
	
	Private _LCNNO As System.Nullable(Of Integer)
	
	Private _Address As String
	
	Private _num_addr As String
	
	Private _Building As String
	
	Private _moo As String
	
	Private _soi As String
	
	Private _road As String
	
	Private _tambol As String
	
	Private _amphure As String
	
	Private _Provinces As String
	
	Private _ZIPCODE As String
	
	Private _contact1 As String
	
	Private _TEL As String
	
	Private _FAX As String
	
	Private _email As String
	
	Private _Description As String
	
	Private _list_price As System.Nullable(Of Integer)
	
	Private _standars_cost As System.Nullable(Of Integer)
	
	Private _reorder_level As System.Nullable(Of Integer)
	
	Private _target_level As System.Nullable(Of Integer)
	
	Private _st_date_cer As System.Nullable(Of Date)
	
	Private _end_date_cer As System.Nullable(Of Date)
	
	Private _number_cer As String
	
	Private _qty_per_unit As System.Nullable(Of Integer)
	
	Private _discontinued As System.Nullable(Of Integer)
	
	Private _minimum_reorder_qty As System.Nullable(Of Integer)
	
	Private _attachments As System.Nullable(Of Integer)
	
	Private _general_medicine As System.Nullable(Of Integer)
	
	Private _penicillin As String
	
	Private _cephalosporin As String
	
	Private _Carbapenem As String
	
	Private _sex As System.Nullable(Of Integer)
	
	Private _etc As String
	
	Private _category As String
	
	Private _note As String
	
	Private _lcntpcd As String
	
	Private _DATE_CHECK As System.Nullable(Of Date)
	
	Private _Complexity As System.Nullable(Of Integer)
	
	Private _Criticality As System.Nullable(Of Integer)
	
	Private _RISK_INTRINSIC As System.Nullable(Of Integer)
	
	Private _RISK_COMPLIANCE As System.Nullable(Of Integer)
	
	Private _RISK_RESULT As String
	
	Private _DAY_CHECK_TOTAL As System.Nullable(Of Double)
	
	Private _PEOPLE_MIN As System.Nullable(Of Integer)
	
	Private _PEOPLE_MAX As System.Nullable(Of Integer)
	
	Private _DAY_CHECK As System.Nullable(Of Integer)
	
	Private _IDA As Integer
	
	Private _RISK_RESULT_NUMBER As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSUP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUP_IDChanged()
    End Sub
    Partial Private Sub OnORDER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORDER_IDChanged()
    End Sub
    Partial Private Sub OnPLACN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPLACN_NAMEChanged()
    End Sub
    Partial Private Sub OnPRODUCT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_CODEChanged()
    End Sub
    Partial Private Sub OnLicenseChanging(value As String)
    End Sub
    Partial Private Sub OnLicenseChanged()
    End Sub
    Partial Private Sub OnLicense_originalChanging(value As String)
    End Sub
    Partial Private Sub OnLicense_originalChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub Onnum_addrChanging(value As String)
    End Sub
    Partial Private Sub Onnum_addrChanged()
    End Sub
    Partial Private Sub OnBuildingChanging(value As String)
    End Sub
    Partial Private Sub OnBuildingChanged()
    End Sub
    Partial Private Sub OnmooChanging(value As String)
    End Sub
    Partial Private Sub OnmooChanged()
    End Sub
    Partial Private Sub OnsoiChanging(value As String)
    End Sub
    Partial Private Sub OnsoiChanged()
    End Sub
    Partial Private Sub OnroadChanging(value As String)
    End Sub
    Partial Private Sub OnroadChanged()
    End Sub
    Partial Private Sub OntambolChanging(value As String)
    End Sub
    Partial Private Sub OntambolChanged()
    End Sub
    Partial Private Sub OnamphureChanging(value As String)
    End Sub
    Partial Private Sub OnamphureChanged()
    End Sub
    Partial Private Sub OnProvincesChanging(value As String)
    End Sub
    Partial Private Sub OnProvincesChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub Oncontact1Changing(value As String)
    End Sub
    Partial Private Sub Oncontact1Changed()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnemailChanging(value As String)
    End Sub
    Partial Private Sub OnemailChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub Onlist_priceChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlist_priceChanged()
    End Sub
    Partial Private Sub Onstandars_costChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onstandars_costChanged()
    End Sub
    Partial Private Sub Onreorder_levelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onreorder_levelChanged()
    End Sub
    Partial Private Sub Ontarget_levelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontarget_levelChanged()
    End Sub
    Partial Private Sub Onst_date_cerChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onst_date_cerChanged()
    End Sub
    Partial Private Sub Onend_date_cerChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onend_date_cerChanged()
    End Sub
    Partial Private Sub Onnumber_cerChanging(value As String)
    End Sub
    Partial Private Sub Onnumber_cerChanged()
    End Sub
    Partial Private Sub Onqty_per_unitChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onqty_per_unitChanged()
    End Sub
    Partial Private Sub OndiscontinuedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OndiscontinuedChanged()
    End Sub
    Partial Private Sub Onminimum_reorder_qtyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onminimum_reorder_qtyChanged()
    End Sub
    Partial Private Sub OnattachmentsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnattachmentsChanged()
    End Sub
    Partial Private Sub Ongeneral_medicineChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ongeneral_medicineChanged()
    End Sub
    Partial Private Sub OnpenicillinChanging(value As String)
    End Sub
    Partial Private Sub OnpenicillinChanged()
    End Sub
    Partial Private Sub OncephalosporinChanging(value As String)
    End Sub
    Partial Private Sub OncephalosporinChanged()
    End Sub
    Partial Private Sub OnCarbapenemChanging(value As String)
    End Sub
    Partial Private Sub OnCarbapenemChanged()
    End Sub
    Partial Private Sub OnsexChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsexChanged()
    End Sub
    Partial Private Sub OnetcChanging(value As String)
    End Sub
    Partial Private Sub OnetcChanged()
    End Sub
    Partial Private Sub OncategoryChanging(value As String)
    End Sub
    Partial Private Sub OncategoryChanged()
    End Sub
    Partial Private Sub OnnoteChanging(value As String)
    End Sub
    Partial Private Sub OnnoteChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnDATE_CHECKChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CHECKChanged()
    End Sub
    Partial Private Sub OnComplexityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnComplexityChanged()
    End Sub
    Partial Private Sub OnCriticalityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCriticalityChanged()
    End Sub
    Partial Private Sub OnRISK_INTRINSICChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRISK_INTRINSICChanged()
    End Sub
    Partial Private Sub OnRISK_COMPLIANCEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRISK_COMPLIANCEChanged()
    End Sub
    Partial Private Sub OnRISK_RESULTChanging(value As String)
    End Sub
    Partial Private Sub OnRISK_RESULTChanged()
    End Sub
    Partial Private Sub OnDAY_CHECK_TOTALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDAY_CHECK_TOTALChanged()
    End Sub
    Partial Private Sub OnPEOPLE_MINChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPEOPLE_MINChanged()
    End Sub
    Partial Private Sub OnPEOPLE_MAXChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPEOPLE_MAXChanged()
    End Sub
    Partial Private Sub OnDAY_CHECKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDAY_CHECKChanged()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnRISK_RESULT_NUMBERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRISK_RESULT_NUMBERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUP_ID", DbType:="Int")>  _
	Public Property SUP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SUP_ID
		End Get
		Set
			If (Me._SUP_ID.Equals(value) = false) Then
				Me.OnSUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._SUP_ID = value
				Me.SendPropertyChanged("SUP_ID")
				Me.OnSUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDER_ID", DbType:="Int")>  _
	Public Property ORDER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ORDER_ID
		End Get
		Set
			If (Me._ORDER_ID.Equals(value) = false) Then
				Me.OnORDER_IDChanging(value)
				Me.SendPropertyChanging
				Me._ORDER_ID = value
				Me.SendPropertyChanged("ORDER_ID")
				Me.OnORDER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACN_NAME", DbType:="NVarChar(100)")>  _
	Public Property PLACN_NAME() As String
		Get
			Return Me._PLACN_NAME
		End Get
		Set
			If (String.Equals(Me._PLACN_NAME, value) = false) Then
				Me.OnPLACN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PLACN_NAME = value
				Me.SendPropertyChanged("PLACN_NAME")
				Me.OnPLACN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_CODE", DbType:="NVarChar(243)")>  _
	Public Property PRODUCT_CODE() As String
		Get
			Return Me._PRODUCT_CODE
		End Get
		Set
			If (String.Equals(Me._PRODUCT_CODE, value) = false) Then
				Me.OnPRODUCT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_CODE = value
				Me.SendPropertyChanged("PRODUCT_CODE")
				Me.OnPRODUCT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_License", DbType:="NVarChar(100)")>  _
	Public Property License() As String
		Get
			Return Me._License
		End Get
		Set
			If (String.Equals(Me._License, value) = false) Then
				Me.OnLicenseChanging(value)
				Me.SendPropertyChanging
				Me._License = value
				Me.SendPropertyChanged("License")
				Me.OnLicenseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_License_original", DbType:="NVarChar(20)")>  _
	Public Property License_original() As String
		Get
			Return Me._License_original
		End Get
		Set
			If (String.Equals(Me._License_original, value) = false) Then
				Me.OnLicense_originalChanging(value)
				Me.SendPropertyChanging
				Me._License_original = value
				Me.SendPropertyChanged("License_original")
				Me.OnLicense_originalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(243)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="Int")>  _
	Public Property LCNNO() As System.Nullable(Of Integer)
		Get
			Return Me._LCNNO
		End Get
		Set
			If (Me._LCNNO.Equals(value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(243)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_num_addr", DbType:="NVarChar(100)")>  _
	Public Property num_addr() As String
		Get
			Return Me._num_addr
		End Get
		Set
			If (String.Equals(Me._num_addr, value) = false) Then
				Me.Onnum_addrChanging(value)
				Me.SendPropertyChanging
				Me._num_addr = value
				Me.SendPropertyChanged("num_addr")
				Me.Onnum_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Building", DbType:="NVarChar(100)")>  _
	Public Property Building() As String
		Get
			Return Me._Building
		End Get
		Set
			If (String.Equals(Me._Building, value) = false) Then
				Me.OnBuildingChanging(value)
				Me.SendPropertyChanging
				Me._Building = value
				Me.SendPropertyChanged("Building")
				Me.OnBuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_moo", DbType:="NVarChar(10)")>  _
	Public Property moo() As String
		Get
			Return Me._moo
		End Get
		Set
			If (String.Equals(Me._moo, value) = false) Then
				Me.OnmooChanging(value)
				Me.SendPropertyChanging
				Me._moo = value
				Me.SendPropertyChanged("moo")
				Me.OnmooChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_soi", DbType:="NVarChar(100)")>  _
	Public Property soi() As String
		Get
			Return Me._soi
		End Get
		Set
			If (String.Equals(Me._soi, value) = false) Then
				Me.OnsoiChanging(value)
				Me.SendPropertyChanging
				Me._soi = value
				Me.SendPropertyChanged("soi")
				Me.OnsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_road", DbType:="NVarChar(100)")>  _
	Public Property road() As String
		Get
			Return Me._road
		End Get
		Set
			If (String.Equals(Me._road, value) = false) Then
				Me.OnroadChanging(value)
				Me.SendPropertyChanging
				Me._road = value
				Me.SendPropertyChanged("road")
				Me.OnroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tambol", DbType:="NVarChar(100)")>  _
	Public Property tambol() As String
		Get
			Return Me._tambol
		End Get
		Set
			If (String.Equals(Me._tambol, value) = false) Then
				Me.OntambolChanging(value)
				Me.SendPropertyChanging
				Me._tambol = value
				Me.SendPropertyChanged("tambol")
				Me.OntambolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphure", DbType:="NVarChar(100)")>  _
	Public Property amphure() As String
		Get
			Return Me._amphure
		End Get
		Set
			If (String.Equals(Me._amphure, value) = false) Then
				Me.OnamphureChanging(value)
				Me.SendPropertyChanging
				Me._amphure = value
				Me.SendPropertyChanged("amphure")
				Me.OnamphureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Provinces", DbType:="NVarChar(100)")>  _
	Public Property Provinces() As String
		Get
			Return Me._Provinces
		End Get
		Set
			If (String.Equals(Me._Provinces, value) = false) Then
				Me.OnProvincesChanging(value)
				Me.SendPropertyChanging
				Me._Provinces = value
				Me.SendPropertyChanged("Provinces")
				Me.OnProvincesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(255)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_contact1", DbType:="NVarChar(100)")>  _
	Public Property contact1() As String
		Get
			Return Me._contact1
		End Get
		Set
			If (String.Equals(Me._contact1, value) = false) Then
				Me.Oncontact1Changing(value)
				Me.SendPropertyChanging
				Me._contact1 = value
				Me.SendPropertyChanged("contact1")
				Me.Oncontact1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(50)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="NVarChar(50)")>  _
	Public Property FAX() As String
		Get
			Return Me._FAX
		End Get
		Set
			If (String.Equals(Me._FAX, value) = false) Then
				Me.OnFAXChanging(value)
				Me.SendPropertyChanging
				Me._FAX = value
				Me.SendPropertyChanged("FAX")
				Me.OnFAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email", DbType:="NVarChar(100)")>  _
	Public Property email() As String
		Get
			Return Me._email
		End Get
		Set
			If (String.Equals(Me._email, value) = false) Then
				Me.OnemailChanging(value)
				Me.SendPropertyChanging
				Me._email = value
				Me.SendPropertyChanged("email")
				Me.OnemailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_list_price", DbType:="Int")>  _
	Public Property list_price() As System.Nullable(Of Integer)
		Get
			Return Me._list_price
		End Get
		Set
			If (Me._list_price.Equals(value) = false) Then
				Me.Onlist_priceChanging(value)
				Me.SendPropertyChanging
				Me._list_price = value
				Me.SendPropertyChanged("list_price")
				Me.Onlist_priceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_standars_cost", DbType:="Int")>  _
	Public Property standars_cost() As System.Nullable(Of Integer)
		Get
			Return Me._standars_cost
		End Get
		Set
			If (Me._standars_cost.Equals(value) = false) Then
				Me.Onstandars_costChanging(value)
				Me.SendPropertyChanging
				Me._standars_cost = value
				Me.SendPropertyChanged("standars_cost")
				Me.Onstandars_costChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_reorder_level", DbType:="Int")>  _
	Public Property reorder_level() As System.Nullable(Of Integer)
		Get
			Return Me._reorder_level
		End Get
		Set
			If (Me._reorder_level.Equals(value) = false) Then
				Me.Onreorder_levelChanging(value)
				Me.SendPropertyChanging
				Me._reorder_level = value
				Me.SendPropertyChanged("reorder_level")
				Me.Onreorder_levelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_target_level", DbType:="Int")>  _
	Public Property target_level() As System.Nullable(Of Integer)
		Get
			Return Me._target_level
		End Get
		Set
			If (Me._target_level.Equals(value) = false) Then
				Me.Ontarget_levelChanging(value)
				Me.SendPropertyChanging
				Me._target_level = value
				Me.SendPropertyChanged("target_level")
				Me.Ontarget_levelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_st_date_cer", DbType:="DateTime2")>  _
	Public Property st_date_cer() As System.Nullable(Of Date)
		Get
			Return Me._st_date_cer
		End Get
		Set
			If (Me._st_date_cer.Equals(value) = false) Then
				Me.Onst_date_cerChanging(value)
				Me.SendPropertyChanging
				Me._st_date_cer = value
				Me.SendPropertyChanged("st_date_cer")
				Me.Onst_date_cerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_end_date_cer", DbType:="DateTime2")>  _
	Public Property end_date_cer() As System.Nullable(Of Date)
		Get
			Return Me._end_date_cer
		End Get
		Set
			If (Me._end_date_cer.Equals(value) = false) Then
				Me.Onend_date_cerChanging(value)
				Me.SendPropertyChanging
				Me._end_date_cer = value
				Me.SendPropertyChanged("end_date_cer")
				Me.Onend_date_cerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_number_cer", DbType:="NVarChar(255)")>  _
	Public Property number_cer() As String
		Get
			Return Me._number_cer
		End Get
		Set
			If (String.Equals(Me._number_cer, value) = false) Then
				Me.Onnumber_cerChanging(value)
				Me.SendPropertyChanging
				Me._number_cer = value
				Me.SendPropertyChanged("number_cer")
				Me.Onnumber_cerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qty_per_unit", DbType:="Int")>  _
	Public Property qty_per_unit() As System.Nullable(Of Integer)
		Get
			Return Me._qty_per_unit
		End Get
		Set
			If (Me._qty_per_unit.Equals(value) = false) Then
				Me.Onqty_per_unitChanging(value)
				Me.SendPropertyChanging
				Me._qty_per_unit = value
				Me.SendPropertyChanged("qty_per_unit")
				Me.Onqty_per_unitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_discontinued", DbType:="Int")>  _
	Public Property discontinued() As System.Nullable(Of Integer)
		Get
			Return Me._discontinued
		End Get
		Set
			If (Me._discontinued.Equals(value) = false) Then
				Me.OndiscontinuedChanging(value)
				Me.SendPropertyChanging
				Me._discontinued = value
				Me.SendPropertyChanged("discontinued")
				Me.OndiscontinuedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_minimum_reorder_qty", DbType:="Int")>  _
	Public Property minimum_reorder_qty() As System.Nullable(Of Integer)
		Get
			Return Me._minimum_reorder_qty
		End Get
		Set
			If (Me._minimum_reorder_qty.Equals(value) = false) Then
				Me.Onminimum_reorder_qtyChanging(value)
				Me.SendPropertyChanging
				Me._minimum_reorder_qty = value
				Me.SendPropertyChanged("minimum_reorder_qty")
				Me.Onminimum_reorder_qtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_attachments", DbType:="Int")>  _
	Public Property attachments() As System.Nullable(Of Integer)
		Get
			Return Me._attachments
		End Get
		Set
			If (Me._attachments.Equals(value) = false) Then
				Me.OnattachmentsChanging(value)
				Me.SendPropertyChanging
				Me._attachments = value
				Me.SendPropertyChanged("attachments")
				Me.OnattachmentsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_general_medicine", DbType:="Int")>  _
	Public Property general_medicine() As System.Nullable(Of Integer)
		Get
			Return Me._general_medicine
		End Get
		Set
			If (Me._general_medicine.Equals(value) = false) Then
				Me.Ongeneral_medicineChanging(value)
				Me.SendPropertyChanging
				Me._general_medicine = value
				Me.SendPropertyChanged("general_medicine")
				Me.Ongeneral_medicineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_penicillin", DbType:="VarChar(8000)")>  _
	Public Property penicillin() As String
		Get
			Return Me._penicillin
		End Get
		Set
			If (String.Equals(Me._penicillin, value) = false) Then
				Me.OnpenicillinChanging(value)
				Me.SendPropertyChanging
				Me._penicillin = value
				Me.SendPropertyChanged("penicillin")
				Me.OnpenicillinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cephalosporin", DbType:="VarChar(8000)")>  _
	Public Property cephalosporin() As String
		Get
			Return Me._cephalosporin
		End Get
		Set
			If (String.Equals(Me._cephalosporin, value) = false) Then
				Me.OncephalosporinChanging(value)
				Me.SendPropertyChanging
				Me._cephalosporin = value
				Me.SendPropertyChanged("cephalosporin")
				Me.OncephalosporinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Carbapenem", DbType:="VarChar(8000)")>  _
	Public Property Carbapenem() As String
		Get
			Return Me._Carbapenem
		End Get
		Set
			If (String.Equals(Me._Carbapenem, value) = false) Then
				Me.OnCarbapenemChanging(value)
				Me.SendPropertyChanging
				Me._Carbapenem = value
				Me.SendPropertyChanged("Carbapenem")
				Me.OnCarbapenemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sex", DbType:="Int")>  _
	Public Property sex() As System.Nullable(Of Integer)
		Get
			Return Me._sex
		End Get
		Set
			If (Me._sex.Equals(value) = false) Then
				Me.OnsexChanging(value)
				Me.SendPropertyChanging
				Me._sex = value
				Me.SendPropertyChanged("sex")
				Me.OnsexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_etc", DbType:="NVarChar(255)")>  _
	Public Property etc() As String
		Get
			Return Me._etc
		End Get
		Set
			If (String.Equals(Me._etc, value) = false) Then
				Me.OnetcChanging(value)
				Me.SendPropertyChanging
				Me._etc = value
				Me.SendPropertyChanged("etc")
				Me.OnetcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_category", DbType:="NVarChar(100)")>  _
	Public Property category() As String
		Get
			Return Me._category
		End Get
		Set
			If (String.Equals(Me._category, value) = false) Then
				Me.OncategoryChanging(value)
				Me.SendPropertyChanging
				Me._category = value
				Me.SendPropertyChanged("category")
				Me.OncategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_note", DbType:="NVarChar(MAX)")>  _
	Public Property note() As String
		Get
			Return Me._note
		End Get
		Set
			If (String.Equals(Me._note, value) = false) Then
				Me.OnnoteChanging(value)
				Me.SendPropertyChanging
				Me._note = value
				Me.SendPropertyChanged("note")
				Me.OnnoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(3)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CHECK", DbType:="DateTime2")>  _
	Public Property DATE_CHECK() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CHECK
		End Get
		Set
			If (Me._DATE_CHECK.Equals(value) = false) Then
				Me.OnDATE_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._DATE_CHECK = value
				Me.SendPropertyChanged("DATE_CHECK")
				Me.OnDATE_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Complexity", DbType:="Int")>  _
	Public Property Complexity() As System.Nullable(Of Integer)
		Get
			Return Me._Complexity
		End Get
		Set
			If (Me._Complexity.Equals(value) = false) Then
				Me.OnComplexityChanging(value)
				Me.SendPropertyChanging
				Me._Complexity = value
				Me.SendPropertyChanged("Complexity")
				Me.OnComplexityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Criticality", DbType:="Int")>  _
	Public Property Criticality() As System.Nullable(Of Integer)
		Get
			Return Me._Criticality
		End Get
		Set
			If (Me._Criticality.Equals(value) = false) Then
				Me.OnCriticalityChanging(value)
				Me.SendPropertyChanging
				Me._Criticality = value
				Me.SendPropertyChanged("Criticality")
				Me.OnCriticalityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISK_INTRINSIC", DbType:="Int")>  _
	Public Property RISK_INTRINSIC() As System.Nullable(Of Integer)
		Get
			Return Me._RISK_INTRINSIC
		End Get
		Set
			If (Me._RISK_INTRINSIC.Equals(value) = false) Then
				Me.OnRISK_INTRINSICChanging(value)
				Me.SendPropertyChanging
				Me._RISK_INTRINSIC = value
				Me.SendPropertyChanged("RISK_INTRINSIC")
				Me.OnRISK_INTRINSICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISK_COMPLIANCE", DbType:="Int")>  _
	Public Property RISK_COMPLIANCE() As System.Nullable(Of Integer)
		Get
			Return Me._RISK_COMPLIANCE
		End Get
		Set
			If (Me._RISK_COMPLIANCE.Equals(value) = false) Then
				Me.OnRISK_COMPLIANCEChanging(value)
				Me.SendPropertyChanging
				Me._RISK_COMPLIANCE = value
				Me.SendPropertyChanged("RISK_COMPLIANCE")
				Me.OnRISK_COMPLIANCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISK_RESULT", DbType:="NVarChar(243)")>  _
	Public Property RISK_RESULT() As String
		Get
			Return Me._RISK_RESULT
		End Get
		Set
			If (String.Equals(Me._RISK_RESULT, value) = false) Then
				Me.OnRISK_RESULTChanging(value)
				Me.SendPropertyChanging
				Me._RISK_RESULT = value
				Me.SendPropertyChanged("RISK_RESULT")
				Me.OnRISK_RESULTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAY_CHECK_TOTAL", DbType:="Float")>  _
	Public Property DAY_CHECK_TOTAL() As System.Nullable(Of Double)
		Get
			Return Me._DAY_CHECK_TOTAL
		End Get
		Set
			If (Me._DAY_CHECK_TOTAL.Equals(value) = false) Then
				Me.OnDAY_CHECK_TOTALChanging(value)
				Me.SendPropertyChanging
				Me._DAY_CHECK_TOTAL = value
				Me.SendPropertyChanged("DAY_CHECK_TOTAL")
				Me.OnDAY_CHECK_TOTALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PEOPLE_MIN", DbType:="Int")>  _
	Public Property PEOPLE_MIN() As System.Nullable(Of Integer)
		Get
			Return Me._PEOPLE_MIN
		End Get
		Set
			If (Me._PEOPLE_MIN.Equals(value) = false) Then
				Me.OnPEOPLE_MINChanging(value)
				Me.SendPropertyChanging
				Me._PEOPLE_MIN = value
				Me.SendPropertyChanged("PEOPLE_MIN")
				Me.OnPEOPLE_MINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PEOPLE_MAX", DbType:="Int")>  _
	Public Property PEOPLE_MAX() As System.Nullable(Of Integer)
		Get
			Return Me._PEOPLE_MAX
		End Get
		Set
			If (Me._PEOPLE_MAX.Equals(value) = false) Then
				Me.OnPEOPLE_MAXChanging(value)
				Me.SendPropertyChanging
				Me._PEOPLE_MAX = value
				Me.SendPropertyChanged("PEOPLE_MAX")
				Me.OnPEOPLE_MAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAY_CHECK", DbType:="Int")>  _
	Public Property DAY_CHECK() As System.Nullable(Of Integer)
		Get
			Return Me._DAY_CHECK
		End Get
		Set
			If (Me._DAY_CHECK.Equals(value) = false) Then
				Me.OnDAY_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._DAY_CHECK = value
				Me.SendPropertyChanged("DAY_CHECK")
				Me.OnDAY_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISK_RESULT_NUMBER", DbType:="Int")>  _
	Public Property RISK_RESULT_NUMBER() As System.Nullable(Of Integer)
		Get
			Return Me._RISK_RESULT_NUMBER
		End Get
		Set
			If (Me._RISK_RESULT_NUMBER.Equals(value) = false) Then
				Me.OnRISK_RESULT_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._RISK_RESULT_NUMBER = value
				Me.SendPropertyChanged("RISK_RESULT_NUMBER")
				Me.OnRISK_RESULT_NUMBERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PLACE_GMP_test")>  _
Partial Public Class PLACE_GMP_test
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Supplier_IDs As String
	
	Private _ID As Integer
	
	Private _Product_Name As String
	
	Private _Product_Code As String
	
	Private _License As String
	
	Private _License_original As String
	
	Private _pvncd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _Address As String
	
	Private _num_address As String
	
	Private _nikom_and_arcarn As String
	
	Private _moo As String
	
	Private _soi As String
	
	Private _road As String
	
	Private _tambol As String
	
	Private _amphure As String
	
	Private _Provinces As String
	
	Private _Zip_Postal_code As String
	
	Private _contact1 As String
	
	Private _Telephone_number As String
	
	Private _fax_number As String
	
	Private _email As String
	
	Private _Description As String
	
	Private _List_Price As String
	
	Private _Standard_Cost As String
	
	Private _Reorder_Level As System.Nullable(Of Short)
	
	Private _Target_Level As System.Nullable(Of Integer)
	
	Private _Start_date_of_Certificate As System.Nullable(Of Date)
	
	Private _Expiry_date_of_Certificate As System.Nullable(Of Date)
	
	Private _Number_of_Certificate As String
	
	Private _Quantity_Per_Unit As String
	
	Private _Discontinued As Boolean
	
	Private _Minimum_Reorder_Quantity As System.Nullable(Of Short)
	
	Private _Attachments As String
	
	Private _general_medicine As String
	
	Private _Penicillin As String
	
	Private _Cephalosporin As String
	
	Private _Carbapenem As String
	
	Private _Sex_hormone As String
	
	Private _etc__ระบุ_ As String
	
	Private _category As String
	
	Private _note As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSupplier_IDsChanging(value As String)
    End Sub
    Partial Private Sub OnSupplier_IDsChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnProduct_NameChanging(value As String)
    End Sub
    Partial Private Sub OnProduct_NameChanged()
    End Sub
    Partial Private Sub OnProduct_CodeChanging(value As String)
    End Sub
    Partial Private Sub OnProduct_CodeChanged()
    End Sub
    Partial Private Sub OnLicenseChanging(value As String)
    End Sub
    Partial Private Sub OnLicenseChanged()
    End Sub
    Partial Private Sub OnLicense_originalChanging(value As String)
    End Sub
    Partial Private Sub OnLicense_originalChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub Onnum_addressChanging(value As String)
    End Sub
    Partial Private Sub Onnum_addressChanged()
    End Sub
    Partial Private Sub Onnikom_and_arcarnChanging(value As String)
    End Sub
    Partial Private Sub Onnikom_and_arcarnChanged()
    End Sub
    Partial Private Sub OnmooChanging(value As String)
    End Sub
    Partial Private Sub OnmooChanged()
    End Sub
    Partial Private Sub OnsoiChanging(value As String)
    End Sub
    Partial Private Sub OnsoiChanged()
    End Sub
    Partial Private Sub OnroadChanging(value As String)
    End Sub
    Partial Private Sub OnroadChanged()
    End Sub
    Partial Private Sub OntambolChanging(value As String)
    End Sub
    Partial Private Sub OntambolChanged()
    End Sub
    Partial Private Sub OnamphureChanging(value As String)
    End Sub
    Partial Private Sub OnamphureChanged()
    End Sub
    Partial Private Sub OnProvincesChanging(value As String)
    End Sub
    Partial Private Sub OnProvincesChanged()
    End Sub
    Partial Private Sub OnZip_Postal_codeChanging(value As String)
    End Sub
    Partial Private Sub OnZip_Postal_codeChanged()
    End Sub
    Partial Private Sub Oncontact1Changing(value As String)
    End Sub
    Partial Private Sub Oncontact1Changed()
    End Sub
    Partial Private Sub OnTelephone_numberChanging(value As String)
    End Sub
    Partial Private Sub OnTelephone_numberChanged()
    End Sub
    Partial Private Sub Onfax_numberChanging(value As String)
    End Sub
    Partial Private Sub Onfax_numberChanged()
    End Sub
    Partial Private Sub OnemailChanging(value As String)
    End Sub
    Partial Private Sub OnemailChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnList_PriceChanging(value As String)
    End Sub
    Partial Private Sub OnList_PriceChanged()
    End Sub
    Partial Private Sub OnStandard_CostChanging(value As String)
    End Sub
    Partial Private Sub OnStandard_CostChanged()
    End Sub
    Partial Private Sub OnReorder_LevelChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnReorder_LevelChanged()
    End Sub
    Partial Private Sub OnTarget_LevelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTarget_LevelChanged()
    End Sub
    Partial Private Sub OnStart_date_of_CertificateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStart_date_of_CertificateChanged()
    End Sub
    Partial Private Sub OnExpiry_date_of_CertificateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiry_date_of_CertificateChanged()
    End Sub
    Partial Private Sub OnNumber_of_CertificateChanging(value As String)
    End Sub
    Partial Private Sub OnNumber_of_CertificateChanged()
    End Sub
    Partial Private Sub OnQuantity_Per_UnitChanging(value As String)
    End Sub
    Partial Private Sub OnQuantity_Per_UnitChanged()
    End Sub
    Partial Private Sub OnDiscontinuedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDiscontinuedChanged()
    End Sub
    Partial Private Sub OnMinimum_Reorder_QuantityChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMinimum_Reorder_QuantityChanged()
    End Sub
    Partial Private Sub OnAttachmentsChanging(value As String)
    End Sub
    Partial Private Sub OnAttachmentsChanged()
    End Sub
    Partial Private Sub Ongeneral_medicineChanging(value As String)
    End Sub
    Partial Private Sub Ongeneral_medicineChanged()
    End Sub
    Partial Private Sub OnPenicillinChanging(value As String)
    End Sub
    Partial Private Sub OnPenicillinChanged()
    End Sub
    Partial Private Sub OnCephalosporinChanging(value As String)
    End Sub
    Partial Private Sub OnCephalosporinChanged()
    End Sub
    Partial Private Sub OnCarbapenemChanging(value As String)
    End Sub
    Partial Private Sub OnCarbapenemChanged()
    End Sub
    Partial Private Sub OnSex_hormoneChanging(value As String)
    End Sub
    Partial Private Sub OnSex_hormoneChanged()
    End Sub
    Partial Private Sub Onetc__ระบุ_Changing(value As String)
    End Sub
    Partial Private Sub Onetc__ระบุ_Changed()
    End Sub
    Partial Private Sub OncategoryChanging(value As String)
    End Sub
    Partial Private Sub OncategoryChanged()
    End Sub
    Partial Private Sub OnnoteChanging(value As String)
    End Sub
    Partial Private Sub OnnoteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Supplier IDs]", Storage:="_Supplier_IDs", DbType:="VarChar(8000)")>  _
	Public Property Supplier_IDs() As String
		Get
			Return Me._Supplier_IDs
		End Get
		Set
			If (String.Equals(Me._Supplier_IDs, value) = false) Then
				Me.OnSupplier_IDsChanging(value)
				Me.SendPropertyChanging
				Me._Supplier_IDs = value
				Me.SendPropertyChanged("Supplier_IDs")
				Me.OnSupplier_IDsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Product Name]", Storage:="_Product_Name", DbType:="NVarChar(100)")>  _
	Public Property Product_Name() As String
		Get
			Return Me._Product_Name
		End Get
		Set
			If (String.Equals(Me._Product_Name, value) = false) Then
				Me.OnProduct_NameChanging(value)
				Me.SendPropertyChanging
				Me._Product_Name = value
				Me.SendPropertyChanged("Product_Name")
				Me.OnProduct_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Product Code]", Storage:="_Product_Code", DbType:="NVarChar(243)")>  _
	Public Property Product_Code() As String
		Get
			Return Me._Product_Code
		End Get
		Set
			If (String.Equals(Me._Product_Code, value) = false) Then
				Me.OnProduct_CodeChanging(value)
				Me.SendPropertyChanging
				Me._Product_Code = value
				Me.SendPropertyChanged("Product_Code")
				Me.OnProduct_CodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_License", DbType:="NVarChar(100)")>  _
	Public Property License() As String
		Get
			Return Me._License
		End Get
		Set
			If (String.Equals(Me._License, value) = false) Then
				Me.OnLicenseChanging(value)
				Me.SendPropertyChanging
				Me._License = value
				Me.SendPropertyChanged("License")
				Me.OnLicenseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[License original]", Storage:="_License_original", DbType:="NVarChar(20)")>  _
	Public Property License_original() As String
		Get
			Return Me._License_original
		End Get
		Set
			If (String.Equals(Me._License_original, value) = false) Then
				Me.OnLicense_originalChanging(value)
				Me.SendPropertyChanging
				Me._License_original = value
				Me.SendPropertyChanged("License_original")
				Me.OnLicense_originalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(243)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(243)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[num address]", Storage:="_num_address", DbType:="NVarChar(100)")>  _
	Public Property num_address() As String
		Get
			Return Me._num_address
		End Get
		Set
			If (String.Equals(Me._num_address, value) = false) Then
				Me.Onnum_addressChanging(value)
				Me.SendPropertyChanging
				Me._num_address = value
				Me.SendPropertyChanged("num_address")
				Me.Onnum_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[nikom and arcarn]", Storage:="_nikom_and_arcarn", DbType:="NVarChar(100)")>  _
	Public Property nikom_and_arcarn() As String
		Get
			Return Me._nikom_and_arcarn
		End Get
		Set
			If (String.Equals(Me._nikom_and_arcarn, value) = false) Then
				Me.Onnikom_and_arcarnChanging(value)
				Me.SendPropertyChanging
				Me._nikom_and_arcarn = value
				Me.SendPropertyChanged("nikom_and_arcarn")
				Me.Onnikom_and_arcarnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_moo", DbType:="NVarChar(10)")>  _
	Public Property moo() As String
		Get
			Return Me._moo
		End Get
		Set
			If (String.Equals(Me._moo, value) = false) Then
				Me.OnmooChanging(value)
				Me.SendPropertyChanging
				Me._moo = value
				Me.SendPropertyChanged("moo")
				Me.OnmooChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_soi", DbType:="NVarChar(100)")>  _
	Public Property soi() As String
		Get
			Return Me._soi
		End Get
		Set
			If (String.Equals(Me._soi, value) = false) Then
				Me.OnsoiChanging(value)
				Me.SendPropertyChanging
				Me._soi = value
				Me.SendPropertyChanged("soi")
				Me.OnsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_road", DbType:="NVarChar(100)")>  _
	Public Property road() As String
		Get
			Return Me._road
		End Get
		Set
			If (String.Equals(Me._road, value) = false) Then
				Me.OnroadChanging(value)
				Me.SendPropertyChanging
				Me._road = value
				Me.SendPropertyChanged("road")
				Me.OnroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tambol", DbType:="NVarChar(100)")>  _
	Public Property tambol() As String
		Get
			Return Me._tambol
		End Get
		Set
			If (String.Equals(Me._tambol, value) = false) Then
				Me.OntambolChanging(value)
				Me.SendPropertyChanging
				Me._tambol = value
				Me.SendPropertyChanged("tambol")
				Me.OntambolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphure", DbType:="NVarChar(100)")>  _
	Public Property amphure() As String
		Get
			Return Me._amphure
		End Get
		Set
			If (String.Equals(Me._amphure, value) = false) Then
				Me.OnamphureChanging(value)
				Me.SendPropertyChanging
				Me._amphure = value
				Me.SendPropertyChanged("amphure")
				Me.OnamphureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Provinces", DbType:="NVarChar(100)")>  _
	Public Property Provinces() As String
		Get
			Return Me._Provinces
		End Get
		Set
			If (String.Equals(Me._Provinces, value) = false) Then
				Me.OnProvincesChanging(value)
				Me.SendPropertyChanging
				Me._Provinces = value
				Me.SendPropertyChanged("Provinces")
				Me.OnProvincesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Zip/Postal code]", Storage:="_Zip_Postal_code", DbType:="NVarChar(255)")>  _
	Public Property Zip_Postal_code() As String
		Get
			Return Me._Zip_Postal_code
		End Get
		Set
			If (String.Equals(Me._Zip_Postal_code, value) = false) Then
				Me.OnZip_Postal_codeChanging(value)
				Me.SendPropertyChanging
				Me._Zip_Postal_code = value
				Me.SendPropertyChanged("Zip_Postal_code")
				Me.OnZip_Postal_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_contact1", DbType:="NVarChar(100)")>  _
	Public Property contact1() As String
		Get
			Return Me._contact1
		End Get
		Set
			If (String.Equals(Me._contact1, value) = false) Then
				Me.Oncontact1Changing(value)
				Me.SendPropertyChanging
				Me._contact1 = value
				Me.SendPropertyChanged("contact1")
				Me.Oncontact1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Telephone number]", Storage:="_Telephone_number", DbType:="NVarChar(50)")>  _
	Public Property Telephone_number() As String
		Get
			Return Me._Telephone_number
		End Get
		Set
			If (String.Equals(Me._Telephone_number, value) = false) Then
				Me.OnTelephone_numberChanging(value)
				Me.SendPropertyChanging
				Me._Telephone_number = value
				Me.SendPropertyChanged("Telephone_number")
				Me.OnTelephone_numberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[fax number]", Storage:="_fax_number", DbType:="NVarChar(50)")>  _
	Public Property fax_number() As String
		Get
			Return Me._fax_number
		End Get
		Set
			If (String.Equals(Me._fax_number, value) = false) Then
				Me.Onfax_numberChanging(value)
				Me.SendPropertyChanging
				Me._fax_number = value
				Me.SendPropertyChanged("fax_number")
				Me.Onfax_numberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email", DbType:="NVarChar(100)")>  _
	Public Property email() As String
		Get
			Return Me._email
		End Get
		Set
			If (String.Equals(Me._email, value) = false) Then
				Me.OnemailChanging(value)
				Me.SendPropertyChanging
				Me._email = value
				Me.SendPropertyChanged("email")
				Me.OnemailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[List Price]", Storage:="_List_Price", DbType:="NVarChar(255)")>  _
	Public Property List_Price() As String
		Get
			Return Me._List_Price
		End Get
		Set
			If (String.Equals(Me._List_Price, value) = false) Then
				Me.OnList_PriceChanging(value)
				Me.SendPropertyChanging
				Me._List_Price = value
				Me.SendPropertyChanged("List_Price")
				Me.OnList_PriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Standard Cost]", Storage:="_Standard_Cost", DbType:="NVarChar(10)")>  _
	Public Property Standard_Cost() As String
		Get
			Return Me._Standard_Cost
		End Get
		Set
			If (String.Equals(Me._Standard_Cost, value) = false) Then
				Me.OnStandard_CostChanging(value)
				Me.SendPropertyChanging
				Me._Standard_Cost = value
				Me.SendPropertyChanged("Standard_Cost")
				Me.OnStandard_CostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Reorder Level]", Storage:="_Reorder_Level", DbType:="SmallInt")>  _
	Public Property Reorder_Level() As System.Nullable(Of Short)
		Get
			Return Me._Reorder_Level
		End Get
		Set
			If (Me._Reorder_Level.Equals(value) = false) Then
				Me.OnReorder_LevelChanging(value)
				Me.SendPropertyChanging
				Me._Reorder_Level = value
				Me.SendPropertyChanged("Reorder_Level")
				Me.OnReorder_LevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Target Level]", Storage:="_Target_Level", DbType:="Int")>  _
	Public Property Target_Level() As System.Nullable(Of Integer)
		Get
			Return Me._Target_Level
		End Get
		Set
			If (Me._Target_Level.Equals(value) = false) Then
				Me.OnTarget_LevelChanging(value)
				Me.SendPropertyChanging
				Me._Target_Level = value
				Me.SendPropertyChanged("Target_Level")
				Me.OnTarget_LevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Start date of Certificate]", Storage:="_Start_date_of_Certificate", DbType:="DateTime2")>  _
	Public Property Start_date_of_Certificate() As System.Nullable(Of Date)
		Get
			Return Me._Start_date_of_Certificate
		End Get
		Set
			If (Me._Start_date_of_Certificate.Equals(value) = false) Then
				Me.OnStart_date_of_CertificateChanging(value)
				Me.SendPropertyChanging
				Me._Start_date_of_Certificate = value
				Me.SendPropertyChanged("Start_date_of_Certificate")
				Me.OnStart_date_of_CertificateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Expiry date of Certificate]", Storage:="_Expiry_date_of_Certificate", DbType:="DateTime2")>  _
	Public Property Expiry_date_of_Certificate() As System.Nullable(Of Date)
		Get
			Return Me._Expiry_date_of_Certificate
		End Get
		Set
			If (Me._Expiry_date_of_Certificate.Equals(value) = false) Then
				Me.OnExpiry_date_of_CertificateChanging(value)
				Me.SendPropertyChanging
				Me._Expiry_date_of_Certificate = value
				Me.SendPropertyChanged("Expiry_date_of_Certificate")
				Me.OnExpiry_date_of_CertificateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Number of Certificate]", Storage:="_Number_of_Certificate", DbType:="NVarChar(255)")>  _
	Public Property Number_of_Certificate() As String
		Get
			Return Me._Number_of_Certificate
		End Get
		Set
			If (String.Equals(Me._Number_of_Certificate, value) = false) Then
				Me.OnNumber_of_CertificateChanging(value)
				Me.SendPropertyChanging
				Me._Number_of_Certificate = value
				Me.SendPropertyChanged("Number_of_Certificate")
				Me.OnNumber_of_CertificateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Quantity Per Unit]", Storage:="_Quantity_Per_Unit", DbType:="NVarChar(50)")>  _
	Public Property Quantity_Per_Unit() As String
		Get
			Return Me._Quantity_Per_Unit
		End Get
		Set
			If (String.Equals(Me._Quantity_Per_Unit, value) = false) Then
				Me.OnQuantity_Per_UnitChanging(value)
				Me.SendPropertyChanging
				Me._Quantity_Per_Unit = value
				Me.SendPropertyChanged("Quantity_Per_Unit")
				Me.OnQuantity_Per_UnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discontinued", DbType:="Bit NOT NULL")>  _
	Public Property Discontinued() As Boolean
		Get
			Return Me._Discontinued
		End Get
		Set
			If ((Me._Discontinued = value)  _
						= false) Then
				Me.OnDiscontinuedChanging(value)
				Me.SendPropertyChanging
				Me._Discontinued = value
				Me.SendPropertyChanged("Discontinued")
				Me.OnDiscontinuedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Minimum Reorder Quantity]", Storage:="_Minimum_Reorder_Quantity", DbType:="SmallInt")>  _
	Public Property Minimum_Reorder_Quantity() As System.Nullable(Of Short)
		Get
			Return Me._Minimum_Reorder_Quantity
		End Get
		Set
			If (Me._Minimum_Reorder_Quantity.Equals(value) = false) Then
				Me.OnMinimum_Reorder_QuantityChanging(value)
				Me.SendPropertyChanging
				Me._Minimum_Reorder_Quantity = value
				Me.SendPropertyChanged("Minimum_Reorder_Quantity")
				Me.OnMinimum_Reorder_QuantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Attachments", DbType:="VarChar(8000)")>  _
	Public Property Attachments() As String
		Get
			Return Me._Attachments
		End Get
		Set
			If (String.Equals(Me._Attachments, value) = false) Then
				Me.OnAttachmentsChanging(value)
				Me.SendPropertyChanging
				Me._Attachments = value
				Me.SendPropertyChanged("Attachments")
				Me.OnAttachmentsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[general medicine]", Storage:="_general_medicine", DbType:="VarChar(8000)")>  _
	Public Property general_medicine() As String
		Get
			Return Me._general_medicine
		End Get
		Set
			If (String.Equals(Me._general_medicine, value) = false) Then
				Me.Ongeneral_medicineChanging(value)
				Me.SendPropertyChanging
				Me._general_medicine = value
				Me.SendPropertyChanged("general_medicine")
				Me.Ongeneral_medicineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Penicillin", DbType:="VarChar(8000)")>  _
	Public Property Penicillin() As String
		Get
			Return Me._Penicillin
		End Get
		Set
			If (String.Equals(Me._Penicillin, value) = false) Then
				Me.OnPenicillinChanging(value)
				Me.SendPropertyChanging
				Me._Penicillin = value
				Me.SendPropertyChanged("Penicillin")
				Me.OnPenicillinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cephalosporin", DbType:="VarChar(8000)")>  _
	Public Property Cephalosporin() As String
		Get
			Return Me._Cephalosporin
		End Get
		Set
			If (String.Equals(Me._Cephalosporin, value) = false) Then
				Me.OnCephalosporinChanging(value)
				Me.SendPropertyChanging
				Me._Cephalosporin = value
				Me.SendPropertyChanged("Cephalosporin")
				Me.OnCephalosporinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Carbapenem", DbType:="VarChar(8000)")>  _
	Public Property Carbapenem() As String
		Get
			Return Me._Carbapenem
		End Get
		Set
			If (String.Equals(Me._Carbapenem, value) = false) Then
				Me.OnCarbapenemChanging(value)
				Me.SendPropertyChanging
				Me._Carbapenem = value
				Me.SendPropertyChanged("Carbapenem")
				Me.OnCarbapenemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Sex hormone]", Storage:="_Sex_hormone", DbType:="VarChar(8000)")>  _
	Public Property Sex_hormone() As String
		Get
			Return Me._Sex_hormone
		End Get
		Set
			If (String.Equals(Me._Sex_hormone, value) = false) Then
				Me.OnSex_hormoneChanging(value)
				Me.SendPropertyChanging
				Me._Sex_hormone = value
				Me.SendPropertyChanged("Sex_hormone")
				Me.OnSex_hormoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[etc (ระบุ)]", Storage:="_etc__ระบุ_", DbType:="NVarChar(255)")>  _
	Public Property etc__ระบุ_() As String
		Get
			Return Me._etc__ระบุ_
		End Get
		Set
			If (String.Equals(Me._etc__ระบุ_, value) = false) Then
				Me.Onetc__ระบุ_Changing(value)
				Me.SendPropertyChanging
				Me._etc__ระบุ_ = value
				Me.SendPropertyChanged("etc__ระบุ_")
				Me.Onetc__ระบุ_Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_category", DbType:="NVarChar(100)")>  _
	Public Property category() As String
		Get
			Return Me._category
		End Get
		Set
			If (String.Equals(Me._category, value) = false) Then
				Me.OncategoryChanging(value)
				Me.SendPropertyChanging
				Me._category = value
				Me.SendPropertyChanged("category")
				Me.OncategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_note", DbType:="NVarChar(MAX)")>  _
	Public Property note() As String
		Get
			Return Me._note
		End Get
		Set
			If (String.Equals(Me._note, value) = false) Then
				Me.OnnoteChanging(value)
				Me.SendPropertyChanging
				Me._note = value
				Me.SendPropertyChanged("note")
				Me.OnnoteChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[PLAN]")>  _
Partial Public Class PLAN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Plan_requested_date As System.Nullable(Of Date)
	
	Private _Plan_No_Cer As String
	
	Private _Plan_Number As System.Nullable(Of Integer)
	
	Private _Plan_TYPE As System.Nullable(Of Integer)
	
	Private _Plan_price As System.Nullable(Of Double)
	
	Private _Plan_date As System.Nullable(Of Date)
	
	Private _Plan_PHR_IDA As System.Nullable(Of Integer)
	
	Private _Plan_PHR_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPlan_requested_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPlan_requested_dateChanged()
    End Sub
    Partial Private Sub OnPlan_No_CerChanging(value As String)
    End Sub
    Partial Private Sub OnPlan_No_CerChanged()
    End Sub
    Partial Private Sub OnPlan_NumberChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPlan_NumberChanged()
    End Sub
    Partial Private Sub OnPlan_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPlan_TYPEChanged()
    End Sub
    Partial Private Sub OnPlan_priceChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPlan_priceChanged()
    End Sub
    Partial Private Sub OnPlan_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPlan_dateChanged()
    End Sub
    Partial Private Sub OnPlan_PHR_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPlan_PHR_IDAChanged()
    End Sub
    Partial Private Sub OnPlan_PHR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPlan_PHR_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_requested_date", DbType:="DateTime")>  _
	Public Property Plan_requested_date() As System.Nullable(Of Date)
		Get
			Return Me._Plan_requested_date
		End Get
		Set
			If (Me._Plan_requested_date.Equals(value) = false) Then
				Me.OnPlan_requested_dateChanging(value)
				Me.SendPropertyChanging
				Me._Plan_requested_date = value
				Me.SendPropertyChanged("Plan_requested_date")
				Me.OnPlan_requested_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_No_Cer", DbType:="NVarChar(MAX)")>  _
	Public Property Plan_No_Cer() As String
		Get
			Return Me._Plan_No_Cer
		End Get
		Set
			If (String.Equals(Me._Plan_No_Cer, value) = false) Then
				Me.OnPlan_No_CerChanging(value)
				Me.SendPropertyChanging
				Me._Plan_No_Cer = value
				Me.SendPropertyChanged("Plan_No_Cer")
				Me.OnPlan_No_CerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_Number", DbType:="Int")>  _
	Public Property Plan_Number() As System.Nullable(Of Integer)
		Get
			Return Me._Plan_Number
		End Get
		Set
			If (Me._Plan_Number.Equals(value) = false) Then
				Me.OnPlan_NumberChanging(value)
				Me.SendPropertyChanging
				Me._Plan_Number = value
				Me.SendPropertyChanged("Plan_Number")
				Me.OnPlan_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_TYPE", DbType:="Int")>  _
	Public Property Plan_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._Plan_TYPE
		End Get
		Set
			If (Me._Plan_TYPE.Equals(value) = false) Then
				Me.OnPlan_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._Plan_TYPE = value
				Me.SendPropertyChanged("Plan_TYPE")
				Me.OnPlan_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_price", DbType:="Float")>  _
	Public Property Plan_price() As System.Nullable(Of Double)
		Get
			Return Me._Plan_price
		End Get
		Set
			If (Me._Plan_price.Equals(value) = false) Then
				Me.OnPlan_priceChanging(value)
				Me.SendPropertyChanging
				Me._Plan_price = value
				Me.SendPropertyChanged("Plan_price")
				Me.OnPlan_priceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_date", DbType:="DateTime")>  _
	Public Property Plan_date() As System.Nullable(Of Date)
		Get
			Return Me._Plan_date
		End Get
		Set
			If (Me._Plan_date.Equals(value) = false) Then
				Me.OnPlan_dateChanging(value)
				Me.SendPropertyChanging
				Me._Plan_date = value
				Me.SendPropertyChanged("Plan_date")
				Me.OnPlan_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_PHR_IDA", DbType:="Int")>  _
	Public Property Plan_PHR_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._Plan_PHR_IDA
		End Get
		Set
			If (Me._Plan_PHR_IDA.Equals(value) = false) Then
				Me.OnPlan_PHR_IDAChanging(value)
				Me.SendPropertyChanging
				Me._Plan_PHR_IDA = value
				Me.SendPropertyChanged("Plan_PHR_IDA")
				Me.OnPlan_PHR_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_PHR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property Plan_PHR_NAME() As String
		Get
			Return Me._Plan_PHR_NAME
		End Get
		Set
			If (String.Equals(Me._Plan_PHR_NAME, value) = false) Then
				Me.OnPlan_PHR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._Plan_PHR_NAME = value
				Me.SendPropertyChanged("Plan_PHR_NAME")
				Me.OnPlan_PHR_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PLAN_CONSIDER")>  _
Partial Public Class PLAN_CONSIDER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _XML_IDA As System.Nullable(Of Integer)
	
	Private _REF_CODE As String
	
	Private _TITLE As String
	
	Private _DETAIL As String
	
	Private _CITIZEN_ID As String
	
	Private _DATE_CREATE As System.Nullable(Of Date)
	
	Private _DATE_MODIFIED As System.Nullable(Of Date)
	
	Private _REMARK As String
	
	Private _CITIZEN_CONSIDER As String
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _STATUS As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnXML_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnXML_IDAChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnTITLEChanging(value As String)
    End Sub
    Partial Private Sub OnTITLEChanged()
    End Sub
    Partial Private Sub OnDETAILChanging(value As String)
    End Sub
    Partial Private Sub OnDETAILChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnDATE_CREATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CREATEChanged()
    End Sub
    Partial Private Sub OnDATE_MODIFIEDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_MODIFIEDChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnCITIZEN_CONSIDERChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_CONSIDERChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_IDA", DbType:="Int")>  _
	Public Property XML_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._XML_IDA
		End Get
		Set
			If (Me._XML_IDA.Equals(value) = false) Then
				Me.OnXML_IDAChanging(value)
				Me.SendPropertyChanging
				Me._XML_IDA = value
				Me.SendPropertyChanged("XML_IDA")
				Me.OnXML_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TITLE", DbType:="NVarChar(MAX)")>  _
	Public Property TITLE() As String
		Get
			Return Me._TITLE
		End Get
		Set
			If (String.Equals(Me._TITLE, value) = false) Then
				Me.OnTITLEChanging(value)
				Me.SendPropertyChanging
				Me._TITLE = value
				Me.SendPropertyChanged("TITLE")
				Me.OnTITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property DETAIL() As String
		Get
			Return Me._DETAIL
		End Get
		Set
			If (String.Equals(Me._DETAIL, value) = false) Then
				Me.OnDETAILChanging(value)
				Me.SendPropertyChanging
				Me._DETAIL = value
				Me.SendPropertyChanged("DETAIL")
				Me.OnDETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CREATE", DbType:="DateTime")>  _
	Public Property DATE_CREATE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CREATE
		End Get
		Set
			If (Me._DATE_CREATE.Equals(value) = false) Then
				Me.OnDATE_CREATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_CREATE = value
				Me.SendPropertyChanged("DATE_CREATE")
				Me.OnDATE_CREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_MODIFIED", DbType:="DateTime")>  _
	Public Property DATE_MODIFIED() As System.Nullable(Of Date)
		Get
			Return Me._DATE_MODIFIED
		End Get
		Set
			If (Me._DATE_MODIFIED.Equals(value) = false) Then
				Me.OnDATE_MODIFIEDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_MODIFIED = value
				Me.SendPropertyChanged("DATE_MODIFIED")
				Me.OnDATE_MODIFIEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_CONSIDER", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_CONSIDER() As String
		Get
			Return Me._CITIZEN_CONSIDER
		End Get
		Set
			If (String.Equals(Me._CITIZEN_CONSIDER, value) = false) Then
				Me.OnCITIZEN_CONSIDERChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_CONSIDER = value
				Me.SendPropertyChanged("CITIZEN_CONSIDER")
				Me.OnCITIZEN_CONSIDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PLAN_NEW")>  _
Partial Public Class PLAN_NEW
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_XML As System.Nullable(Of Integer)
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _PLACE_NM As String
	
	Private _AMPHUR_NM As String
	
	Private _AMPHUR_CD As System.Nullable(Of Integer)
	
	Private _CHNGWT_NM As String
	
	Private _CHNGWT_CD As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _LEAD_INSPECT As String
	
	Private _LEAD_INSPECT_IDA As System.Nullable(Of Integer)
	
	Private _INVESTIGATE_TYPE As String
	
	Private _INVESTIGATE_TYPECD As System.Nullable(Of Integer)
	
	Private _LAST_INVESTIGATE_DATE As System.Nullable(Of Date)
	
	Private _INVESTIGATE_DATE_START As System.Nullable(Of Date)
	
	Private _INVESTIGATE_DATE_END As System.Nullable(Of Date)
	
	Private _CER_EXPIRE_DATE As System.Nullable(Of Date)
	
	Private _REMARK As String
	
	Private _POSTPONE As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _PLAN_COLOR As String
	
	Private _ACTIVE As System.Nullable(Of Integer)
	
	Private _ISLOCK As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
	Private _REF_CODE As String
	
	Private _Long_address As String
	
	Private _Permit_Number As String
	
	Private _Dummy_INVESTIGATE_TYPE As String
	
	Private _Operation_Number As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _VERSION As System.Nullable(Of Integer)
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _REQUEST_EDIT As System.Nullable(Of Integer)
	
	Private _REQUEST_EDIT_DATE As System.Nullable(Of Date)
	
	Private _REF_CAPA_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_XMLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_XMLChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnPLACE_NMChanging(value As String)
    End Sub
    Partial Private Sub OnPLACE_NMChanged()
    End Sub
    Partial Private Sub OnAMPHUR_NMChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHUR_NMChanged()
    End Sub
    Partial Private Sub OnAMPHUR_CDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAMPHUR_CDChanged()
    End Sub
    Partial Private Sub OnCHNGWT_NMChanging(value As String)
    End Sub
    Partial Private Sub OnCHNGWT_NMChanged()
    End Sub
    Partial Private Sub OnCHNGWT_CDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHNGWT_CDChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnLEAD_INSPECTChanging(value As String)
    End Sub
    Partial Private Sub OnLEAD_INSPECTChanged()
    End Sub
    Partial Private Sub OnLEAD_INSPECT_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLEAD_INSPECT_IDAChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPEChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPECDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPECDChanged()
    End Sub
    Partial Private Sub OnLAST_INVESTIGATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAST_INVESTIGATE_DATEChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_STARTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_STARTChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_ENDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_ENDChanged()
    End Sub
    Partial Private Sub OnCER_EXPIRE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_EXPIRE_DATEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnPOSTPONEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSTPONEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnPLAN_COLORChanging(value As String)
    End Sub
    Partial Private Sub OnPLAN_COLORChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    Partial Private Sub OnISLOCKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnISLOCKChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnLong_addressChanging(value As String)
    End Sub
    Partial Private Sub OnLong_addressChanged()
    End Sub
    Partial Private Sub OnPermit_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnPermit_NumberChanged()
    End Sub
    Partial Private Sub OnDummy_INVESTIGATE_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnDummy_INVESTIGATE_TYPEChanged()
    End Sub
    Partial Private Sub OnOperation_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnOperation_NumberChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnVERSIONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVERSIONChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnREQUEST_EDITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREQUEST_EDITChanged()
    End Sub
    Partial Private Sub OnREQUEST_EDIT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_EDIT_DATEChanged()
    End Sub
    Partial Private Sub OnREF_CAPA_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREF_CAPA_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_XML", DbType:="Int")>  _
	Public Property FK_XML() As System.Nullable(Of Integer)
		Get
			Return Me._FK_XML
		End Get
		Set
			If (Me._FK_XML.Equals(value) = false) Then
				Me.OnFK_XMLChanging(value)
				Me.SendPropertyChanging
				Me._FK_XML = value
				Me.SendPropertyChanged("FK_XML")
				Me.OnFK_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACE_NM", DbType:="NVarChar(MAX)")>  _
	Public Property PLACE_NM() As String
		Get
			Return Me._PLACE_NM
		End Get
		Set
			If (String.Equals(Me._PLACE_NM, value) = false) Then
				Me.OnPLACE_NMChanging(value)
				Me.SendPropertyChanging
				Me._PLACE_NM = value
				Me.SendPropertyChanged("PLACE_NM")
				Me.OnPLACE_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_NM", DbType:="NVarChar(MAX)")>  _
	Public Property AMPHUR_NM() As String
		Get
			Return Me._AMPHUR_NM
		End Get
		Set
			If (String.Equals(Me._AMPHUR_NM, value) = false) Then
				Me.OnAMPHUR_NMChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_NM = value
				Me.SendPropertyChanged("AMPHUR_NM")
				Me.OnAMPHUR_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_CD", DbType:="Int")>  _
	Public Property AMPHUR_CD() As System.Nullable(Of Integer)
		Get
			Return Me._AMPHUR_CD
		End Get
		Set
			If (Me._AMPHUR_CD.Equals(value) = false) Then
				Me.OnAMPHUR_CDChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_CD = value
				Me.SendPropertyChanged("AMPHUR_CD")
				Me.OnAMPHUR_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWT_NM", DbType:="NVarChar(MAX)")>  _
	Public Property CHNGWT_NM() As String
		Get
			Return Me._CHNGWT_NM
		End Get
		Set
			If (String.Equals(Me._CHNGWT_NM, value) = false) Then
				Me.OnCHNGWT_NMChanging(value)
				Me.SendPropertyChanging
				Me._CHNGWT_NM = value
				Me.SendPropertyChanged("CHNGWT_NM")
				Me.OnCHNGWT_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWT_CD", DbType:="Int")>  _
	Public Property CHNGWT_CD() As System.Nullable(Of Integer)
		Get
			Return Me._CHNGWT_CD
		End Get
		Set
			If (Me._CHNGWT_CD.Equals(value) = false) Then
				Me.OnCHNGWT_CDChanging(value)
				Me.SendPropertyChanging
				Me._CHNGWT_CD = value
				Me.SendPropertyChanged("CHNGWT_CD")
				Me.OnCHNGWT_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_INSPECT", DbType:="NVarChar(MAX)")>  _
	Public Property LEAD_INSPECT() As String
		Get
			Return Me._LEAD_INSPECT
		End Get
		Set
			If (String.Equals(Me._LEAD_INSPECT, value) = false) Then
				Me.OnLEAD_INSPECTChanging(value)
				Me.SendPropertyChanging
				Me._LEAD_INSPECT = value
				Me.SendPropertyChanged("LEAD_INSPECT")
				Me.OnLEAD_INSPECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_INSPECT_IDA", DbType:="Int")>  _
	Public Property LEAD_INSPECT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LEAD_INSPECT_IDA
		End Get
		Set
			If (Me._LEAD_INSPECT_IDA.Equals(value) = false) Then
				Me.OnLEAD_INSPECT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LEAD_INSPECT_IDA = value
				Me.SendPropertyChanged("LEAD_INSPECT_IDA")
				Me.OnLEAD_INSPECT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property INVESTIGATE_TYPE() As String
		Get
			Return Me._INVESTIGATE_TYPE
		End Get
		Set
			If (String.Equals(Me._INVESTIGATE_TYPE, value) = false) Then
				Me.OnINVESTIGATE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_TYPE = value
				Me.SendPropertyChanged("INVESTIGATE_TYPE")
				Me.OnINVESTIGATE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_TYPECD", DbType:="Int")>  _
	Public Property INVESTIGATE_TYPECD() As System.Nullable(Of Integer)
		Get
			Return Me._INVESTIGATE_TYPECD
		End Get
		Set
			If (Me._INVESTIGATE_TYPECD.Equals(value) = false) Then
				Me.OnINVESTIGATE_TYPECDChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_TYPECD = value
				Me.SendPropertyChanged("INVESTIGATE_TYPECD")
				Me.OnINVESTIGATE_TYPECDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_INVESTIGATE_DATE", DbType:="DateTime")>  _
	Public Property LAST_INVESTIGATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAST_INVESTIGATE_DATE
		End Get
		Set
			If (Me._LAST_INVESTIGATE_DATE.Equals(value) = false) Then
				Me.OnLAST_INVESTIGATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_INVESTIGATE_DATE = value
				Me.SendPropertyChanged("LAST_INVESTIGATE_DATE")
				Me.OnLAST_INVESTIGATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_DATE_START", DbType:="DateTime")>  _
	Public Property INVESTIGATE_DATE_START() As System.Nullable(Of Date)
		Get
			Return Me._INVESTIGATE_DATE_START
		End Get
		Set
			If (Me._INVESTIGATE_DATE_START.Equals(value) = false) Then
				Me.OnINVESTIGATE_DATE_STARTChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_DATE_START = value
				Me.SendPropertyChanged("INVESTIGATE_DATE_START")
				Me.OnINVESTIGATE_DATE_STARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_DATE_END", DbType:="DateTime")>  _
	Public Property INVESTIGATE_DATE_END() As System.Nullable(Of Date)
		Get
			Return Me._INVESTIGATE_DATE_END
		End Get
		Set
			If (Me._INVESTIGATE_DATE_END.Equals(value) = false) Then
				Me.OnINVESTIGATE_DATE_ENDChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_DATE_END = value
				Me.SendPropertyChanged("INVESTIGATE_DATE_END")
				Me.OnINVESTIGATE_DATE_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_EXPIRE_DATE", DbType:="DateTime")>  _
	Public Property CER_EXPIRE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_EXPIRE_DATE
		End Get
		Set
			If (Me._CER_EXPIRE_DATE.Equals(value) = false) Then
				Me.OnCER_EXPIRE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_EXPIRE_DATE = value
				Me.SendPropertyChanged("CER_EXPIRE_DATE")
				Me.OnCER_EXPIRE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE", DbType:="NVarChar(MAX)")>  _
	Public Property POSTPONE() As String
		Get
			Return Me._POSTPONE
		End Get
		Set
			If (String.Equals(Me._POSTPONE, value) = false) Then
				Me.OnPOSTPONEChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE = value
				Me.SendPropertyChanged("POSTPONE")
				Me.OnPOSTPONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_COLOR", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_COLOR() As String
		Get
			Return Me._PLAN_COLOR
		End Get
		Set
			If (String.Equals(Me._PLAN_COLOR, value) = false) Then
				Me.OnPLAN_COLORChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_COLOR = value
				Me.SendPropertyChanged("PLAN_COLOR")
				Me.OnPLAN_COLORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Int")>  _
	Public Property ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISLOCK", DbType:="Int")>  _
	Public Property ISLOCK() As System.Nullable(Of Integer)
		Get
			Return Me._ISLOCK
		End Get
		Set
			If (Me._ISLOCK.Equals(value) = false) Then
				Me.OnISLOCKChanging(value)
				Me.SendPropertyChanging
				Me._ISLOCK = value
				Me.SendPropertyChanged("ISLOCK")
				Me.OnISLOCKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(MAX)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Long_address", DbType:="NVarChar(MAX)")>  _
	Public Property Long_address() As String
		Get
			Return Me._Long_address
		End Get
		Set
			If (String.Equals(Me._Long_address, value) = false) Then
				Me.OnLong_addressChanging(value)
				Me.SendPropertyChanging
				Me._Long_address = value
				Me.SendPropertyChanged("Long_address")
				Me.OnLong_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Permit_Number", DbType:="NVarChar(MAX)")>  _
	Public Property Permit_Number() As String
		Get
			Return Me._Permit_Number
		End Get
		Set
			If (String.Equals(Me._Permit_Number, value) = false) Then
				Me.OnPermit_NumberChanging(value)
				Me.SendPropertyChanging
				Me._Permit_Number = value
				Me.SendPropertyChanged("Permit_Number")
				Me.OnPermit_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dummy_INVESTIGATE_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property Dummy_INVESTIGATE_TYPE() As String
		Get
			Return Me._Dummy_INVESTIGATE_TYPE
		End Get
		Set
			If (String.Equals(Me._Dummy_INVESTIGATE_TYPE, value) = false) Then
				Me.OnDummy_INVESTIGATE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._Dummy_INVESTIGATE_TYPE = value
				Me.SendPropertyChanged("Dummy_INVESTIGATE_TYPE")
				Me.OnDummy_INVESTIGATE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Operation_Number", DbType:="NVarChar(50)")>  _
	Public Property Operation_Number() As String
		Get
			Return Me._Operation_Number
		End Get
		Set
			If (String.Equals(Me._Operation_Number, value) = false) Then
				Me.OnOperation_NumberChanging(value)
				Me.SendPropertyChanging
				Me._Operation_Number = value
				Me.SendPropertyChanged("Operation_Number")
				Me.OnOperation_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VERSION", DbType:="Int")>  _
	Public Property VERSION() As System.Nullable(Of Integer)
		Get
			Return Me._VERSION
		End Get
		Set
			If (Me._VERSION.Equals(value) = false) Then
				Me.OnVERSIONChanging(value)
				Me.SendPropertyChanging
				Me._VERSION = value
				Me.SendPropertyChanged("VERSION")
				Me.OnVERSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_EDIT", DbType:="Int")>  _
	Public Property REQUEST_EDIT() As System.Nullable(Of Integer)
		Get
			Return Me._REQUEST_EDIT
		End Get
		Set
			If (Me._REQUEST_EDIT.Equals(value) = false) Then
				Me.OnREQUEST_EDITChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_EDIT = value
				Me.SendPropertyChanged("REQUEST_EDIT")
				Me.OnREQUEST_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_EDIT_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_EDIT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_EDIT_DATE
		End Get
		Set
			If (Me._REQUEST_EDIT_DATE.Equals(value) = false) Then
				Me.OnREQUEST_EDIT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_EDIT_DATE = value
				Me.SendPropertyChanged("REQUEST_EDIT_DATE")
				Me.OnREQUEST_EDIT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CAPA_ID", DbType:="Int")>  _
	Public Property REF_CAPA_ID() As System.Nullable(Of Integer)
		Get
			Return Me._REF_CAPA_ID
		End Get
		Set
			If (Me._REF_CAPA_ID.Equals(value) = false) Then
				Me.OnREF_CAPA_IDChanging(value)
				Me.SendPropertyChanging
				Me._REF_CAPA_ID = value
				Me.SendPropertyChanged("REF_CAPA_ID")
				Me.OnREF_CAPA_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PLAN_NEW_TMP")>  _
Partial Public Class PLAN_NEW_TMP
	
	Private _IDA As Integer
	
	Private _FK_XML As System.Nullable(Of Integer)
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _PLACE_NM As String
	
	Private _AMPHUR_NM As String
	
	Private _AMPHUR_CD As System.Nullable(Of Integer)
	
	Private _CHNGWT_NM As String
	
	Private _CHNGWT_CD As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _LEAD_INSPECT As String
	
	Private _LEAD_INSPECT_IDA As System.Nullable(Of Integer)
	
	Private _INVESTIGATE_TYPE As String
	
	Private _INVESTIGATE_TYPECD As System.Nullable(Of Integer)
	
	Private _LAST_INVESTIGATE_DATE As System.Nullable(Of Date)
	
	Private _INVESTIGATE_DATE_START As System.Nullable(Of Date)
	
	Private _INVESTIGATE_DATE_END As System.Nullable(Of Date)
	
	Private _CER_EXPIRE_DATE As System.Nullable(Of Date)
	
	Private _REMARK As String
	
	Private _POSTPONE As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _PLAN_COLOR As String
	
	Private _ACTIVE As System.Nullable(Of Integer)
	
	Private _ISLOCK As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
	Private _REF_CODE As String
	
	Private _Long_address As String
	
	Private _Permit_Number As String
	
	Private _Dummy_INVESTIGATE_TYPE As String
	
	Private _Operation_Number As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _VERSION As System.Nullable(Of Integer)
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _REQUEST_EDIT As System.Nullable(Of Integer)
	
	Private _REQUEST_EDIT_DATE As System.Nullable(Of Date)
	
	Private _REF_CAPA_ID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me._IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_XML", DbType:="Int")>  _
	Public Property FK_XML() As System.Nullable(Of Integer)
		Get
			Return Me._FK_XML
		End Get
		Set
			If (Me._FK_XML.Equals(value) = false) Then
				Me._FK_XML = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me._LCN_IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACE_NM", DbType:="NVarChar(MAX)")>  _
	Public Property PLACE_NM() As String
		Get
			Return Me._PLACE_NM
		End Get
		Set
			If (String.Equals(Me._PLACE_NM, value) = false) Then
				Me._PLACE_NM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_NM", DbType:="NVarChar(MAX)")>  _
	Public Property AMPHUR_NM() As String
		Get
			Return Me._AMPHUR_NM
		End Get
		Set
			If (String.Equals(Me._AMPHUR_NM, value) = false) Then
				Me._AMPHUR_NM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_CD", DbType:="Int")>  _
	Public Property AMPHUR_CD() As System.Nullable(Of Integer)
		Get
			Return Me._AMPHUR_CD
		End Get
		Set
			If (Me._AMPHUR_CD.Equals(value) = false) Then
				Me._AMPHUR_CD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWT_NM", DbType:="NVarChar(MAX)")>  _
	Public Property CHNGWT_NM() As String
		Get
			Return Me._CHNGWT_NM
		End Get
		Set
			If (String.Equals(Me._CHNGWT_NM, value) = false) Then
				Me._CHNGWT_NM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWT_CD", DbType:="Int")>  _
	Public Property CHNGWT_CD() As System.Nullable(Of Integer)
		Get
			Return Me._CHNGWT_CD
		End Get
		Set
			If (Me._CHNGWT_CD.Equals(value) = false) Then
				Me._CHNGWT_CD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me._TR_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_INSPECT", DbType:="NVarChar(MAX)")>  _
	Public Property LEAD_INSPECT() As String
		Get
			Return Me._LEAD_INSPECT
		End Get
		Set
			If (String.Equals(Me._LEAD_INSPECT, value) = false) Then
				Me._LEAD_INSPECT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_INSPECT_IDA", DbType:="Int")>  _
	Public Property LEAD_INSPECT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LEAD_INSPECT_IDA
		End Get
		Set
			If (Me._LEAD_INSPECT_IDA.Equals(value) = false) Then
				Me._LEAD_INSPECT_IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property INVESTIGATE_TYPE() As String
		Get
			Return Me._INVESTIGATE_TYPE
		End Get
		Set
			If (String.Equals(Me._INVESTIGATE_TYPE, value) = false) Then
				Me._INVESTIGATE_TYPE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_TYPECD", DbType:="Int")>  _
	Public Property INVESTIGATE_TYPECD() As System.Nullable(Of Integer)
		Get
			Return Me._INVESTIGATE_TYPECD
		End Get
		Set
			If (Me._INVESTIGATE_TYPECD.Equals(value) = false) Then
				Me._INVESTIGATE_TYPECD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_INVESTIGATE_DATE", DbType:="DateTime")>  _
	Public Property LAST_INVESTIGATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAST_INVESTIGATE_DATE
		End Get
		Set
			If (Me._LAST_INVESTIGATE_DATE.Equals(value) = false) Then
				Me._LAST_INVESTIGATE_DATE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_DATE_START", DbType:="DateTime")>  _
	Public Property INVESTIGATE_DATE_START() As System.Nullable(Of Date)
		Get
			Return Me._INVESTIGATE_DATE_START
		End Get
		Set
			If (Me._INVESTIGATE_DATE_START.Equals(value) = false) Then
				Me._INVESTIGATE_DATE_START = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_DATE_END", DbType:="DateTime")>  _
	Public Property INVESTIGATE_DATE_END() As System.Nullable(Of Date)
		Get
			Return Me._INVESTIGATE_DATE_END
		End Get
		Set
			If (Me._INVESTIGATE_DATE_END.Equals(value) = false) Then
				Me._INVESTIGATE_DATE_END = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_EXPIRE_DATE", DbType:="DateTime")>  _
	Public Property CER_EXPIRE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_EXPIRE_DATE
		End Get
		Set
			If (Me._CER_EXPIRE_DATE.Equals(value) = false) Then
				Me._CER_EXPIRE_DATE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me._REMARK = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE", DbType:="NVarChar(MAX)")>  _
	Public Property POSTPONE() As String
		Get
			Return Me._POSTPONE
		End Get
		Set
			If (String.Equals(Me._POSTPONE, value) = false) Then
				Me._POSTPONE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me._STATUS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_COLOR", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_COLOR() As String
		Get
			Return Me._PLAN_COLOR
		End Get
		Set
			If (String.Equals(Me._PLAN_COLOR, value) = false) Then
				Me._PLAN_COLOR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Int")>  _
	Public Property ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me._ACTIVE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISLOCK", DbType:="Int")>  _
	Public Property ISLOCK() As System.Nullable(Of Integer)
		Get
			Return Me._ISLOCK
		End Get
		Set
			If (Me._ISLOCK.Equals(value) = false) Then
				Me._ISLOCK = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(MAX)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me._YEAR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me._REF_CODE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Long_address", DbType:="NVarChar(MAX)")>  _
	Public Property Long_address() As String
		Get
			Return Me._Long_address
		End Get
		Set
			If (String.Equals(Me._Long_address, value) = false) Then
				Me._Long_address = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Permit_Number", DbType:="NVarChar(MAX)")>  _
	Public Property Permit_Number() As String
		Get
			Return Me._Permit_Number
		End Get
		Set
			If (String.Equals(Me._Permit_Number, value) = false) Then
				Me._Permit_Number = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dummy_INVESTIGATE_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property Dummy_INVESTIGATE_TYPE() As String
		Get
			Return Me._Dummy_INVESTIGATE_TYPE
		End Get
		Set
			If (String.Equals(Me._Dummy_INVESTIGATE_TYPE, value) = false) Then
				Me._Dummy_INVESTIGATE_TYPE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Operation_Number", DbType:="NVarChar(50)")>  _
	Public Property Operation_Number() As String
		Get
			Return Me._Operation_Number
		End Get
		Set
			If (String.Equals(Me._Operation_Number, value) = false) Then
				Me._Operation_Number = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me._CREATE_DATE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VERSION", DbType:="Int")>  _
	Public Property VERSION() As System.Nullable(Of Integer)
		Get
			Return Me._VERSION
		End Get
		Set
			If (Me._VERSION.Equals(value) = false) Then
				Me._VERSION = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me._PLAN_TYPE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_EDIT", DbType:="Int")>  _
	Public Property REQUEST_EDIT() As System.Nullable(Of Integer)
		Get
			Return Me._REQUEST_EDIT
		End Get
		Set
			If (Me._REQUEST_EDIT.Equals(value) = false) Then
				Me._REQUEST_EDIT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_EDIT_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_EDIT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_EDIT_DATE
		End Get
		Set
			If (Me._REQUEST_EDIT_DATE.Equals(value) = false) Then
				Me._REQUEST_EDIT_DATE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CAPA_ID", DbType:="Int")>  _
	Public Property REF_CAPA_ID() As System.Nullable(Of Integer)
		Get
			Return Me._REF_CAPA_ID
		End Get
		Set
			If (Me._REF_CAPA_ID.Equals(value) = false) Then
				Me._REF_CAPA_ID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.POST_CUSTOMER_REQUEST")>  _
Partial Public Class POST_CUSTOMER_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _CITIZEN_AUTHOURIZE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _PDF_TRADER_NAME As String
	
	Private _FILE_ATTACH As System.Nullable(Of Integer)
	
	Private _TYPE As System.Nullable(Of Integer)
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _REPLACE_STAFF_ID As String
	
	Private _STAFF_CITIZEN_ID As String
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHOURIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHOURIZEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnPDF_TRADER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_TRADER_NAMEChanged()
    End Sub
    Partial Private Sub OnFILE_ATTACHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFILE_ATTACHChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnREPLACE_STAFF_IDChanging(value As String)
    End Sub
    Partial Private Sub OnREPLACE_STAFF_IDChanged()
    End Sub
    Partial Private Sub OnSTAFF_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHOURIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_AUTHOURIZE() As String
		Get
			Return Me._CITIZEN_AUTHOURIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHOURIZE, value) = false) Then
				Me.OnCITIZEN_AUTHOURIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHOURIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHOURIZE")
				Me.OnCITIZEN_AUTHOURIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_TRADER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_TRADER_NAME() As String
		Get
			Return Me._PDF_TRADER_NAME
		End Get
		Set
			If (String.Equals(Me._PDF_TRADER_NAME, value) = false) Then
				Me.OnPDF_TRADER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PDF_TRADER_NAME = value
				Me.SendPropertyChanged("PDF_TRADER_NAME")
				Me.OnPDF_TRADER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH", DbType:="Int")>  _
	Public Property FILE_ATTACH() As System.Nullable(Of Integer)
		Get
			Return Me._FILE_ATTACH
		End Get
		Set
			If (Me._FILE_ATTACH.Equals(value) = false) Then
				Me.OnFILE_ATTACHChanging(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH = value
				Me.SendPropertyChanged("FILE_ATTACH")
				Me.OnFILE_ATTACHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="Int")>  _
	Public Property TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE
		End Get
		Set
			If (Me._TYPE.Equals(value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPLACE_STAFF_ID", DbType:="NVarChar(MAX)")>  _
	Public Property REPLACE_STAFF_ID() As String
		Get
			Return Me._REPLACE_STAFF_ID
		End Get
		Set
			If (String.Equals(Me._REPLACE_STAFF_ID, value) = false) Then
				Me.OnREPLACE_STAFF_IDChanging(value)
				Me.SendPropertyChanging
				Me._REPLACE_STAFF_ID = value
				Me.SendPropertyChanged("REPLACE_STAFF_ID")
				Me.OnREPLACE_STAFF_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_CITIZEN_ID() As String
		Get
			Return Me._STAFF_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._STAFF_CITIZEN_ID, value) = false) Then
				Me.OnSTAFF_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_CITIZEN_ID = value
				Me.SendPropertyChanged("STAFF_CITIZEN_ID")
				Me.OnSTAFF_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.POST_PLAN_HISTORY")>  _
Partial Public Class POST_PLAN_HISTORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PLAN_IDA As System.Nullable(Of Integer)
	
	Private _DATA_DATE As System.Nullable(Of Date)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _RISK_LEVEL As String
	
	Private _REF_CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPLAN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_IDAChanged()
    End Sub
    Partial Private Sub OnDATA_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATA_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnRISK_LEVELChanging(value As String)
    End Sub
    Partial Private Sub OnRISK_LEVELChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_IDA", DbType:="Int")>  _
	Public Property PLAN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_IDA
		End Get
		Set
			If (Me._PLAN_IDA.Equals(value) = false) Then
				Me.OnPLAN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_IDA = value
				Me.SendPropertyChanged("PLAN_IDA")
				Me.OnPLAN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_DATE", DbType:="DateTime")>  _
	Public Property DATA_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DATA_DATE
		End Get
		Set
			If (Me._DATA_DATE.Equals(value) = false) Then
				Me.OnDATA_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DATA_DATE = value
				Me.SendPropertyChanged("DATA_DATE")
				Me.OnDATA_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISK_LEVEL", DbType:="NVarChar(MAX)")>  _
	Public Property RISK_LEVEL() As String
		Get
			Return Me._RISK_LEVEL
		End Get
		Set
			If (String.Equals(Me._RISK_LEVEL, value) = false) Then
				Me.OnRISK_LEVELChanging(value)
				Me.SendPropertyChanging
				Me._RISK_LEVEL = value
				Me.SendPropertyChanged("RISK_LEVEL")
				Me.OnRISK_LEVELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.POST_PLAN_HISTORY_DETAIL")>  _
Partial Public Class POST_PLAN_HISTORY_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _REFCODE As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _HISTORY_XML As System.Xml.Linq.XElement
	
	Private _DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnREFCODEChanging(value As String)
    End Sub
    Partial Private Sub OnREFCODEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnHISTORY_XMLChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnHISTORY_XMLChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFCODE", DbType:="NVarChar(MAX)")>  _
	Public Property REFCODE() As String
		Get
			Return Me._REFCODE
		End Get
		Set
			If (String.Equals(Me._REFCODE, value) = false) Then
				Me.OnREFCODEChanging(value)
				Me.SendPropertyChanging
				Me._REFCODE = value
				Me.SendPropertyChanged("REFCODE")
				Me.OnREFCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HISTORY_XML", DbType:="Xml", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property HISTORY_XML() As System.Xml.Linq.XElement
		Get
			Return Me._HISTORY_XML
		End Get
		Set
			If (Object.Equals(Me._HISTORY_XML, value) = false) Then
				Me.OnHISTORY_XMLChanging(value)
				Me.SendPropertyChanging
				Me._HISTORY_XML = value
				Me.SendPropertyChanged("HISTORY_XML")
				Me.OnHISTORY_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.POST_PLAN_OTHER")>  _
Partial Public Class POST_PLAN_OTHER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PLAN_DATE As System.Nullable(Of Date)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _QSM_CITIZEN_ID As String
	
	Private _PLAN_CREATE_DATE As System.Nullable(Of Date)
	
	Private _PLAN_COMPLETE_DATE As System.Nullable(Of Date)
	
	Private _UPLOAD_ID As System.Nullable(Of Integer)
	
	Private _RISK_LEVEL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPLAN_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPLAN_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnQSM_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnQSM_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnPLAN_CREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPLAN_CREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPLAN_COMPLETE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPLAN_COMPLETE_DATEChanged()
    End Sub
    Partial Private Sub OnUPLOAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUPLOAD_IDChanged()
    End Sub
    Partial Private Sub OnRISK_LEVELChanging(value As String)
    End Sub
    Partial Private Sub OnRISK_LEVELChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_DATE", DbType:="DateTime")>  _
	Public Property PLAN_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PLAN_DATE
		End Get
		Set
			If (Me._PLAN_DATE.Equals(value) = false) Then
				Me.OnPLAN_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_DATE = value
				Me.SendPropertyChanged("PLAN_DATE")
				Me.OnPLAN_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QSM_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property QSM_CITIZEN_ID() As String
		Get
			Return Me._QSM_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._QSM_CITIZEN_ID, value) = false) Then
				Me.OnQSM_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._QSM_CITIZEN_ID = value
				Me.SendPropertyChanged("QSM_CITIZEN_ID")
				Me.OnQSM_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_CREATE_DATE", DbType:="DateTime")>  _
	Public Property PLAN_CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PLAN_CREATE_DATE
		End Get
		Set
			If (Me._PLAN_CREATE_DATE.Equals(value) = false) Then
				Me.OnPLAN_CREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_CREATE_DATE = value
				Me.SendPropertyChanged("PLAN_CREATE_DATE")
				Me.OnPLAN_CREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_COMPLETE_DATE", DbType:="DateTime")>  _
	Public Property PLAN_COMPLETE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PLAN_COMPLETE_DATE
		End Get
		Set
			If (Me._PLAN_COMPLETE_DATE.Equals(value) = false) Then
				Me.OnPLAN_COMPLETE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_COMPLETE_DATE = value
				Me.SendPropertyChanged("PLAN_COMPLETE_DATE")
				Me.OnPLAN_COMPLETE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPLOAD_ID", DbType:="Int")>  _
	Public Property UPLOAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._UPLOAD_ID
		End Get
		Set
			If (Me._UPLOAD_ID.Equals(value) = false) Then
				Me.OnUPLOAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._UPLOAD_ID = value
				Me.SendPropertyChanged("UPLOAD_ID")
				Me.OnUPLOAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISK_LEVEL", DbType:="NVarChar(MAX)")>  _
	Public Property RISK_LEVEL() As String
		Get
			Return Me._RISK_LEVEL
		End Get
		Set
			If (String.Equals(Me._RISK_LEVEL, value) = false) Then
				Me.OnRISK_LEVELChanging(value)
				Me.SendPropertyChanging
				Me._RISK_LEVEL = value
				Me.SendPropertyChanged("RISK_LEVEL")
				Me.OnRISK_LEVELChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.POST_PLAN_STAFF")>  _
Partial Public Class POST_PLAN_STAFF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_PLAN_IDA As System.Nullable(Of Integer)
	
	Private _REF_CODE As String
	
	Private _PLAN_ACCEPT_DATE As System.Nullable(Of Date)
	
	Private _PERSONAL_ID As String
	
	Private _PERSONAL_TYPE As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_PLAN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PLAN_IDAChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnPLAN_ACCEPT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPLAN_ACCEPT_DATEChanged()
    End Sub
    Partial Private Sub OnPERSONAL_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPERSONAL_IDChanged()
    End Sub
    Partial Private Sub OnPERSONAL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERSONAL_TYPEChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PLAN_IDA", DbType:="Int")>  _
	Public Property FK_PLAN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PLAN_IDA
		End Get
		Set
			If (Me._FK_PLAN_IDA.Equals(value) = false) Then
				Me.OnFK_PLAN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_PLAN_IDA = value
				Me.SendPropertyChanged("FK_PLAN_IDA")
				Me.OnFK_PLAN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_ACCEPT_DATE", DbType:="DateTime")>  _
	Public Property PLAN_ACCEPT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PLAN_ACCEPT_DATE
		End Get
		Set
			If (Me._PLAN_ACCEPT_DATE.Equals(value) = false) Then
				Me.OnPLAN_ACCEPT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_ACCEPT_DATE = value
				Me.SendPropertyChanged("PLAN_ACCEPT_DATE")
				Me.OnPLAN_ACCEPT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSONAL_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PERSONAL_ID() As String
		Get
			Return Me._PERSONAL_ID
		End Get
		Set
			If (String.Equals(Me._PERSONAL_ID, value) = false) Then
				Me.OnPERSONAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._PERSONAL_ID = value
				Me.SendPropertyChanged("PERSONAL_ID")
				Me.OnPERSONAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSONAL_TYPE", DbType:="Int")>  _
	Public Property PERSONAL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PERSONAL_TYPE
		End Get
		Set
			If (Me._PERSONAL_TYPE.Equals(value) = false) Then
				Me.OnPERSONAL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PERSONAL_TYPE = value
				Me.SendPropertyChanged("PERSONAL_TYPE")
				Me.OnPERSONAL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.POST_PLAN_XML")>  _
Partial Public Class POST_PLAN_XML
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_ID As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PLAN_XML As System.Xml.Linq.XElement
	
	Private _CITIZEN_ID_UPDATE As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _PLAN_XML_EDIT As System.Xml.Linq.XElement
	
	Private _XML_VERSION As String
	
	Private _PLAN_ORIGINAL_IDA As System.Nullable(Of Integer)
	
	Private _GMP_COUNT As System.Nullable(Of Integer)
	
	Private _SURVEILLANCE_COUNT As System.Nullable(Of Integer)
	
	Private _SAMPLE_COUNT As System.Nullable(Of Integer)
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As String
	
	Private _PLAN_TITLE As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
	Private _BOSS_CITIZEN As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPLAN_XMLChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnPLAN_XMLChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPDATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnPLAN_XML_EDITChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnPLAN_XML_EDITChanged()
    End Sub
    Partial Private Sub OnXML_VERSIONChanging(value As String)
    End Sub
    Partial Private Sub OnXML_VERSIONChanged()
    End Sub
    Partial Private Sub OnPLAN_ORIGINAL_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_ORIGINAL_IDAChanged()
    End Sub
    Partial Private Sub OnGMP_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGMP_COUNTChanged()
    End Sub
    Partial Private Sub OnSURVEILLANCE_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSURVEILLANCE_COUNTChanged()
    End Sub
    Partial Private Sub OnSAMPLE_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSAMPLE_COUNTChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnPLAN_TITLEChanging(value As String)
    End Sub
    Partial Private Sub OnPLAN_TITLEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnBOSS_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnBOSS_CITIZENChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_XML", DbType:="Xml", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PLAN_XML() As System.Xml.Linq.XElement
		Get
			Return Me._PLAN_XML
		End Get
		Set
			If (Object.Equals(Me._PLAN_XML, value) = false) Then
				Me.OnPLAN_XMLChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_XML = value
				Me.SendPropertyChanged("PLAN_XML")
				Me.OnPLAN_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPDATE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID_UPDATE() As String
		Get
			Return Me._CITIZEN_ID_UPDATE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPDATE, value) = false) Then
				Me.OnCITIZEN_ID_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPDATE = value
				Me.SendPropertyChanged("CITIZEN_ID_UPDATE")
				Me.OnCITIZEN_ID_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_XML_EDIT", DbType:="Xml", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PLAN_XML_EDIT() As System.Xml.Linq.XElement
		Get
			Return Me._PLAN_XML_EDIT
		End Get
		Set
			If (Object.Equals(Me._PLAN_XML_EDIT, value) = false) Then
				Me.OnPLAN_XML_EDITChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_XML_EDIT = value
				Me.SendPropertyChanged("PLAN_XML_EDIT")
				Me.OnPLAN_XML_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_VERSION", DbType:="NVarChar(50)")>  _
	Public Property XML_VERSION() As String
		Get
			Return Me._XML_VERSION
		End Get
		Set
			If (String.Equals(Me._XML_VERSION, value) = false) Then
				Me.OnXML_VERSIONChanging(value)
				Me.SendPropertyChanging
				Me._XML_VERSION = value
				Me.SendPropertyChanged("XML_VERSION")
				Me.OnXML_VERSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_ORIGINAL_IDA", DbType:="Int")>  _
	Public Property PLAN_ORIGINAL_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_ORIGINAL_IDA
		End Get
		Set
			If (Me._PLAN_ORIGINAL_IDA.Equals(value) = false) Then
				Me.OnPLAN_ORIGINAL_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_ORIGINAL_IDA = value
				Me.SendPropertyChanged("PLAN_ORIGINAL_IDA")
				Me.OnPLAN_ORIGINAL_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GMP_COUNT", DbType:="Int")>  _
	Public Property GMP_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._GMP_COUNT
		End Get
		Set
			If (Me._GMP_COUNT.Equals(value) = false) Then
				Me.OnGMP_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._GMP_COUNT = value
				Me.SendPropertyChanged("GMP_COUNT")
				Me.OnGMP_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURVEILLANCE_COUNT", DbType:="Int")>  _
	Public Property SURVEILLANCE_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._SURVEILLANCE_COUNT
		End Get
		Set
			If (Me._SURVEILLANCE_COUNT.Equals(value) = false) Then
				Me.OnSURVEILLANCE_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._SURVEILLANCE_COUNT = value
				Me.SendPropertyChanged("SURVEILLANCE_COUNT")
				Me.OnSURVEILLANCE_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAMPLE_COUNT", DbType:="Int")>  _
	Public Property SAMPLE_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._SAMPLE_COUNT
		End Get
		Set
			If (Me._SAMPLE_COUNT.Equals(value) = false) Then
				Me.OnSAMPLE_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._SAMPLE_COUNT = value
				Me.SendPropertyChanged("SAMPLE_COUNT")
				Me.OnSAMPLE_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TITLE", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_TITLE() As String
		Get
			Return Me._PLAN_TITLE
		End Get
		Set
			If (String.Equals(Me._PLAN_TITLE, value) = false) Then
				Me.OnPLAN_TITLEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TITLE = value
				Me.SendPropertyChanged("PLAN_TITLE")
				Me.OnPLAN_TITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(10)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOSS_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property BOSS_CITIZEN() As String
		Get
			Return Me._BOSS_CITIZEN
		End Get
		Set
			If (String.Equals(Me._BOSS_CITIZEN, value) = false) Then
				Me.OnBOSS_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._BOSS_CITIZEN = value
				Me.SendPropertyChanged("BOSS_CITIZEN")
				Me.OnBOSS_CITIZENChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.POST_PLAN_XML_HISTORY")>  _
Partial Public Class POST_PLAN_XML_HISTORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_ID As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PLAN_XML As System.Xml.Linq.XElement
	
	Private _CITIZEN_ID_UPDATE As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _XML_VERSION As String
	
	Private _GMP_COUNT As System.Nullable(Of Integer)
	
	Private _SURVEILLANCE_COUNT As System.Nullable(Of Integer)
	
	Private _SAMPLE_COUNT As System.Nullable(Of Integer)
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As String
	
	Private _PLAN_TITLE As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
	Private _BOSS_CITIZEN As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPLAN_XMLChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnPLAN_XMLChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPDATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnXML_VERSIONChanging(value As String)
    End Sub
    Partial Private Sub OnXML_VERSIONChanged()
    End Sub
    Partial Private Sub OnGMP_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGMP_COUNTChanged()
    End Sub
    Partial Private Sub OnSURVEILLANCE_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSURVEILLANCE_COUNTChanged()
    End Sub
    Partial Private Sub OnSAMPLE_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSAMPLE_COUNTChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnPLAN_TITLEChanging(value As String)
    End Sub
    Partial Private Sub OnPLAN_TITLEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnBOSS_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnBOSS_CITIZENChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_XML", DbType:="Xml", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PLAN_XML() As System.Xml.Linq.XElement
		Get
			Return Me._PLAN_XML
		End Get
		Set
			If (Object.Equals(Me._PLAN_XML, value) = false) Then
				Me.OnPLAN_XMLChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_XML = value
				Me.SendPropertyChanged("PLAN_XML")
				Me.OnPLAN_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPDATE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID_UPDATE() As String
		Get
			Return Me._CITIZEN_ID_UPDATE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPDATE, value) = false) Then
				Me.OnCITIZEN_ID_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPDATE = value
				Me.SendPropertyChanged("CITIZEN_ID_UPDATE")
				Me.OnCITIZEN_ID_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_VERSION", DbType:="NVarChar(50)")>  _
	Public Property XML_VERSION() As String
		Get
			Return Me._XML_VERSION
		End Get
		Set
			If (String.Equals(Me._XML_VERSION, value) = false) Then
				Me.OnXML_VERSIONChanging(value)
				Me.SendPropertyChanging
				Me._XML_VERSION = value
				Me.SendPropertyChanged("XML_VERSION")
				Me.OnXML_VERSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GMP_COUNT", DbType:="Int")>  _
	Public Property GMP_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._GMP_COUNT
		End Get
		Set
			If (Me._GMP_COUNT.Equals(value) = false) Then
				Me.OnGMP_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._GMP_COUNT = value
				Me.SendPropertyChanged("GMP_COUNT")
				Me.OnGMP_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURVEILLANCE_COUNT", DbType:="Int")>  _
	Public Property SURVEILLANCE_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._SURVEILLANCE_COUNT
		End Get
		Set
			If (Me._SURVEILLANCE_COUNT.Equals(value) = false) Then
				Me.OnSURVEILLANCE_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._SURVEILLANCE_COUNT = value
				Me.SendPropertyChanged("SURVEILLANCE_COUNT")
				Me.OnSURVEILLANCE_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAMPLE_COUNT", DbType:="Int")>  _
	Public Property SAMPLE_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._SAMPLE_COUNT
		End Get
		Set
			If (Me._SAMPLE_COUNT.Equals(value) = false) Then
				Me.OnSAMPLE_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._SAMPLE_COUNT = value
				Me.SendPropertyChanged("SAMPLE_COUNT")
				Me.OnSAMPLE_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TITLE", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_TITLE() As String
		Get
			Return Me._PLAN_TITLE
		End Get
		Set
			If (String.Equals(Me._PLAN_TITLE, value) = false) Then
				Me.OnPLAN_TITLEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TITLE = value
				Me.SendPropertyChanged("PLAN_TITLE")
				Me.OnPLAN_TITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(10)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOSS_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property BOSS_CITIZEN() As String
		Get
			Return Me._BOSS_CITIZEN
		End Get
		Set
			If (String.Equals(Me._BOSS_CITIZEN, value) = false) Then
				Me.OnBOSS_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._BOSS_CITIZEN = value
				Me.SendPropertyChanged("BOSS_CITIZEN")
				Me.OnBOSS_CITIZENChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PROBLEM")>  _
Partial Public Class PROBLEM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _P_NAME As String
	
	Private _P_DETAIL As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnP_NAMEChanged()
    End Sub
    Partial Private Sub OnP_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnP_DETAILChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property P_NAME() As String
		Get
			Return Me._P_NAME
		End Get
		Set
			If (String.Equals(Me._P_NAME, value) = false) Then
				Me.OnP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._P_NAME = value
				Me.SendPropertyChanged("P_NAME")
				Me.OnP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property P_DETAIL() As String
		Get
			Return Me._P_DETAIL
		End Get
		Set
			If (String.Equals(Me._P_DETAIL, value) = false) Then
				Me.OnP_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._P_DETAIL = value
				Me.SendPropertyChanged("P_DETAIL")
				Me.OnP_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PROCESS_MENU")>  _
Partial Public Class PROCESS_MENU
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _MENU_ID As String
	
	Private _MENU_NAME As String
	
	Private _URL_MENU As String
	
	Private _URL_ICON As String
	
	Private _TARGET_MENU As String
	
	Private _PLUBLIC_STATUS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnMENU_IDChanging(value As String)
    End Sub
    Partial Private Sub OnMENU_IDChanged()
    End Sub
    Partial Private Sub OnMENU_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMENU_NAMEChanged()
    End Sub
    Partial Private Sub OnURL_MENUChanging(value As String)
    End Sub
    Partial Private Sub OnURL_MENUChanged()
    End Sub
    Partial Private Sub OnURL_ICONChanging(value As String)
    End Sub
    Partial Private Sub OnURL_ICONChanged()
    End Sub
    Partial Private Sub OnTARGET_MENUChanging(value As String)
    End Sub
    Partial Private Sub OnTARGET_MENUChanged()
    End Sub
    Partial Private Sub OnPLUBLIC_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnPLUBLIC_STATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_ID", DbType:="NVarChar(50)")>  _
	Public Property MENU_ID() As String
		Get
			Return Me._MENU_ID
		End Get
		Set
			If (String.Equals(Me._MENU_ID, value) = false) Then
				Me.OnMENU_IDChanging(value)
				Me.SendPropertyChanging
				Me._MENU_ID = value
				Me.SendPropertyChanged("MENU_ID")
				Me.OnMENU_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MENU_NAME() As String
		Get
			Return Me._MENU_NAME
		End Get
		Set
			If (String.Equals(Me._MENU_NAME, value) = false) Then
				Me.OnMENU_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MENU_NAME = value
				Me.SendPropertyChanged("MENU_NAME")
				Me.OnMENU_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL_MENU", DbType:="NVarChar(MAX)")>  _
	Public Property URL_MENU() As String
		Get
			Return Me._URL_MENU
		End Get
		Set
			If (String.Equals(Me._URL_MENU, value) = false) Then
				Me.OnURL_MENUChanging(value)
				Me.SendPropertyChanging
				Me._URL_MENU = value
				Me.SendPropertyChanged("URL_MENU")
				Me.OnURL_MENUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL_ICON", DbType:="NVarChar(MAX)")>  _
	Public Property URL_ICON() As String
		Get
			Return Me._URL_ICON
		End Get
		Set
			If (String.Equals(Me._URL_ICON, value) = false) Then
				Me.OnURL_ICONChanging(value)
				Me.SendPropertyChanging
				Me._URL_ICON = value
				Me.SendPropertyChanged("URL_ICON")
				Me.OnURL_ICONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TARGET_MENU", DbType:="NVarChar(MAX)")>  _
	Public Property TARGET_MENU() As String
		Get
			Return Me._TARGET_MENU
		End Get
		Set
			If (String.Equals(Me._TARGET_MENU, value) = false) Then
				Me.OnTARGET_MENUChanging(value)
				Me.SendPropertyChanging
				Me._TARGET_MENU = value
				Me.SendPropertyChanged("TARGET_MENU")
				Me.OnTARGET_MENUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLUBLIC_STATUS", DbType:="NVarChar(50)")>  _
	Public Property PLUBLIC_STATUS() As String
		Get
			Return Me._PLUBLIC_STATUS
		End Get
		Set
			If (String.Equals(Me._PLUBLIC_STATUS, value) = false) Then
				Me.OnPLUBLIC_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._PLUBLIC_STATUS = value
				Me.SendPropertyChanged("PLUBLIC_STATUS")
				Me.OnPLUBLIC_STATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RECALL")>  _
Partial Public Class RECALL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Lot_No As String
	
	Private _DATE_RECEIVE_RECALL As System.Nullable(Of Date)
	
	Private _SMALL_AMOUNT As System.Nullable(Of Double)
	
	Private _SMALL_UNIT As System.Nullable(Of Double)
	
	Private _unit_name As String
	
	Private _BARCODE As String
	
	Private _Drug_MFG As System.Nullable(Of Date)
	
	Private _Drug_Exp As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_PLAN_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _REF_CODE As String
	
	Private _RECALL_TYPE As String
	
	Private _DRUG_NAME As String
	
	Private _REG_NO As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLot_NoChanging(value As String)
    End Sub
    Partial Private Sub OnLot_NoChanged()
    End Sub
    Partial Private Sub OnDATE_RECEIVE_RECALLChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_RECEIVE_RECALLChanged()
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanged()
    End Sub
    Partial Private Sub OnSMALL_UNITChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSMALL_UNITChanged()
    End Sub
    Partial Private Sub Onunit_nameChanging(value As String)
    End Sub
    Partial Private Sub Onunit_nameChanged()
    End Sub
    Partial Private Sub OnBARCODEChanging(value As String)
    End Sub
    Partial Private Sub OnBARCODEChanged()
    End Sub
    Partial Private Sub OnDrug_MFGChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDrug_MFGChanged()
    End Sub
    Partial Private Sub OnDrug_ExpChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDrug_ExpChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_PLAN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnRECALL_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnRECALL_TYPEChanged()
    End Sub
    Partial Private Sub OnDRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnREG_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREG_NOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lot_No", DbType:="NVarChar(MAX)")>  _
	Public Property Lot_No() As String
		Get
			Return Me._Lot_No
		End Get
		Set
			If (String.Equals(Me._Lot_No, value) = false) Then
				Me.OnLot_NoChanging(value)
				Me.SendPropertyChanging
				Me._Lot_No = value
				Me.SendPropertyChanged("Lot_No")
				Me.OnLot_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_RECEIVE_RECALL", DbType:="Date")>  _
	Public Property DATE_RECEIVE_RECALL() As System.Nullable(Of Date)
		Get
			Return Me._DATE_RECEIVE_RECALL
		End Get
		Set
			If (Me._DATE_RECEIVE_RECALL.Equals(value) = false) Then
				Me.OnDATE_RECEIVE_RECALLChanging(value)
				Me.SendPropertyChanging
				Me._DATE_RECEIVE_RECALL = value
				Me.SendPropertyChanged("DATE_RECEIVE_RECALL")
				Me.OnDATE_RECEIVE_RECALLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_AMOUNT", DbType:="Float")>  _
	Public Property SMALL_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._SMALL_AMOUNT
		End Get
		Set
			If (Me._SMALL_AMOUNT.Equals(value) = false) Then
				Me.OnSMALL_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_AMOUNT = value
				Me.SendPropertyChanged("SMALL_AMOUNT")
				Me.OnSMALL_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_UNIT", DbType:="Float")>  _
	Public Property SMALL_UNIT() As System.Nullable(Of Double)
		Get
			Return Me._SMALL_UNIT
		End Get
		Set
			If (Me._SMALL_UNIT.Equals(value) = false) Then
				Me.OnSMALL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_UNIT = value
				Me.SendPropertyChanged("SMALL_UNIT")
				Me.OnSMALL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unit_name", DbType:="NVarChar(MAX)")>  _
	Public Property unit_name() As String
		Get
			Return Me._unit_name
		End Get
		Set
			If (String.Equals(Me._unit_name, value) = false) Then
				Me.Onunit_nameChanging(value)
				Me.SendPropertyChanging
				Me._unit_name = value
				Me.SendPropertyChanged("unit_name")
				Me.Onunit_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BARCODE", DbType:="NVarChar(MAX)")>  _
	Public Property BARCODE() As String
		Get
			Return Me._BARCODE
		End Get
		Set
			If (String.Equals(Me._BARCODE, value) = false) Then
				Me.OnBARCODEChanging(value)
				Me.SendPropertyChanging
				Me._BARCODE = value
				Me.SendPropertyChanged("BARCODE")
				Me.OnBARCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Drug_MFG", DbType:="DateTime")>  _
	Public Property Drug_MFG() As System.Nullable(Of Date)
		Get
			Return Me._Drug_MFG
		End Get
		Set
			If (Me._Drug_MFG.Equals(value) = false) Then
				Me.OnDrug_MFGChanging(value)
				Me.SendPropertyChanging
				Me._Drug_MFG = value
				Me.SendPropertyChanged("Drug_MFG")
				Me.OnDrug_MFGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Drug_Exp", DbType:="DateTime")>  _
	Public Property Drug_Exp() As System.Nullable(Of Date)
		Get
			Return Me._Drug_Exp
		End Get
		Set
			If (Me._Drug_Exp.Equals(value) = false) Then
				Me.OnDrug_ExpChanging(value)
				Me.SendPropertyChanging
				Me._Drug_Exp = value
				Me.SendPropertyChanged("Drug_Exp")
				Me.OnDrug_ExpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PLAN_ID", DbType:="Int")>  _
	Public Property FK_PLAN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PLAN_ID
		End Get
		Set
			If (Me._FK_PLAN_ID.Equals(value) = false) Then
				Me.OnFK_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_PLAN_ID = value
				Me.SendPropertyChanged("FK_PLAN_ID")
				Me.OnFK_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECALL_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property RECALL_TYPE() As String
		Get
			Return Me._RECALL_TYPE
		End Get
		Set
			If (String.Equals(Me._RECALL_TYPE, value) = false) Then
				Me.OnRECALL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._RECALL_TYPE = value
				Me.SendPropertyChanged("RECALL_TYPE")
				Me.OnRECALL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME() As String
		Get
			Return Me._DRUG_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME, value) = false) Then
				Me.OnDRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME = value
				Me.SendPropertyChanged("DRUG_NAME")
				Me.OnDRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REG_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REG_NO() As String
		Get
			Return Me._REG_NO
		End Get
		Set
			If (String.Equals(Me._REG_NO, value) = false) Then
				Me.OnREG_NOChanging(value)
				Me.SendPropertyChanging
				Me._REG_NO = value
				Me.SendPropertyChanged("REG_NO")
				Me.OnREG_NOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RECALL_DETAIL")>  _
Partial Public Class RECALL_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_RECALL As System.Nullable(Of Integer)
	
	Private _date_receive_Recall As System.Nullable(Of Date)
	
	Private _Recall_typecd As System.Nullable(Of Integer)
	
	Private _Recall_type As String
	
	Private _drug_name As String
	
	Private _active As String
	
	Private _reg_no As String
	
	Private _lot As String
	
	Private _mfd_date As String
	
	Private _exp_date As String
	
	Private _citizen_authorize As String
	
	Private _address_1 As String
	
	Private _address_2 As String
	
	Private _address_3 As String
	
	Private _License1 As String
	
	Private _Manufacturer_Country_cd As System.Nullable(Of Integer)
	
	Private _Manufacturer_Country As String
	
	Private _address_foreign As String
	
	Private _state_cd As System.Nullable(Of Integer)
	
	Private _state As String
	
	Private _address_4 As String
	
	Private _address_5 As String
	
	Private _address_6 As String
	
	Private _License2 As String
	
	Private _customer_type_cd As System.Nullable(Of Integer)
	
	Private _customer_type As String
	
	Private _recall_by_typecd As System.Nullable(Of Integer)
	
	Private _recall_by As String
	
	Private _problem_main As String
	
	Private _problem_category_1 As String
	
	Private _problem_category_2 As String
	
	Private _recall_reason As String
	
	Private _Year_recall As String
	
	Private _date_recall As System.Nullable(Of Date)
	
	Private _date_recall_end As System.Nullable(Of Date)
	
	Private _condition_cd As System.Nullable(Of Integer)
	
	Private _condition As String
	
	Private _date_extend_1 As System.Nullable(Of Date)
	
	Private _date_extend_2 As System.Nullable(Of Date)
	
	Private _date_report_back As System.Nullable(Of Date)
	
	Private _date_order_destroy As System.Nullable(Of Date)
	
	Private _date_destroy As System.Nullable(Of Date)
	
	Private _out_put As String
	
	Private _detail As String
	
	Private _ระดับปัญหาคุณภาพยา As String
	
	Private _เลขที่หนังสือสั่งเก็บยาคืน As String
	
	Private _สถานะ As String
	
	Private _ฝ่าย_ผู้รับผิดชอบ As String
	
	Private _การดำเนินคดี As String
	
	Private _หมายเหตุเพิ่มเติม As String
	
	Private _index_แฟ้ม As System.Nullable(Of Boolean)
	
	Private _แฟ้มเอกสารที่ As String
	
	Private _Backup_Recall_type As String
	
	Private _SSMA_TimeStamp As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_RECALLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_RECALLChanged()
    End Sub
    Partial Private Sub Ondate_receive_RecallChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_receive_RecallChanged()
    End Sub
    Partial Private Sub OnRecall_typecdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRecall_typecdChanged()
    End Sub
    Partial Private Sub OnRecall_typeChanging(value As String)
    End Sub
    Partial Private Sub OnRecall_typeChanged()
    End Sub
    Partial Private Sub Ondrug_nameChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_nameChanged()
    End Sub
    Partial Private Sub OnactiveChanging(value As String)
    End Sub
    Partial Private Sub OnactiveChanged()
    End Sub
    Partial Private Sub Onreg_noChanging(value As String)
    End Sub
    Partial Private Sub Onreg_noChanged()
    End Sub
    Partial Private Sub OnlotChanging(value As String)
    End Sub
    Partial Private Sub OnlotChanged()
    End Sub
    Partial Private Sub Onmfd_dateChanging(value As String)
    End Sub
    Partial Private Sub Onmfd_dateChanged()
    End Sub
    Partial Private Sub Onexp_dateChanging(value As String)
    End Sub
    Partial Private Sub Onexp_dateChanged()
    End Sub
    Partial Private Sub Oncitizen_authorizeChanging(value As String)
    End Sub
    Partial Private Sub Oncitizen_authorizeChanged()
    End Sub
    Partial Private Sub Onaddress_1Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_1Changed()
    End Sub
    Partial Private Sub Onaddress_2Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_2Changed()
    End Sub
    Partial Private Sub Onaddress_3Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_3Changed()
    End Sub
    Partial Private Sub OnLicense1Changing(value As String)
    End Sub
    Partial Private Sub OnLicense1Changed()
    End Sub
    Partial Private Sub OnManufacturer_Country_cdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnManufacturer_Country_cdChanged()
    End Sub
    Partial Private Sub OnManufacturer_CountryChanging(value As String)
    End Sub
    Partial Private Sub OnManufacturer_CountryChanged()
    End Sub
    Partial Private Sub Onaddress_foreignChanging(value As String)
    End Sub
    Partial Private Sub Onaddress_foreignChanged()
    End Sub
    Partial Private Sub Onstate_cdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onstate_cdChanged()
    End Sub
    Partial Private Sub OnstateChanging(value As String)
    End Sub
    Partial Private Sub OnstateChanged()
    End Sub
    Partial Private Sub Onaddress_4Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_4Changed()
    End Sub
    Partial Private Sub Onaddress_5Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_5Changed()
    End Sub
    Partial Private Sub Onaddress_6Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_6Changed()
    End Sub
    Partial Private Sub OnLicense2Changing(value As String)
    End Sub
    Partial Private Sub OnLicense2Changed()
    End Sub
    Partial Private Sub Oncustomer_type_cdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncustomer_type_cdChanged()
    End Sub
    Partial Private Sub Oncustomer_typeChanging(value As String)
    End Sub
    Partial Private Sub Oncustomer_typeChanged()
    End Sub
    Partial Private Sub Onrecall_by_typecdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrecall_by_typecdChanged()
    End Sub
    Partial Private Sub Onrecall_byChanging(value As String)
    End Sub
    Partial Private Sub Onrecall_byChanged()
    End Sub
    Partial Private Sub Onproblem_mainChanging(value As String)
    End Sub
    Partial Private Sub Onproblem_mainChanged()
    End Sub
    Partial Private Sub Onproblem_category_1Changing(value As String)
    End Sub
    Partial Private Sub Onproblem_category_1Changed()
    End Sub
    Partial Private Sub Onproblem_category_2Changing(value As String)
    End Sub
    Partial Private Sub Onproblem_category_2Changed()
    End Sub
    Partial Private Sub Onrecall_reasonChanging(value As String)
    End Sub
    Partial Private Sub Onrecall_reasonChanged()
    End Sub
    Partial Private Sub OnYear_recallChanging(value As String)
    End Sub
    Partial Private Sub OnYear_recallChanged()
    End Sub
    Partial Private Sub Ondate_recallChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_recallChanged()
    End Sub
    Partial Private Sub Ondate_recall_endChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_recall_endChanged()
    End Sub
    Partial Private Sub Oncondition_cdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncondition_cdChanged()
    End Sub
    Partial Private Sub OnconditionChanging(value As String)
    End Sub
    Partial Private Sub OnconditionChanged()
    End Sub
    Partial Private Sub Ondate_extend_1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_extend_1Changed()
    End Sub
    Partial Private Sub Ondate_extend_2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_extend_2Changed()
    End Sub
    Partial Private Sub Ondate_report_backChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_report_backChanged()
    End Sub
    Partial Private Sub Ondate_order_destroyChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_order_destroyChanged()
    End Sub
    Partial Private Sub Ondate_destroyChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_destroyChanged()
    End Sub
    Partial Private Sub Onout_putChanging(value As String)
    End Sub
    Partial Private Sub Onout_putChanged()
    End Sub
    Partial Private Sub OndetailChanging(value As String)
    End Sub
    Partial Private Sub OndetailChanged()
    End Sub
    Partial Private Sub OnระดับปัญหาคุณภาพยาChanging(value As String)
    End Sub
    Partial Private Sub OnระดับปัญหาคุณภาพยาChanged()
    End Sub
    Partial Private Sub Onเลขที่หนังสือสั่งเก็บยาคืนChanging(value As String)
    End Sub
    Partial Private Sub Onเลขที่หนังสือสั่งเก็บยาคืนChanged()
    End Sub
    Partial Private Sub OnสถานะChanging(value As String)
    End Sub
    Partial Private Sub OnสถานะChanged()
    End Sub
    Partial Private Sub Onฝ่าย_ผู้รับผิดชอบChanging(value As String)
    End Sub
    Partial Private Sub Onฝ่าย_ผู้รับผิดชอบChanged()
    End Sub
    Partial Private Sub OnการดำเนินคดีChanging(value As String)
    End Sub
    Partial Private Sub OnการดำเนินคดีChanged()
    End Sub
    Partial Private Sub Onหมายเหตุเพิ่มเติมChanging(value As String)
    End Sub
    Partial Private Sub Onหมายเหตุเพิ่มเติมChanged()
    End Sub
    Partial Private Sub Onindex_แฟ้มChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onindex_แฟ้มChanged()
    End Sub
    Partial Private Sub Onแฟ้มเอกสารที่Changing(value As String)
    End Sub
    Partial Private Sub Onแฟ้มเอกสารที่Changed()
    End Sub
    Partial Private Sub OnBackup_Recall_typeChanging(value As String)
    End Sub
    Partial Private Sub OnBackup_Recall_typeChanged()
    End Sub
    Partial Private Sub OnSSMA_TimeStampChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnSSMA_TimeStampChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_RECALL", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FK_RECALL() As System.Nullable(Of Integer)
		Get
			Return Me._FK_RECALL
		End Get
		Set
			If (Me._FK_RECALL.Equals(value) = false) Then
				Me.OnFK_RECALLChanging(value)
				Me.SendPropertyChanging
				Me._FK_RECALL = value
				Me.SendPropertyChanged("FK_RECALL")
				Me.OnFK_RECALLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_receive_Recall", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_receive_Recall() As System.Nullable(Of Date)
		Get
			Return Me._date_receive_Recall
		End Get
		Set
			If (Me._date_receive_Recall.Equals(value) = false) Then
				Me.Ondate_receive_RecallChanging(value)
				Me.SendPropertyChanging
				Me._date_receive_Recall = value
				Me.SendPropertyChanged("date_receive_Recall")
				Me.Ondate_receive_RecallChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recall_typecd", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Recall_typecd() As System.Nullable(Of Integer)
		Get
			Return Me._Recall_typecd
		End Get
		Set
			If (Me._Recall_typecd.Equals(value) = false) Then
				Me.OnRecall_typecdChanging(value)
				Me.SendPropertyChanging
				Me._Recall_typecd = value
				Me.SendPropertyChanged("Recall_typecd")
				Me.OnRecall_typecdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recall_type", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Recall_type() As String
		Get
			Return Me._Recall_type
		End Get
		Set
			If (String.Equals(Me._Recall_type, value) = false) Then
				Me.OnRecall_typeChanging(value)
				Me.SendPropertyChanging
				Me._Recall_type = value
				Me.SendPropertyChanged("Recall_type")
				Me.OnRecall_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_name", DbType:="NVarChar(250) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property drug_name() As String
		Get
			Return Me._drug_name
		End Get
		Set
			If (String.Equals(Me._drug_name, value) = false) Then
				Me.Ondrug_nameChanging(value)
				Me.SendPropertyChanging
				Me._drug_name = value
				Me.SendPropertyChanged("drug_name")
				Me.Ondrug_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="NVarChar(250)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property active() As String
		Get
			Return Me._active
		End Get
		Set
			If (String.Equals(Me._active, value) = false) Then
				Me.OnactiveChanging(value)
				Me.SendPropertyChanging
				Me._active = value
				Me.SendPropertyChanged("active")
				Me.OnactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_reg_no", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property reg_no() As String
		Get
			Return Me._reg_no
		End Get
		Set
			If (String.Equals(Me._reg_no, value) = false) Then
				Me.Onreg_noChanging(value)
				Me.SendPropertyChanging
				Me._reg_no = value
				Me.SendPropertyChanged("reg_no")
				Me.Onreg_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lot", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property lot() As String
		Get
			Return Me._lot
		End Get
		Set
			If (String.Equals(Me._lot, value) = false) Then
				Me.OnlotChanging(value)
				Me.SendPropertyChanging
				Me._lot = value
				Me.SendPropertyChanged("lot")
				Me.OnlotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mfd_date", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property mfd_date() As String
		Get
			Return Me._mfd_date
		End Get
		Set
			If (String.Equals(Me._mfd_date, value) = false) Then
				Me.Onmfd_dateChanging(value)
				Me.SendPropertyChanging
				Me._mfd_date = value
				Me.SendPropertyChanged("mfd_date")
				Me.Onmfd_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exp_date", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property exp_date() As String
		Get
			Return Me._exp_date
		End Get
		Set
			If (String.Equals(Me._exp_date, value) = false) Then
				Me.Onexp_dateChanging(value)
				Me.SendPropertyChanging
				Me._exp_date = value
				Me.SendPropertyChanged("exp_date")
				Me.Onexp_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_citizen_authorize", DbType:="NVarChar(20)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property citizen_authorize() As String
		Get
			Return Me._citizen_authorize
		End Get
		Set
			If (String.Equals(Me._citizen_authorize, value) = false) Then
				Me.Oncitizen_authorizeChanging(value)
				Me.SendPropertyChanging
				Me._citizen_authorize = value
				Me.SendPropertyChanged("citizen_authorize")
				Me.Oncitizen_authorizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_1", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_1() As String
		Get
			Return Me._address_1
		End Get
		Set
			If (String.Equals(Me._address_1, value) = false) Then
				Me.Onaddress_1Changing(value)
				Me.SendPropertyChanging
				Me._address_1 = value
				Me.SendPropertyChanged("address_1")
				Me.Onaddress_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_2", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_2() As String
		Get
			Return Me._address_2
		End Get
		Set
			If (String.Equals(Me._address_2, value) = false) Then
				Me.Onaddress_2Changing(value)
				Me.SendPropertyChanging
				Me._address_2 = value
				Me.SendPropertyChanged("address_2")
				Me.Onaddress_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_3", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_3() As String
		Get
			Return Me._address_3
		End Get
		Set
			If (String.Equals(Me._address_3, value) = false) Then
				Me.Onaddress_3Changing(value)
				Me.SendPropertyChanging
				Me._address_3 = value
				Me.SendPropertyChanged("address_3")
				Me.Onaddress_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_License1", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property License1() As String
		Get
			Return Me._License1
		End Get
		Set
			If (String.Equals(Me._License1, value) = false) Then
				Me.OnLicense1Changing(value)
				Me.SendPropertyChanging
				Me._License1 = value
				Me.SendPropertyChanged("License1")
				Me.OnLicense1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Manufacturer_Country_cd", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Manufacturer_Country_cd() As System.Nullable(Of Integer)
		Get
			Return Me._Manufacturer_Country_cd
		End Get
		Set
			If (Me._Manufacturer_Country_cd.Equals(value) = false) Then
				Me.OnManufacturer_Country_cdChanging(value)
				Me.SendPropertyChanging
				Me._Manufacturer_Country_cd = value
				Me.SendPropertyChanged("Manufacturer_Country_cd")
				Me.OnManufacturer_Country_cdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Manufacturer_Country", DbType:="NVarChar(250)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Manufacturer_Country() As String
		Get
			Return Me._Manufacturer_Country
		End Get
		Set
			If (String.Equals(Me._Manufacturer_Country, value) = false) Then
				Me.OnManufacturer_CountryChanging(value)
				Me.SendPropertyChanging
				Me._Manufacturer_Country = value
				Me.SendPropertyChanged("Manufacturer_Country")
				Me.OnManufacturer_CountryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_foreign", DbType:="NVarChar(250)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_foreign() As String
		Get
			Return Me._address_foreign
		End Get
		Set
			If (String.Equals(Me._address_foreign, value) = false) Then
				Me.Onaddress_foreignChanging(value)
				Me.SendPropertyChanging
				Me._address_foreign = value
				Me.SendPropertyChanged("address_foreign")
				Me.Onaddress_foreignChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_state_cd", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property state_cd() As System.Nullable(Of Integer)
		Get
			Return Me._state_cd
		End Get
		Set
			If (Me._state_cd.Equals(value) = false) Then
				Me.Onstate_cdChanging(value)
				Me.SendPropertyChanging
				Me._state_cd = value
				Me.SendPropertyChanged("state_cd")
				Me.Onstate_cdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_state", DbType:="NVarChar(250)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property state() As String
		Get
			Return Me._state
		End Get
		Set
			If (String.Equals(Me._state, value) = false) Then
				Me.OnstateChanging(value)
				Me.SendPropertyChanging
				Me._state = value
				Me.SendPropertyChanged("state")
				Me.OnstateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_4", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_4() As String
		Get
			Return Me._address_4
		End Get
		Set
			If (String.Equals(Me._address_4, value) = false) Then
				Me.Onaddress_4Changing(value)
				Me.SendPropertyChanging
				Me._address_4 = value
				Me.SendPropertyChanged("address_4")
				Me.Onaddress_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_5", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_5() As String
		Get
			Return Me._address_5
		End Get
		Set
			If (String.Equals(Me._address_5, value) = false) Then
				Me.Onaddress_5Changing(value)
				Me.SendPropertyChanging
				Me._address_5 = value
				Me.SendPropertyChanged("address_5")
				Me.Onaddress_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_6", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_6() As String
		Get
			Return Me._address_6
		End Get
		Set
			If (String.Equals(Me._address_6, value) = false) Then
				Me.Onaddress_6Changing(value)
				Me.SendPropertyChanging
				Me._address_6 = value
				Me.SendPropertyChanged("address_6")
				Me.Onaddress_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_License2", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property License2() As String
		Get
			Return Me._License2
		End Get
		Set
			If (String.Equals(Me._License2, value) = false) Then
				Me.OnLicense2Changing(value)
				Me.SendPropertyChanging
				Me._License2 = value
				Me.SendPropertyChanged("License2")
				Me.OnLicense2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_customer_type_cd", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property customer_type_cd() As System.Nullable(Of Integer)
		Get
			Return Me._customer_type_cd
		End Get
		Set
			If (Me._customer_type_cd.Equals(value) = false) Then
				Me.Oncustomer_type_cdChanging(value)
				Me.SendPropertyChanging
				Me._customer_type_cd = value
				Me.SendPropertyChanged("customer_type_cd")
				Me.Oncustomer_type_cdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_customer_type", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property customer_type() As String
		Get
			Return Me._customer_type
		End Get
		Set
			If (String.Equals(Me._customer_type, value) = false) Then
				Me.Oncustomer_typeChanging(value)
				Me.SendPropertyChanging
				Me._customer_type = value
				Me.SendPropertyChanged("customer_type")
				Me.Oncustomer_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_recall_by_typecd", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property recall_by_typecd() As System.Nullable(Of Integer)
		Get
			Return Me._recall_by_typecd
		End Get
		Set
			If (Me._recall_by_typecd.Equals(value) = false) Then
				Me.Onrecall_by_typecdChanging(value)
				Me.SendPropertyChanging
				Me._recall_by_typecd = value
				Me.SendPropertyChanged("recall_by_typecd")
				Me.Onrecall_by_typecdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_recall_by", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property recall_by() As String
		Get
			Return Me._recall_by
		End Get
		Set
			If (String.Equals(Me._recall_by, value) = false) Then
				Me.Onrecall_byChanging(value)
				Me.SendPropertyChanging
				Me._recall_by = value
				Me.SendPropertyChanged("recall_by")
				Me.Onrecall_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_problem_main", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property problem_main() As String
		Get
			Return Me._problem_main
		End Get
		Set
			If (String.Equals(Me._problem_main, value) = false) Then
				Me.Onproblem_mainChanging(value)
				Me.SendPropertyChanging
				Me._problem_main = value
				Me.SendPropertyChanged("problem_main")
				Me.Onproblem_mainChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_problem_category_1", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property problem_category_1() As String
		Get
			Return Me._problem_category_1
		End Get
		Set
			If (String.Equals(Me._problem_category_1, value) = false) Then
				Me.Onproblem_category_1Changing(value)
				Me.SendPropertyChanging
				Me._problem_category_1 = value
				Me.SendPropertyChanged("problem_category_1")
				Me.Onproblem_category_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_problem_category_2", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property problem_category_2() As String
		Get
			Return Me._problem_category_2
		End Get
		Set
			If (String.Equals(Me._problem_category_2, value) = false) Then
				Me.Onproblem_category_2Changing(value)
				Me.SendPropertyChanging
				Me._problem_category_2 = value
				Me.SendPropertyChanged("problem_category_2")
				Me.Onproblem_category_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_recall_reason", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property recall_reason() As String
		Get
			Return Me._recall_reason
		End Get
		Set
			If (String.Equals(Me._recall_reason, value) = false) Then
				Me.Onrecall_reasonChanging(value)
				Me.SendPropertyChanging
				Me._recall_reason = value
				Me.SendPropertyChanged("recall_reason")
				Me.Onrecall_reasonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year_recall", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Year_recall() As String
		Get
			Return Me._Year_recall
		End Get
		Set
			If (String.Equals(Me._Year_recall, value) = false) Then
				Me.OnYear_recallChanging(value)
				Me.SendPropertyChanging
				Me._Year_recall = value
				Me.SendPropertyChanged("Year_recall")
				Me.OnYear_recallChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_recall", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_recall() As System.Nullable(Of Date)
		Get
			Return Me._date_recall
		End Get
		Set
			If (Me._date_recall.Equals(value) = false) Then
				Me.Ondate_recallChanging(value)
				Me.SendPropertyChanging
				Me._date_recall = value
				Me.SendPropertyChanged("date_recall")
				Me.Ondate_recallChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_recall_end", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_recall_end() As System.Nullable(Of Date)
		Get
			Return Me._date_recall_end
		End Get
		Set
			If (Me._date_recall_end.Equals(value) = false) Then
				Me.Ondate_recall_endChanging(value)
				Me.SendPropertyChanging
				Me._date_recall_end = value
				Me.SendPropertyChanged("date_recall_end")
				Me.Ondate_recall_endChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_condition_cd", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property condition_cd() As System.Nullable(Of Integer)
		Get
			Return Me._condition_cd
		End Get
		Set
			If (Me._condition_cd.Equals(value) = false) Then
				Me.Oncondition_cdChanging(value)
				Me.SendPropertyChanging
				Me._condition_cd = value
				Me.SendPropertyChanged("condition_cd")
				Me.Oncondition_cdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_condition", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property condition() As String
		Get
			Return Me._condition
		End Get
		Set
			If (String.Equals(Me._condition, value) = false) Then
				Me.OnconditionChanging(value)
				Me.SendPropertyChanging
				Me._condition = value
				Me.SendPropertyChanged("condition")
				Me.OnconditionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_extend_1", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_extend_1() As System.Nullable(Of Date)
		Get
			Return Me._date_extend_1
		End Get
		Set
			If (Me._date_extend_1.Equals(value) = false) Then
				Me.Ondate_extend_1Changing(value)
				Me.SendPropertyChanging
				Me._date_extend_1 = value
				Me.SendPropertyChanged("date_extend_1")
				Me.Ondate_extend_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_extend_2", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_extend_2() As System.Nullable(Of Date)
		Get
			Return Me._date_extend_2
		End Get
		Set
			If (Me._date_extend_2.Equals(value) = false) Then
				Me.Ondate_extend_2Changing(value)
				Me.SendPropertyChanging
				Me._date_extend_2 = value
				Me.SendPropertyChanged("date_extend_2")
				Me.Ondate_extend_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_report_back", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_report_back() As System.Nullable(Of Date)
		Get
			Return Me._date_report_back
		End Get
		Set
			If (Me._date_report_back.Equals(value) = false) Then
				Me.Ondate_report_backChanging(value)
				Me.SendPropertyChanging
				Me._date_report_back = value
				Me.SendPropertyChanged("date_report_back")
				Me.Ondate_report_backChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_order_destroy", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_order_destroy() As System.Nullable(Of Date)
		Get
			Return Me._date_order_destroy
		End Get
		Set
			If (Me._date_order_destroy.Equals(value) = false) Then
				Me.Ondate_order_destroyChanging(value)
				Me.SendPropertyChanging
				Me._date_order_destroy = value
				Me.SendPropertyChanged("date_order_destroy")
				Me.Ondate_order_destroyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_destroy", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_destroy() As System.Nullable(Of Date)
		Get
			Return Me._date_destroy
		End Get
		Set
			If (Me._date_destroy.Equals(value) = false) Then
				Me.Ondate_destroyChanging(value)
				Me.SendPropertyChanging
				Me._date_destroy = value
				Me.SendPropertyChanged("date_destroy")
				Me.Ondate_destroyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_out_put", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property out_put() As String
		Get
			Return Me._out_put
		End Get
		Set
			If (String.Equals(Me._out_put, value) = false) Then
				Me.Onout_putChanging(value)
				Me.SendPropertyChanging
				Me._out_put = value
				Me.SendPropertyChanged("out_put")
				Me.Onout_putChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_detail", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property detail() As String
		Get
			Return Me._detail
		End Get
		Set
			If (String.Equals(Me._detail, value) = false) Then
				Me.OndetailChanging(value)
				Me.SendPropertyChanging
				Me._detail = value
				Me.SendPropertyChanged("detail")
				Me.OndetailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ระดับปัญหาคุณภาพยา", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ระดับปัญหาคุณภาพยา() As String
		Get
			Return Me._ระดับปัญหาคุณภาพยา
		End Get
		Set
			If (String.Equals(Me._ระดับปัญหาคุณภาพยา, value) = false) Then
				Me.OnระดับปัญหาคุณภาพยาChanging(value)
				Me.SendPropertyChanging
				Me._ระดับปัญหาคุณภาพยา = value
				Me.SendPropertyChanged("ระดับปัญหาคุณภาพยา")
				Me.OnระดับปัญหาคุณภาพยาChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_เลขที่หนังสือสั่งเก็บยาคืน", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property เลขที่หนังสือสั่งเก็บยาคืน() As String
		Get
			Return Me._เลขที่หนังสือสั่งเก็บยาคืน
		End Get
		Set
			If (String.Equals(Me._เลขที่หนังสือสั่งเก็บยาคืน, value) = false) Then
				Me.Onเลขที่หนังสือสั่งเก็บยาคืนChanging(value)
				Me.SendPropertyChanging
				Me._เลขที่หนังสือสั่งเก็บยาคืน = value
				Me.SendPropertyChanged("เลขที่หนังสือสั่งเก็บยาคืน")
				Me.Onเลขที่หนังสือสั่งเก็บยาคืนChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_สถานะ", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property สถานะ() As String
		Get
			Return Me._สถานะ
		End Get
		Set
			If (String.Equals(Me._สถานะ, value) = false) Then
				Me.OnสถานะChanging(value)
				Me.SendPropertyChanging
				Me._สถานะ = value
				Me.SendPropertyChanged("สถานะ")
				Me.OnสถานะChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[ฝ่าย/ผู้รับผิดชอบ]", Storage:="_ฝ่าย_ผู้รับผิดชอบ", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ฝ่าย_ผู้รับผิดชอบ() As String
		Get
			Return Me._ฝ่าย_ผู้รับผิดชอบ
		End Get
		Set
			If (String.Equals(Me._ฝ่าย_ผู้รับผิดชอบ, value) = false) Then
				Me.Onฝ่าย_ผู้รับผิดชอบChanging(value)
				Me.SendPropertyChanging
				Me._ฝ่าย_ผู้รับผิดชอบ = value
				Me.SendPropertyChanged("ฝ่าย_ผู้รับผิดชอบ")
				Me.Onฝ่าย_ผู้รับผิดชอบChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_การดำเนินคดี", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property การดำเนินคดี() As String
		Get
			Return Me._การดำเนินคดี
		End Get
		Set
			If (String.Equals(Me._การดำเนินคดี, value) = false) Then
				Me.OnการดำเนินคดีChanging(value)
				Me.SendPropertyChanging
				Me._การดำเนินคดี = value
				Me.SendPropertyChanged("การดำเนินคดี")
				Me.OnการดำเนินคดีChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_หมายเหตุเพิ่มเติม", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property หมายเหตุเพิ่มเติม() As String
		Get
			Return Me._หมายเหตุเพิ่มเติม
		End Get
		Set
			If (String.Equals(Me._หมายเหตุเพิ่มเติม, value) = false) Then
				Me.Onหมายเหตุเพิ่มเติมChanging(value)
				Me.SendPropertyChanging
				Me._หมายเหตุเพิ่มเติม = value
				Me.SendPropertyChanged("หมายเหตุเพิ่มเติม")
				Me.Onหมายเหตุเพิ่มเติมChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[index แฟ้ม]", Storage:="_index_แฟ้ม", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property index_แฟ้ม() As System.Nullable(Of Boolean)
		Get
			Return Me._index_แฟ้ม
		End Get
		Set
			If (Me._index_แฟ้ม.Equals(value) = false) Then
				Me.Onindex_แฟ้มChanging(value)
				Me.SendPropertyChanging
				Me._index_แฟ้ม = value
				Me.SendPropertyChanged("index_แฟ้ม")
				Me.Onindex_แฟ้มChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_แฟ้มเอกสารที่", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property แฟ้มเอกสารที่() As String
		Get
			Return Me._แฟ้มเอกสารที่
		End Get
		Set
			If (String.Equals(Me._แฟ้มเอกสารที่, value) = false) Then
				Me.Onแฟ้มเอกสารที่Changing(value)
				Me.SendPropertyChanging
				Me._แฟ้มเอกสารที่ = value
				Me.SendPropertyChanged("แฟ้มเอกสารที่")
				Me.Onแฟ้มเอกสารที่Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Backup Recall type]", Storage:="_Backup_Recall_type", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Backup_Recall_type() As String
		Get
			Return Me._Backup_Recall_type
		End Get
		Set
			If (String.Equals(Me._Backup_Recall_type, value) = false) Then
				Me.OnBackup_Recall_typeChanging(value)
				Me.SendPropertyChanging
				Me._Backup_Recall_type = value
				Me.SendPropertyChanged("Backup_Recall_type")
				Me.OnBackup_Recall_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSMA_TimeStamp", AutoSync:=AutoSync.Always, DbType:="rowversion", IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SSMA_TimeStamp() As System.Data.Linq.Binary
		Get
			Return Me._SSMA_TimeStamp
		End Get
		Set
			If (Object.Equals(Me._SSMA_TimeStamp, value) = false) Then
				Me.OnSSMA_TimeStampChanging(value)
				Me.SendPropertyChanging
				Me._SSMA_TimeStamp = value
				Me.SendPropertyChanged("SSMA_TimeStamp")
				Me.OnSSMA_TimeStampChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.recallMI")>  _
Partial Public Class recallMI
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _date_receive_Recal As System.Nullable(Of Date)
	
	Private _Recall_type As String
	
	Private _drug_name As String
	
	Private _active As String
	
	Private _reg_no As String
	
	Private _lot As String
	
	Private _mfd_date As String
	
	Private _exp_date As String
	
	Private _address_1 As String
	
	Private _address_2 As String
	
	Private _address_3 As String
	
	Private _License1 As String
	
	Private _ประเทศผู้ผลิต As String
	
	Private _address_foreign As String
	
	Private _state As String
	
	Private _address_4 As String
	
	Private _address_5 As String
	
	Private _address_6 As String
	
	Private _License2 As String
	
	Private _ประเภทผู้ประกอบการ As String
	
	Private _recall_by As String
	
	Private _problem_main As String
	
	Private _problem_category_1 As String
	
	Private _problem_category_2 As String
	
	Private _recall_reason As String
	
	Private _Year_recall As String
	
	Private _date_recall As System.Nullable(Of Date)
	
	Private _date_recall_end As System.Nullable(Of Date)
	
	Private _condition As String
	
	Private _date_extend_1 As System.Nullable(Of Date)
	
	Private _date_extend_2 As System.Nullable(Of Date)
	
	Private _date_report_back As System.Nullable(Of Date)
	
	Private _date_order_destroy As System.Nullable(Of Date)
	
	Private _date_destroy As System.Nullable(Of Date)
	
	Private _out_put As String
	
	Private _detail As String
	
	Private _ระดับปัญหาคุณภาพยา As String
	
	Private _เลขที่หนังสือสั่งเก็บยาคืน As String
	
	Private _สถานะ As String
	
	Private _ฝ่าย_ผู้รับผิดชอบ As String
	
	Private _การดำเนินคดี As String
	
	Private _หมายเหตุเพิ่มเติม As String
	
	Private _index_แฟ้ม As System.Nullable(Of Boolean)
	
	Private _แฟ้มเอกสารที่ As String
	
	Private _Backup_Recall_type As String
	
	Private _SSMA_TimeStamp As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub Ondate_receive_RecalChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_receive_RecalChanged()
    End Sub
    Partial Private Sub OnRecall_typeChanging(value As String)
    End Sub
    Partial Private Sub OnRecall_typeChanged()
    End Sub
    Partial Private Sub Ondrug_nameChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_nameChanged()
    End Sub
    Partial Private Sub OnactiveChanging(value As String)
    End Sub
    Partial Private Sub OnactiveChanged()
    End Sub
    Partial Private Sub Onreg_noChanging(value As String)
    End Sub
    Partial Private Sub Onreg_noChanged()
    End Sub
    Partial Private Sub OnlotChanging(value As String)
    End Sub
    Partial Private Sub OnlotChanged()
    End Sub
    Partial Private Sub Onmfd_dateChanging(value As String)
    End Sub
    Partial Private Sub Onmfd_dateChanged()
    End Sub
    Partial Private Sub Onexp_dateChanging(value As String)
    End Sub
    Partial Private Sub Onexp_dateChanged()
    End Sub
    Partial Private Sub Onaddress_1Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_1Changed()
    End Sub
    Partial Private Sub Onaddress_2Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_2Changed()
    End Sub
    Partial Private Sub Onaddress_3Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_3Changed()
    End Sub
    Partial Private Sub OnLicense1Changing(value As String)
    End Sub
    Partial Private Sub OnLicense1Changed()
    End Sub
    Partial Private Sub Onประเทศผู้ผลิตChanging(value As String)
    End Sub
    Partial Private Sub Onประเทศผู้ผลิตChanged()
    End Sub
    Partial Private Sub Onaddress_foreignChanging(value As String)
    End Sub
    Partial Private Sub Onaddress_foreignChanged()
    End Sub
    Partial Private Sub OnstateChanging(value As String)
    End Sub
    Partial Private Sub OnstateChanged()
    End Sub
    Partial Private Sub Onaddress_4Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_4Changed()
    End Sub
    Partial Private Sub Onaddress_5Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_5Changed()
    End Sub
    Partial Private Sub Onaddress_6Changing(value As String)
    End Sub
    Partial Private Sub Onaddress_6Changed()
    End Sub
    Partial Private Sub OnLicense2Changing(value As String)
    End Sub
    Partial Private Sub OnLicense2Changed()
    End Sub
    Partial Private Sub Onประเภทผู้ประกอบการChanging(value As String)
    End Sub
    Partial Private Sub Onประเภทผู้ประกอบการChanged()
    End Sub
    Partial Private Sub Onrecall_byChanging(value As String)
    End Sub
    Partial Private Sub Onrecall_byChanged()
    End Sub
    Partial Private Sub Onproblem_mainChanging(value As String)
    End Sub
    Partial Private Sub Onproblem_mainChanged()
    End Sub
    Partial Private Sub Onproblem_category_1Changing(value As String)
    End Sub
    Partial Private Sub Onproblem_category_1Changed()
    End Sub
    Partial Private Sub Onproblem_category_2Changing(value As String)
    End Sub
    Partial Private Sub Onproblem_category_2Changed()
    End Sub
    Partial Private Sub Onrecall_reasonChanging(value As String)
    End Sub
    Partial Private Sub Onrecall_reasonChanged()
    End Sub
    Partial Private Sub OnYear_recallChanging(value As String)
    End Sub
    Partial Private Sub OnYear_recallChanged()
    End Sub
    Partial Private Sub Ondate_recallChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_recallChanged()
    End Sub
    Partial Private Sub Ondate_recall_endChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_recall_endChanged()
    End Sub
    Partial Private Sub OnconditionChanging(value As String)
    End Sub
    Partial Private Sub OnconditionChanged()
    End Sub
    Partial Private Sub Ondate_extend_1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_extend_1Changed()
    End Sub
    Partial Private Sub Ondate_extend_2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_extend_2Changed()
    End Sub
    Partial Private Sub Ondate_report_backChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_report_backChanged()
    End Sub
    Partial Private Sub Ondate_order_destroyChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_order_destroyChanged()
    End Sub
    Partial Private Sub Ondate_destroyChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_destroyChanged()
    End Sub
    Partial Private Sub Onout_putChanging(value As String)
    End Sub
    Partial Private Sub Onout_putChanged()
    End Sub
    Partial Private Sub OndetailChanging(value As String)
    End Sub
    Partial Private Sub OndetailChanged()
    End Sub
    Partial Private Sub OnระดับปัญหาคุณภาพยาChanging(value As String)
    End Sub
    Partial Private Sub OnระดับปัญหาคุณภาพยาChanged()
    End Sub
    Partial Private Sub Onเลขที่หนังสือสั่งเก็บยาคืนChanging(value As String)
    End Sub
    Partial Private Sub Onเลขที่หนังสือสั่งเก็บยาคืนChanged()
    End Sub
    Partial Private Sub OnสถานะChanging(value As String)
    End Sub
    Partial Private Sub OnสถานะChanged()
    End Sub
    Partial Private Sub Onฝ่าย_ผู้รับผิดชอบChanging(value As String)
    End Sub
    Partial Private Sub Onฝ่าย_ผู้รับผิดชอบChanged()
    End Sub
    Partial Private Sub OnการดำเนินคดีChanging(value As String)
    End Sub
    Partial Private Sub OnการดำเนินคดีChanged()
    End Sub
    Partial Private Sub Onหมายเหตุเพิ่มเติมChanging(value As String)
    End Sub
    Partial Private Sub Onหมายเหตุเพิ่มเติมChanged()
    End Sub
    Partial Private Sub Onindex_แฟ้มChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onindex_แฟ้มChanged()
    End Sub
    Partial Private Sub Onแฟ้มเอกสารที่Changing(value As String)
    End Sub
    Partial Private Sub Onแฟ้มเอกสารที่Changed()
    End Sub
    Partial Private Sub OnBackup_Recall_typeChanging(value As String)
    End Sub
    Partial Private Sub OnBackup_Recall_typeChanged()
    End Sub
    Partial Private Sub OnSSMA_TimeStampChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnSSMA_TimeStampChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[date receive Recal]", Storage:="_date_receive_Recal", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_receive_Recal() As System.Nullable(Of Date)
		Get
			Return Me._date_receive_Recal
		End Get
		Set
			If (Me._date_receive_Recal.Equals(value) = false) Then
				Me.Ondate_receive_RecalChanging(value)
				Me.SendPropertyChanging
				Me._date_receive_Recal = value
				Me.SendPropertyChanged("date_receive_Recal")
				Me.Ondate_receive_RecalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Recall type]", Storage:="_Recall_type", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Recall_type() As String
		Get
			Return Me._Recall_type
		End Get
		Set
			If (String.Equals(Me._Recall_type, value) = false) Then
				Me.OnRecall_typeChanging(value)
				Me.SendPropertyChanging
				Me._Recall_type = value
				Me.SendPropertyChanged("Recall_type")
				Me.OnRecall_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[drug name]", Storage:="_drug_name", DbType:="NVarChar(250) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property drug_name() As String
		Get
			Return Me._drug_name
		End Get
		Set
			If (String.Equals(Me._drug_name, value) = false) Then
				Me.Ondrug_nameChanging(value)
				Me.SendPropertyChanging
				Me._drug_name = value
				Me.SendPropertyChanged("drug_name")
				Me.Ondrug_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="NVarChar(250)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property active() As String
		Get
			Return Me._active
		End Get
		Set
			If (String.Equals(Me._active, value) = false) Then
				Me.OnactiveChanging(value)
				Me.SendPropertyChanging
				Me._active = value
				Me.SendPropertyChanged("active")
				Me.OnactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[reg no]", Storage:="_reg_no", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property reg_no() As String
		Get
			Return Me._reg_no
		End Get
		Set
			If (String.Equals(Me._reg_no, value) = false) Then
				Me.Onreg_noChanging(value)
				Me.SendPropertyChanging
				Me._reg_no = value
				Me.SendPropertyChanged("reg_no")
				Me.Onreg_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lot", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property lot() As String
		Get
			Return Me._lot
		End Get
		Set
			If (String.Equals(Me._lot, value) = false) Then
				Me.OnlotChanging(value)
				Me.SendPropertyChanging
				Me._lot = value
				Me.SendPropertyChanged("lot")
				Me.OnlotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[mfd date]", Storage:="_mfd_date", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property mfd_date() As String
		Get
			Return Me._mfd_date
		End Get
		Set
			If (String.Equals(Me._mfd_date, value) = false) Then
				Me.Onmfd_dateChanging(value)
				Me.SendPropertyChanging
				Me._mfd_date = value
				Me.SendPropertyChanged("mfd_date")
				Me.Onmfd_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[exp date]", Storage:="_exp_date", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property exp_date() As String
		Get
			Return Me._exp_date
		End Get
		Set
			If (String.Equals(Me._exp_date, value) = false) Then
				Me.Onexp_dateChanging(value)
				Me.SendPropertyChanging
				Me._exp_date = value
				Me.SendPropertyChanged("exp_date")
				Me.Onexp_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[address 1]", Storage:="_address_1", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_1() As String
		Get
			Return Me._address_1
		End Get
		Set
			If (String.Equals(Me._address_1, value) = false) Then
				Me.Onaddress_1Changing(value)
				Me.SendPropertyChanging
				Me._address_1 = value
				Me.SendPropertyChanged("address_1")
				Me.Onaddress_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[address 2]", Storage:="_address_2", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_2() As String
		Get
			Return Me._address_2
		End Get
		Set
			If (String.Equals(Me._address_2, value) = false) Then
				Me.Onaddress_2Changing(value)
				Me.SendPropertyChanging
				Me._address_2 = value
				Me.SendPropertyChanged("address_2")
				Me.Onaddress_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[address 3]", Storage:="_address_3", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_3() As String
		Get
			Return Me._address_3
		End Get
		Set
			If (String.Equals(Me._address_3, value) = false) Then
				Me.Onaddress_3Changing(value)
				Me.SendPropertyChanging
				Me._address_3 = value
				Me.SendPropertyChanged("address_3")
				Me.Onaddress_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_License1", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property License1() As String
		Get
			Return Me._License1
		End Get
		Set
			If (String.Equals(Me._License1, value) = false) Then
				Me.OnLicense1Changing(value)
				Me.SendPropertyChanging
				Me._License1 = value
				Me.SendPropertyChanged("License1")
				Me.OnLicense1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ประเทศผู้ผลิต", DbType:="NVarChar(250)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ประเทศผู้ผลิต() As String
		Get
			Return Me._ประเทศผู้ผลิต
		End Get
		Set
			If (String.Equals(Me._ประเทศผู้ผลิต, value) = false) Then
				Me.Onประเทศผู้ผลิตChanging(value)
				Me.SendPropertyChanging
				Me._ประเทศผู้ผลิต = value
				Me.SendPropertyChanged("ประเทศผู้ผลิต")
				Me.Onประเทศผู้ผลิตChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_foreign", DbType:="NVarChar(250)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_foreign() As String
		Get
			Return Me._address_foreign
		End Get
		Set
			If (String.Equals(Me._address_foreign, value) = false) Then
				Me.Onaddress_foreignChanging(value)
				Me.SendPropertyChanging
				Me._address_foreign = value
				Me.SendPropertyChanged("address_foreign")
				Me.Onaddress_foreignChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_state", DbType:="NVarChar(250)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property state() As String
		Get
			Return Me._state
		End Get
		Set
			If (String.Equals(Me._state, value) = false) Then
				Me.OnstateChanging(value)
				Me.SendPropertyChanging
				Me._state = value
				Me.SendPropertyChanged("state")
				Me.OnstateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[address 4]", Storage:="_address_4", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_4() As String
		Get
			Return Me._address_4
		End Get
		Set
			If (String.Equals(Me._address_4, value) = false) Then
				Me.Onaddress_4Changing(value)
				Me.SendPropertyChanging
				Me._address_4 = value
				Me.SendPropertyChanged("address_4")
				Me.Onaddress_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[address 5]", Storage:="_address_5", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_5() As String
		Get
			Return Me._address_5
		End Get
		Set
			If (String.Equals(Me._address_5, value) = false) Then
				Me.Onaddress_5Changing(value)
				Me.SendPropertyChanging
				Me._address_5 = value
				Me.SendPropertyChanged("address_5")
				Me.Onaddress_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[address 6]", Storage:="_address_6", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property address_6() As String
		Get
			Return Me._address_6
		End Get
		Set
			If (String.Equals(Me._address_6, value) = false) Then
				Me.Onaddress_6Changing(value)
				Me.SendPropertyChanging
				Me._address_6 = value
				Me.SendPropertyChanged("address_6")
				Me.Onaddress_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_License2", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property License2() As String
		Get
			Return Me._License2
		End Get
		Set
			If (String.Equals(Me._License2, value) = false) Then
				Me.OnLicense2Changing(value)
				Me.SendPropertyChanging
				Me._License2 = value
				Me.SendPropertyChanged("License2")
				Me.OnLicense2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ประเภทผู้ประกอบการ", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ประเภทผู้ประกอบการ() As String
		Get
			Return Me._ประเภทผู้ประกอบการ
		End Get
		Set
			If (String.Equals(Me._ประเภทผู้ประกอบการ, value) = false) Then
				Me.Onประเภทผู้ประกอบการChanging(value)
				Me.SendPropertyChanging
				Me._ประเภทผู้ประกอบการ = value
				Me.SendPropertyChanged("ประเภทผู้ประกอบการ")
				Me.Onประเภทผู้ประกอบการChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_recall_by", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property recall_by() As String
		Get
			Return Me._recall_by
		End Get
		Set
			If (String.Equals(Me._recall_by, value) = false) Then
				Me.Onrecall_byChanging(value)
				Me.SendPropertyChanging
				Me._recall_by = value
				Me.SendPropertyChanged("recall_by")
				Me.Onrecall_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[problem main]", Storage:="_problem_main", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property problem_main() As String
		Get
			Return Me._problem_main
		End Get
		Set
			If (String.Equals(Me._problem_main, value) = false) Then
				Me.Onproblem_mainChanging(value)
				Me.SendPropertyChanging
				Me._problem_main = value
				Me.SendPropertyChanged("problem_main")
				Me.Onproblem_mainChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[problem category 1]", Storage:="_problem_category_1", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property problem_category_1() As String
		Get
			Return Me._problem_category_1
		End Get
		Set
			If (String.Equals(Me._problem_category_1, value) = false) Then
				Me.Onproblem_category_1Changing(value)
				Me.SendPropertyChanging
				Me._problem_category_1 = value
				Me.SendPropertyChanged("problem_category_1")
				Me.Onproblem_category_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[problem category 2]", Storage:="_problem_category_2", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property problem_category_2() As String
		Get
			Return Me._problem_category_2
		End Get
		Set
			If (String.Equals(Me._problem_category_2, value) = false) Then
				Me.Onproblem_category_2Changing(value)
				Me.SendPropertyChanging
				Me._problem_category_2 = value
				Me.SendPropertyChanged("problem_category_2")
				Me.Onproblem_category_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[recall reason]", Storage:="_recall_reason", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property recall_reason() As String
		Get
			Return Me._recall_reason
		End Get
		Set
			If (String.Equals(Me._recall_reason, value) = false) Then
				Me.Onrecall_reasonChanging(value)
				Me.SendPropertyChanging
				Me._recall_reason = value
				Me.SendPropertyChanged("recall_reason")
				Me.Onrecall_reasonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Year recall]", Storage:="_Year_recall", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Year_recall() As String
		Get
			Return Me._Year_recall
		End Get
		Set
			If (String.Equals(Me._Year_recall, value) = false) Then
				Me.OnYear_recallChanging(value)
				Me.SendPropertyChanging
				Me._Year_recall = value
				Me.SendPropertyChanged("Year_recall")
				Me.OnYear_recallChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[date recall]", Storage:="_date_recall", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_recall() As System.Nullable(Of Date)
		Get
			Return Me._date_recall
		End Get
		Set
			If (Me._date_recall.Equals(value) = false) Then
				Me.Ondate_recallChanging(value)
				Me.SendPropertyChanging
				Me._date_recall = value
				Me.SendPropertyChanged("date_recall")
				Me.Ondate_recallChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[date recall end]", Storage:="_date_recall_end", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_recall_end() As System.Nullable(Of Date)
		Get
			Return Me._date_recall_end
		End Get
		Set
			If (Me._date_recall_end.Equals(value) = false) Then
				Me.Ondate_recall_endChanging(value)
				Me.SendPropertyChanging
				Me._date_recall_end = value
				Me.SendPropertyChanged("date_recall_end")
				Me.Ondate_recall_endChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_condition", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property condition() As String
		Get
			Return Me._condition
		End Get
		Set
			If (String.Equals(Me._condition, value) = false) Then
				Me.OnconditionChanging(value)
				Me.SendPropertyChanging
				Me._condition = value
				Me.SendPropertyChanged("condition")
				Me.OnconditionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[date extend 1]", Storage:="_date_extend_1", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_extend_1() As System.Nullable(Of Date)
		Get
			Return Me._date_extend_1
		End Get
		Set
			If (Me._date_extend_1.Equals(value) = false) Then
				Me.Ondate_extend_1Changing(value)
				Me.SendPropertyChanging
				Me._date_extend_1 = value
				Me.SendPropertyChanged("date_extend_1")
				Me.Ondate_extend_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[date extend 2]", Storage:="_date_extend_2", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_extend_2() As System.Nullable(Of Date)
		Get
			Return Me._date_extend_2
		End Get
		Set
			If (Me._date_extend_2.Equals(value) = false) Then
				Me.Ondate_extend_2Changing(value)
				Me.SendPropertyChanging
				Me._date_extend_2 = value
				Me.SendPropertyChanged("date_extend_2")
				Me.Ondate_extend_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[date report back]", Storage:="_date_report_back", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_report_back() As System.Nullable(Of Date)
		Get
			Return Me._date_report_back
		End Get
		Set
			If (Me._date_report_back.Equals(value) = false) Then
				Me.Ondate_report_backChanging(value)
				Me.SendPropertyChanging
				Me._date_report_back = value
				Me.SendPropertyChanged("date_report_back")
				Me.Ondate_report_backChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[date order destroy]", Storage:="_date_order_destroy", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_order_destroy() As System.Nullable(Of Date)
		Get
			Return Me._date_order_destroy
		End Get
		Set
			If (Me._date_order_destroy.Equals(value) = false) Then
				Me.Ondate_order_destroyChanging(value)
				Me.SendPropertyChanging
				Me._date_order_destroy = value
				Me.SendPropertyChanged("date_order_destroy")
				Me.Ondate_order_destroyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[date destroy]", Storage:="_date_destroy", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property date_destroy() As System.Nullable(Of Date)
		Get
			Return Me._date_destroy
		End Get
		Set
			If (Me._date_destroy.Equals(value) = false) Then
				Me.Ondate_destroyChanging(value)
				Me.SendPropertyChanging
				Me._date_destroy = value
				Me.SendPropertyChanged("date_destroy")
				Me.Ondate_destroyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[out put]", Storage:="_out_put", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property out_put() As String
		Get
			Return Me._out_put
		End Get
		Set
			If (String.Equals(Me._out_put, value) = false) Then
				Me.Onout_putChanging(value)
				Me.SendPropertyChanging
				Me._out_put = value
				Me.SendPropertyChanged("out_put")
				Me.Onout_putChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_detail", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property detail() As String
		Get
			Return Me._detail
		End Get
		Set
			If (String.Equals(Me._detail, value) = false) Then
				Me.OndetailChanging(value)
				Me.SendPropertyChanging
				Me._detail = value
				Me.SendPropertyChanged("detail")
				Me.OndetailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ระดับปัญหาคุณภาพยา", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ระดับปัญหาคุณภาพยา() As String
		Get
			Return Me._ระดับปัญหาคุณภาพยา
		End Get
		Set
			If (String.Equals(Me._ระดับปัญหาคุณภาพยา, value) = false) Then
				Me.OnระดับปัญหาคุณภาพยาChanging(value)
				Me.SendPropertyChanging
				Me._ระดับปัญหาคุณภาพยา = value
				Me.SendPropertyChanged("ระดับปัญหาคุณภาพยา")
				Me.OnระดับปัญหาคุณภาพยาChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_เลขที่หนังสือสั่งเก็บยาคืน", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property เลขที่หนังสือสั่งเก็บยาคืน() As String
		Get
			Return Me._เลขที่หนังสือสั่งเก็บยาคืน
		End Get
		Set
			If (String.Equals(Me._เลขที่หนังสือสั่งเก็บยาคืน, value) = false) Then
				Me.Onเลขที่หนังสือสั่งเก็บยาคืนChanging(value)
				Me.SendPropertyChanging
				Me._เลขที่หนังสือสั่งเก็บยาคืน = value
				Me.SendPropertyChanged("เลขที่หนังสือสั่งเก็บยาคืน")
				Me.Onเลขที่หนังสือสั่งเก็บยาคืนChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_สถานะ", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property สถานะ() As String
		Get
			Return Me._สถานะ
		End Get
		Set
			If (String.Equals(Me._สถานะ, value) = false) Then
				Me.OnสถานะChanging(value)
				Me.SendPropertyChanging
				Me._สถานะ = value
				Me.SendPropertyChanged("สถานะ")
				Me.OnสถานะChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[ฝ่าย/ผู้รับผิดชอบ]", Storage:="_ฝ่าย_ผู้รับผิดชอบ", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ฝ่าย_ผู้รับผิดชอบ() As String
		Get
			Return Me._ฝ่าย_ผู้รับผิดชอบ
		End Get
		Set
			If (String.Equals(Me._ฝ่าย_ผู้รับผิดชอบ, value) = false) Then
				Me.Onฝ่าย_ผู้รับผิดชอบChanging(value)
				Me.SendPropertyChanging
				Me._ฝ่าย_ผู้รับผิดชอบ = value
				Me.SendPropertyChanged("ฝ่าย_ผู้รับผิดชอบ")
				Me.Onฝ่าย_ผู้รับผิดชอบChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_การดำเนินคดี", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property การดำเนินคดี() As String
		Get
			Return Me._การดำเนินคดี
		End Get
		Set
			If (String.Equals(Me._การดำเนินคดี, value) = false) Then
				Me.OnการดำเนินคดีChanging(value)
				Me.SendPropertyChanging
				Me._การดำเนินคดี = value
				Me.SendPropertyChanged("การดำเนินคดี")
				Me.OnการดำเนินคดีChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_หมายเหตุเพิ่มเติม", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property หมายเหตุเพิ่มเติม() As String
		Get
			Return Me._หมายเหตุเพิ่มเติม
		End Get
		Set
			If (String.Equals(Me._หมายเหตุเพิ่มเติม, value) = false) Then
				Me.Onหมายเหตุเพิ่มเติมChanging(value)
				Me.SendPropertyChanging
				Me._หมายเหตุเพิ่มเติม = value
				Me.SendPropertyChanged("หมายเหตุเพิ่มเติม")
				Me.Onหมายเหตุเพิ่มเติมChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[index แฟ้ม]", Storage:="_index_แฟ้ม", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property index_แฟ้ม() As System.Nullable(Of Boolean)
		Get
			Return Me._index_แฟ้ม
		End Get
		Set
			If (Me._index_แฟ้ม.Equals(value) = false) Then
				Me.Onindex_แฟ้มChanging(value)
				Me.SendPropertyChanging
				Me._index_แฟ้ม = value
				Me.SendPropertyChanged("index_แฟ้ม")
				Me.Onindex_แฟ้มChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_แฟ้มเอกสารที่", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property แฟ้มเอกสารที่() As String
		Get
			Return Me._แฟ้มเอกสารที่
		End Get
		Set
			If (String.Equals(Me._แฟ้มเอกสารที่, value) = false) Then
				Me.Onแฟ้มเอกสารที่Changing(value)
				Me.SendPropertyChanging
				Me._แฟ้มเอกสารที่ = value
				Me.SendPropertyChanged("แฟ้มเอกสารที่")
				Me.Onแฟ้มเอกสารที่Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Backup Recall type]", Storage:="_Backup_Recall_type", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Backup_Recall_type() As String
		Get
			Return Me._Backup_Recall_type
		End Get
		Set
			If (String.Equals(Me._Backup_Recall_type, value) = false) Then
				Me.OnBackup_Recall_typeChanging(value)
				Me.SendPropertyChanging
				Me._Backup_Recall_type = value
				Me.SendPropertyChanged("Backup_Recall_type")
				Me.OnBackup_Recall_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSMA_TimeStamp", AutoSync:=AutoSync.Always, DbType:="rowversion NOT NULL", CanBeNull:=false, IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SSMA_TimeStamp() As System.Data.Linq.Binary
		Get
			Return Me._SSMA_TimeStamp
		End Get
		Set
			If (Object.Equals(Me._SSMA_TimeStamp, value) = false) Then
				Me.OnSSMA_TimeStampChanging(value)
				Me.SendPropertyChanging
				Me._SSMA_TimeStamp = value
				Me.SendPropertyChanged("SSMA_TimeStamp")
				Me.OnSSMA_TimeStampChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RECHECK_COMPLAIN")>  _
Partial Public Class RECHECK_COMPLAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_ID As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PATH As String
	
	Private _PROCESS_ID As String
	
	Private _STATUS As String
	
	Private _ACTION_CD As System.Nullable(Of Integer)
	
	Private _ACTIONE_NM As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPATHChanging(value As String)
    End Sub
    Partial Private Sub OnPATHChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnACTION_CDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTION_CDChanged()
    End Sub
    Partial Private Sub OnACTIONE_NMChanging(value As String)
    End Sub
    Partial Private Sub OnACTIONE_NMChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property PATH() As String
		Get
			Return Me._PATH
		End Get
		Set
			If (String.Equals(Me._PATH, value) = false) Then
				Me.OnPATHChanging(value)
				Me.SendPropertyChanging
				Me._PATH = value
				Me.SendPropertyChanged("PATH")
				Me.OnPATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTION_CD", DbType:="Int")>  _
	Public Property ACTION_CD() As System.Nullable(Of Integer)
		Get
			Return Me._ACTION_CD
		End Get
		Set
			If (Me._ACTION_CD.Equals(value) = false) Then
				Me.OnACTION_CDChanging(value)
				Me.SendPropertyChanging
				Me._ACTION_CD = value
				Me.SendPropertyChanged("ACTION_CD")
				Me.OnACTION_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIONE_NM", DbType:="NVarChar(MAX)")>  _
	Public Property ACTIONE_NM() As String
		Get
			Return Me._ACTIONE_NM
		End Get
		Set
			If (String.Equals(Me._ACTIONE_NM, value) = false) Then
				Me.OnACTIONE_NMChanging(value)
				Me.SendPropertyChanging
				Me._ACTIONE_NM = value
				Me.SendPropertyChanged("ACTIONE_NM")
				Me.OnACTIONE_NMChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.REQ_CER_GMP")>  _
Partial Public Class REQ_CER_GMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_ID As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PROCESS_ID As String
	
	Private _STATUS As String
	
	Private _TR_ID As String
	
	Private _lcnno As String
	
	Private _lcntpcd As String
	
	Private _Identify As String
	
	Private _xml_name As String
	
	Private _pvncd As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _pdf_name As String
	
	Private _APP_DATE As System.Nullable(Of Date)
	
	Private _APPROVE_DATE As System.Nullable(Of Date)
	
	Private _Newcode_not As String
	
	Private _licen As String
	
	Private _thanm As String
	
	Private _thanm_address As String
	
	Private _lcnno_no As String
	
	Private _lcntpcd_sub As String
	
	Private _fax As String
	
	Private _tel As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnIdentifyChanging(value As String)
    End Sub
    Partial Private Sub OnIdentifyChanged()
    End Sub
    Partial Private Sub Onxml_nameChanging(value As String)
    End Sub
    Partial Private Sub Onxml_nameChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub Onpdf_nameChanging(value As String)
    End Sub
    Partial Private Sub Onpdf_nameChanged()
    End Sub
    Partial Private Sub OnAPP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPP_DATEChanged()
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnNewcode_notChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_notChanged()
    End Sub
    Partial Private Sub OnlicenChanging(value As String)
    End Sub
    Partial Private Sub OnlicenChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub Onthanm_addressChanging(value As String)
    End Sub
    Partial Private Sub Onthanm_addressChanged()
    End Sub
    Partial Private Sub Onlcnno_noChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_noChanged()
    End Sub
    Partial Private Sub Onlcntpcd_subChanging(value As String)
    End Sub
    Partial Private Sub Onlcntpcd_subChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identify", DbType:="NVarChar(MAX)")>  _
	Public Property Identify() As String
		Get
			Return Me._Identify
		End Get
		Set
			If (String.Equals(Me._Identify, value) = false) Then
				Me.OnIdentifyChanging(value)
				Me.SendPropertyChanging
				Me._Identify = value
				Me.SendPropertyChanged("Identify")
				Me.OnIdentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xml_name", DbType:="NVarChar(MAX)")>  _
	Public Property xml_name() As String
		Get
			Return Me._xml_name
		End Get
		Set
			If (String.Equals(Me._xml_name, value) = false) Then
				Me.Onxml_nameChanging(value)
				Me.SendPropertyChanging
				Me._xml_name = value
				Me.SendPropertyChanged("xml_name")
				Me.Onxml_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pdf_name", DbType:="NVarChar(MAX)")>  _
	Public Property pdf_name() As String
		Get
			Return Me._pdf_name
		End Get
		Set
			If (String.Equals(Me._pdf_name, value) = false) Then
				Me.Onpdf_nameChanging(value)
				Me.SendPropertyChanging
				Me._pdf_name = value
				Me.SendPropertyChanged("pdf_name")
				Me.Onpdf_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APP_DATE", DbType:="Date")>  _
	Public Property APP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APP_DATE
		End Get
		Set
			If (Me._APP_DATE.Equals(value) = false) Then
				Me.OnAPP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APP_DATE = value
				Me.SendPropertyChanged("APP_DATE")
				Me.OnAPP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_DATE", DbType:="Date")>  _
	Public Property APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APPROVE_DATE
		End Get
		Set
			If (Me._APPROVE_DATE.Equals(value) = false) Then
				Me.OnAPPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_DATE = value
				Me.SendPropertyChanged("APPROVE_DATE")
				Me.OnAPPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_not", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_not() As String
		Get
			Return Me._Newcode_not
		End Get
		Set
			If (String.Equals(Me._Newcode_not, value) = false) Then
				Me.OnNewcode_notChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_not = value
				Me.SendPropertyChanged("Newcode_not")
				Me.OnNewcode_notChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen", DbType:="NVarChar(MAX)")>  _
	Public Property licen() As String
		Get
			Return Me._licen
		End Get
		Set
			If (String.Equals(Me._licen, value) = false) Then
				Me.OnlicenChanging(value)
				Me.SendPropertyChanging
				Me._licen = value
				Me.SendPropertyChanged("licen")
				Me.OnlicenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm_address", DbType:="NVarChar(MAX)")>  _
	Public Property thanm_address() As String
		Get
			Return Me._thanm_address
		End Get
		Set
			If (String.Equals(Me._thanm_address, value) = false) Then
				Me.Onthanm_addressChanging(value)
				Me.SendPropertyChanging
				Me._thanm_address = value
				Me.SendPropertyChanged("thanm_address")
				Me.Onthanm_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_no", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno_no() As String
		Get
			Return Me._lcnno_no
		End Get
		Set
			If (String.Equals(Me._lcnno_no, value) = false) Then
				Me.Onlcnno_noChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_no = value
				Me.SendPropertyChanged("lcnno_no")
				Me.Onlcnno_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd_sub", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd_sub() As String
		Get
			Return Me._lcntpcd_sub
		End Get
		Set
			If (String.Equals(Me._lcntpcd_sub, value) = false) Then
				Me.Onlcntpcd_subChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd_sub = value
				Me.SendPropertyChanged("lcntpcd_sub")
				Me.Onlcntpcd_subChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.REQ_CONTINUE_CERGMP")>  _
Partial Public Class REQ_CONTINUE_CERGMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As String
	
	Private _lcnno As String
	
	Private _lcnno_no As String
	
	Private _pvncd As String
	
	Private _lcntpcd As String
	
	Private _lcntpcd_sub As String
	
	Private _extend_year As String
	
	Private _CITIZEN_ID As String
	
	Private _RCVNO As String
	
	Private _APPDATE As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _APPROVE_DATE As System.Nullable(Of Date)
	
	Private _Newcode_not As String
	
	Private _RCVNO_MANUAL As String
	
	Private _PROCESS_ID As String
	
	Private _TR_ID As String
	
	Private _thanm As String
	
	Private _thanm_address As String
	
	Private _licen As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _pdf_name As String
	
	Private _xml_name As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onlcnno_noChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_noChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub Onlcntpcd_subChanging(value As String)
    End Sub
    Partial Private Sub Onlcntpcd_subChanged()
    End Sub
    Partial Private Sub Onextend_yearChanging(value As String)
    End Sub
    Partial Private Sub Onextend_yearChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnAPPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPDATEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnNewcode_notChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_notChanged()
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub Onthanm_addressChanging(value As String)
    End Sub
    Partial Private Sub Onthanm_addressChanged()
    End Sub
    Partial Private Sub OnlicenChanging(value As String)
    End Sub
    Partial Private Sub OnlicenChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub Onpdf_nameChanging(value As String)
    End Sub
    Partial Private Sub Onpdf_nameChanged()
    End Sub
    Partial Private Sub Onxml_nameChanging(value As String)
    End Sub
    Partial Private Sub Onxml_nameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_ID() As String
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (String.Equals(Me._STATUS_ID, value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_no", DbType:="NVarChar(50)")>  _
	Public Property lcnno_no() As String
		Get
			Return Me._lcnno_no
		End Get
		Set
			If (String.Equals(Me._lcnno_no, value) = false) Then
				Me.Onlcnno_noChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_no = value
				Me.SendPropertyChanged("lcnno_no")
				Me.Onlcnno_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NChar(10)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd_sub", DbType:="NVarChar(50)")>  _
	Public Property lcntpcd_sub() As String
		Get
			Return Me._lcntpcd_sub
		End Get
		Set
			If (String.Equals(Me._lcntpcd_sub, value) = false) Then
				Me.Onlcntpcd_subChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd_sub = value
				Me.SendPropertyChanged("lcntpcd_sub")
				Me.Onlcntpcd_subChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_extend_year", DbType:="NChar(10)")>  _
	Public Property extend_year() As String
		Get
			Return Me._extend_year
		End Get
		Set
			If (String.Equals(Me._extend_year, value) = false) Then
				Me.Onextend_yearChanging(value)
				Me.SendPropertyChanging
				Me._extend_year = value
				Me.SendPropertyChanged("extend_year")
				Me.Onextend_yearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPDATE", DbType:="Date")>  _
	Public Property APPDATE() As System.Nullable(Of Date)
		Get
			Return Me._APPDATE
		End Get
		Set
			If (Me._APPDATE.Equals(value) = false) Then
				Me.OnAPPDATEChanging(value)
				Me.SendPropertyChanging
				Me._APPDATE = value
				Me.SendPropertyChanged("APPDATE")
				Me.OnAPPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_DATE", DbType:="Date")>  _
	Public Property APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APPROVE_DATE
		End Get
		Set
			If (Me._APPROVE_DATE.Equals(value) = false) Then
				Me.OnAPPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_DATE = value
				Me.SendPropertyChanged("APPROVE_DATE")
				Me.OnAPPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_not", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_not() As String
		Get
			Return Me._Newcode_not
		End Get
		Set
			If (String.Equals(Me._Newcode_not, value) = false) Then
				Me.OnNewcode_notChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_not = value
				Me.SendPropertyChanged("Newcode_not")
				Me.OnNewcode_notChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_MANUAL", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_MANUAL() As String
		Get
			Return Me._RCVNO_MANUAL
		End Get
		Set
			If (String.Equals(Me._RCVNO_MANUAL, value) = false) Then
				Me.OnRCVNO_MANUALChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_MANUAL = value
				Me.SendPropertyChanged("RCVNO_MANUAL")
				Me.OnRCVNO_MANUALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm_address", DbType:="NVarChar(MAX)")>  _
	Public Property thanm_address() As String
		Get
			Return Me._thanm_address
		End Get
		Set
			If (String.Equals(Me._thanm_address, value) = false) Then
				Me.Onthanm_addressChanging(value)
				Me.SendPropertyChanging
				Me._thanm_address = value
				Me.SendPropertyChanged("thanm_address")
				Me.Onthanm_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen", DbType:="NVarChar(MAX)")>  _
	Public Property licen() As String
		Get
			Return Me._licen
		End Get
		Set
			If (String.Equals(Me._licen, value) = false) Then
				Me.OnlicenChanging(value)
				Me.SendPropertyChanging
				Me._licen = value
				Me.SendPropertyChanged("licen")
				Me.OnlicenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pdf_name", DbType:="NVarChar(MAX)")>  _
	Public Property pdf_name() As String
		Get
			Return Me._pdf_name
		End Get
		Set
			If (String.Equals(Me._pdf_name, value) = false) Then
				Me.Onpdf_nameChanging(value)
				Me.SendPropertyChanging
				Me._pdf_name = value
				Me.SendPropertyChanged("pdf_name")
				Me.Onpdf_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xml_name", DbType:="NVarChar(MAX)")>  _
	Public Property xml_name() As String
		Get
			Return Me._xml_name
		End Get
		Set
			If (String.Equals(Me._xml_name, value) = false) Then
				Me.Onxml_nameChanging(value)
				Me.SendPropertyChanging
				Me._xml_name = value
				Me.SendPropertyChanged("xml_name")
				Me.Onxml_nameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.REQ_NEW_GMP")>  _
Partial Public Class REQ_NEW_GMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PROCESS_ID As String
	
	Private _lcnno As String
	
	Private _lcntpcd As String
	
	Private _Identify As String
	
	Private _thanm_address As String
	
	Private _Newcode_not As String
	
	Private _thanm As String
	
	Private _lcnno_no As String
	
	Private _status As String
	
	Private _ACTIVE As String
	
	Private _APP_DATE As System.Nullable(Of Date)
	
	Private _pvncd As String
	
	Private _xml_name As String
	
	Private _TR_ID As String
	
	Private _tel As String
	
	Private _licen As String
	
	Private _fax As String
	
	Private _lcntpcd_sub As String
	
	Private _pdf_name As String
	
	Private _APPROVE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnIdentifyChanging(value As String)
    End Sub
    Partial Private Sub OnIdentifyChanged()
    End Sub
    Partial Private Sub Onthanm_addressChanging(value As String)
    End Sub
    Partial Private Sub Onthanm_addressChanged()
    End Sub
    Partial Private Sub OnNewcode_notChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_notChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub Onlcnno_noChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_noChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As String)
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    Partial Private Sub OnAPP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPP_DATEChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub Onxml_nameChanging(value As String)
    End Sub
    Partial Private Sub Onxml_nameChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnlicenChanging(value As String)
    End Sub
    Partial Private Sub OnlicenChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub Onlcntpcd_subChanging(value As String)
    End Sub
    Partial Private Sub Onlcntpcd_subChanged()
    End Sub
    Partial Private Sub Onpdf_nameChanging(value As String)
    End Sub
    Partial Private Sub Onpdf_nameChanged()
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identify", DbType:="NVarChar(MAX)")>  _
	Public Property Identify() As String
		Get
			Return Me._Identify
		End Get
		Set
			If (String.Equals(Me._Identify, value) = false) Then
				Me.OnIdentifyChanging(value)
				Me.SendPropertyChanging
				Me._Identify = value
				Me.SendPropertyChanged("Identify")
				Me.OnIdentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm_address", DbType:="NVarChar(MAX)")>  _
	Public Property thanm_address() As String
		Get
			Return Me._thanm_address
		End Get
		Set
			If (String.Equals(Me._thanm_address, value) = false) Then
				Me.Onthanm_addressChanging(value)
				Me.SendPropertyChanging
				Me._thanm_address = value
				Me.SendPropertyChanged("thanm_address")
				Me.Onthanm_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_not", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_not() As String
		Get
			Return Me._Newcode_not
		End Get
		Set
			If (String.Equals(Me._Newcode_not, value) = false) Then
				Me.OnNewcode_notChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_not = value
				Me.SendPropertyChanged("Newcode_not")
				Me.OnNewcode_notChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_no", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno_no() As String
		Get
			Return Me._lcnno_no
		End Get
		Set
			If (String.Equals(Me._lcnno_no, value) = false) Then
				Me.Onlcnno_noChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_no = value
				Me.SendPropertyChanged("lcnno_no")
				Me.Onlcnno_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="NVarChar(MAX)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="NVarChar(MAX)")>  _
	Public Property ACTIVE() As String
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (String.Equals(Me._ACTIVE, value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APP_DATE", DbType:="Date")>  _
	Public Property APP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APP_DATE
		End Get
		Set
			If (Me._APP_DATE.Equals(value) = false) Then
				Me.OnAPP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APP_DATE = value
				Me.SendPropertyChanged("APP_DATE")
				Me.OnAPP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xml_name", DbType:="NVarChar(MAX)")>  _
	Public Property xml_name() As String
		Get
			Return Me._xml_name
		End Get
		Set
			If (String.Equals(Me._xml_name, value) = false) Then
				Me.Onxml_nameChanging(value)
				Me.SendPropertyChanging
				Me._xml_name = value
				Me.SendPropertyChanged("xml_name")
				Me.Onxml_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(50)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen", DbType:="NVarChar(MAX)")>  _
	Public Property licen() As String
		Get
			Return Me._licen
		End Get
		Set
			If (String.Equals(Me._licen, value) = false) Then
				Me.OnlicenChanging(value)
				Me.SendPropertyChanging
				Me._licen = value
				Me.SendPropertyChanged("licen")
				Me.OnlicenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(50)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd_sub", DbType:="NChar(10)")>  _
	Public Property lcntpcd_sub() As String
		Get
			Return Me._lcntpcd_sub
		End Get
		Set
			If (String.Equals(Me._lcntpcd_sub, value) = false) Then
				Me.Onlcntpcd_subChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd_sub = value
				Me.SendPropertyChanged("lcntpcd_sub")
				Me.Onlcntpcd_subChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pdf_name", DbType:="NVarChar(MAX)")>  _
	Public Property pdf_name() As String
		Get
			Return Me._pdf_name
		End Get
		Set
			If (String.Equals(Me._pdf_name, value) = false) Then
				Me.Onpdf_nameChanging(value)
				Me.SendPropertyChanging
				Me._pdf_name = value
				Me.SendPropertyChanged("pdf_name")
				Me.Onpdf_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_DATE", DbType:="Date")>  _
	Public Property APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APPROVE_DATE
		End Get
		Set
			If (Me._APPROVE_DATE.Equals(value) = false) Then
				Me.OnAPPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_DATE = value
				Me.SendPropertyChanged("APPROVE_DATE")
				Me.OnAPPROVE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.REQ_NEWGMP_XML")>  _
Partial Public Class REQ_NEWGMP_XML
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_ID As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PATHFULL As String
	
	Private _PROCESS_ID As String
	
	Private _STATUS As String
	
	Private _TYPE As String
	
	Private _PATH As String
	
	Private _FILENAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPATHFULLChanging(value As String)
    End Sub
    Partial Private Sub OnPATHFULLChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnPATHChanging(value As String)
    End Sub
    Partial Private Sub OnPATHChanged()
    End Sub
    Partial Private Sub OnFILENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFILENAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATHFULL", DbType:="NVarChar(MAX)")>  _
	Public Property PATHFULL() As String
		Get
			Return Me._PATHFULL
		End Get
		Set
			If (String.Equals(Me._PATHFULL, value) = false) Then
				Me.OnPATHFULLChanging(value)
				Me.SendPropertyChanging
				Me._PATHFULL = value
				Me.SendPropertyChanged("PATHFULL")
				Me.OnPATHFULLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property PATH() As String
		Get
			Return Me._PATH
		End Get
		Set
			If (String.Equals(Me._PATH, value) = false) Then
				Me.OnPATHChanging(value)
				Me.SendPropertyChanging
				Me._PATH = value
				Me.SendPropertyChanged("PATH")
				Me.OnPATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILENAME", DbType:="NVarChar(MAX)")>  _
	Public Property FILENAME() As String
		Get
			Return Me._FILENAME
		End Get
		Set
			If (String.Equals(Me._FILENAME, value) = false) Then
				Me.OnFILENAMEChanging(value)
				Me.SendPropertyChanging
				Me._FILENAME = value
				Me.SendPropertyChanged("FILENAME")
				Me.OnFILENAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAMPLE_DRUG_KEEP")>  _
Partial Public Class SAMPLE_DRUG_KEEP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _XML_IDA As System.Nullable(Of Integer)
	
	Private _TYPE As System.Nullable(Of Integer)
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _REGIS_IDA As System.Nullable(Of Integer)
	
	Private _AMOUNT As System.Nullable(Of Integer)
	
	Private _UNIT As String
	
	Private _FK_PLAN As System.Nullable(Of Integer)
	
	Private _REF_CODE As String
	
	Private _YEAR As String
	
	Private _DATE_CREATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnXML_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnXML_IDAChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnREGIS_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREGIS_IDAChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnUNITChanging(value As String)
    End Sub
    Partial Private Sub OnUNITChanged()
    End Sub
    Partial Private Sub OnFK_PLANChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PLANChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnDATE_CREATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CREATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_IDA", DbType:="Int")>  _
	Public Property XML_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._XML_IDA
		End Get
		Set
			If (Me._XML_IDA.Equals(value) = false) Then
				Me.OnXML_IDAChanging(value)
				Me.SendPropertyChanging
				Me._XML_IDA = value
				Me.SendPropertyChanged("XML_IDA")
				Me.OnXML_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="Int")>  _
	Public Property TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE
		End Get
		Set
			If (Me._TYPE.Equals(value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGIS_IDA", DbType:="Int")>  _
	Public Property REGIS_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._REGIS_IDA
		End Get
		Set
			If (Me._REGIS_IDA.Equals(value) = false) Then
				Me.OnREGIS_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REGIS_IDA = value
				Me.SendPropertyChanged("REGIS_IDA")
				Me.OnREGIS_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="Int")>  _
	Public Property AMOUNT() As System.Nullable(Of Integer)
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (Me._AMOUNT.Equals(value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT", DbType:="NVarChar(50)")>  _
	Public Property UNIT() As String
		Get
			Return Me._UNIT
		End Get
		Set
			If (String.Equals(Me._UNIT, value) = false) Then
				Me.OnUNITChanging(value)
				Me.SendPropertyChanging
				Me._UNIT = value
				Me.SendPropertyChanged("UNIT")
				Me.OnUNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PLAN", DbType:="Int")>  _
	Public Property FK_PLAN() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PLAN
		End Get
		Set
			If (Me._FK_PLAN.Equals(value) = false) Then
				Me.OnFK_PLANChanging(value)
				Me.SendPropertyChanging
				Me._FK_PLAN = value
				Me.SendPropertyChanged("FK_PLAN")
				Me.OnFK_PLANChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(4)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CREATE", DbType:="DateTime")>  _
	Public Property DATE_CREATE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CREATE
		End Get
		Set
			If (Me._DATE_CREATE.Equals(value) = false) Then
				Me.OnDATE_CREATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_CREATE = value
				Me.SendPropertyChanged("DATE_CREATE")
				Me.OnDATE_CREATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAMPLE_SPECIAL")>  _
Partial Public Class SAMPLE_SPECIAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LCN As String
	
	Private _PLACE_NM As String
	
	Private _AMPHUR_NM As String
	
	Private _AMPHUR_CD As String
	
	Private _CHNGWT As String
	
	Private _CHNGWT_CD As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _LEAD_INSPECT As String
	
	Private _INVESTIGATE_TYPE As String
	
	Private _LEAD_INSPECT_IDA As String
	
	Private _INVESTIGATE_TYPECD As System.Nullable(Of Integer)
	
	Private _LAST_INVESTIGATE_DATE As System.Nullable(Of Date)
	
	Private _INVESTIGATE_DATE_START As System.Nullable(Of Date)
	
	Private _INVESTIGATE_DATE_END As System.Nullable(Of Date)
	
	Private _CER_EXPIRE_DATE As System.Nullable(Of Date)
	
	Private _IMPORT As String
	
	Private _REMARK As String
	
	Private _POSTPONE As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _PLAN_COLOR As String
	
	Private _ACTIVE As System.Nullable(Of Integer)
	
	Private _REF_CAPA_ID As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _VERSION As System.Nullable(Of Integer)
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _REQUEST_EDIT As System.Nullable(Of Integer)
	
	Private _REQUEST_EDIT_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLCNChanging(value As String)
    End Sub
    Partial Private Sub OnLCNChanged()
    End Sub
    Partial Private Sub OnPLACE_NMChanging(value As String)
    End Sub
    Partial Private Sub OnPLACE_NMChanged()
    End Sub
    Partial Private Sub OnAMPHUR_NMChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHUR_NMChanged()
    End Sub
    Partial Private Sub OnAMPHUR_CDChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHUR_CDChanged()
    End Sub
    Partial Private Sub OnCHNGWTChanging(value As String)
    End Sub
    Partial Private Sub OnCHNGWTChanged()
    End Sub
    Partial Private Sub OnCHNGWT_CDChanging(value As String)
    End Sub
    Partial Private Sub OnCHNGWT_CDChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnLEAD_INSPECTChanging(value As String)
    End Sub
    Partial Private Sub OnLEAD_INSPECTChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPEChanged()
    End Sub
    Partial Private Sub OnLEAD_INSPECT_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnLEAD_INSPECT_IDAChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPECDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPECDChanged()
    End Sub
    Partial Private Sub OnLAST_INVESTIGATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAST_INVESTIGATE_DATEChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_STARTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_STARTChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_ENDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_ENDChanged()
    End Sub
    Partial Private Sub OnCER_EXPIRE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_EXPIRE_DATEChanged()
    End Sub
    Partial Private Sub OnIMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnIMPORTChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnPOSTPONEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSTPONEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnPLAN_COLORChanging(value As String)
    End Sub
    Partial Private Sub OnPLAN_COLORChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    Partial Private Sub OnREF_CAPA_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREF_CAPA_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnVERSIONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVERSIONChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnREQUEST_EDITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREQUEST_EDITChanged()
    End Sub
    Partial Private Sub OnREQUEST_EDIT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_EDIT_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN", DbType:="NVarChar(MAX)")>  _
	Public Property LCN() As String
		Get
			Return Me._LCN
		End Get
		Set
			If (String.Equals(Me._LCN, value) = false) Then
				Me.OnLCNChanging(value)
				Me.SendPropertyChanging
				Me._LCN = value
				Me.SendPropertyChanged("LCN")
				Me.OnLCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACE_NM", DbType:="NVarChar(MAX)")>  _
	Public Property PLACE_NM() As String
		Get
			Return Me._PLACE_NM
		End Get
		Set
			If (String.Equals(Me._PLACE_NM, value) = false) Then
				Me.OnPLACE_NMChanging(value)
				Me.SendPropertyChanging
				Me._PLACE_NM = value
				Me.SendPropertyChanged("PLACE_NM")
				Me.OnPLACE_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_NM", DbType:="NVarChar(MAX)")>  _
	Public Property AMPHUR_NM() As String
		Get
			Return Me._AMPHUR_NM
		End Get
		Set
			If (String.Equals(Me._AMPHUR_NM, value) = false) Then
				Me.OnAMPHUR_NMChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_NM = value
				Me.SendPropertyChanged("AMPHUR_NM")
				Me.OnAMPHUR_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_CD", DbType:="NVarChar(MAX)")>  _
	Public Property AMPHUR_CD() As String
		Get
			Return Me._AMPHUR_CD
		End Get
		Set
			If (String.Equals(Me._AMPHUR_CD, value) = false) Then
				Me.OnAMPHUR_CDChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_CD = value
				Me.SendPropertyChanged("AMPHUR_CD")
				Me.OnAMPHUR_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWT", DbType:="NVarChar(MAX)")>  _
	Public Property CHNGWT() As String
		Get
			Return Me._CHNGWT
		End Get
		Set
			If (String.Equals(Me._CHNGWT, value) = false) Then
				Me.OnCHNGWTChanging(value)
				Me.SendPropertyChanging
				Me._CHNGWT = value
				Me.SendPropertyChanged("CHNGWT")
				Me.OnCHNGWTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWT_CD", DbType:="NVarChar(MAX)")>  _
	Public Property CHNGWT_CD() As String
		Get
			Return Me._CHNGWT_CD
		End Get
		Set
			If (String.Equals(Me._CHNGWT_CD, value) = false) Then
				Me.OnCHNGWT_CDChanging(value)
				Me.SendPropertyChanging
				Me._CHNGWT_CD = value
				Me.SendPropertyChanged("CHNGWT_CD")
				Me.OnCHNGWT_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_INSPECT", DbType:="NVarChar(MAX)")>  _
	Public Property LEAD_INSPECT() As String
		Get
			Return Me._LEAD_INSPECT
		End Get
		Set
			If (String.Equals(Me._LEAD_INSPECT, value) = false) Then
				Me.OnLEAD_INSPECTChanging(value)
				Me.SendPropertyChanging
				Me._LEAD_INSPECT = value
				Me.SendPropertyChanged("LEAD_INSPECT")
				Me.OnLEAD_INSPECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property INVESTIGATE_TYPE() As String
		Get
			Return Me._INVESTIGATE_TYPE
		End Get
		Set
			If (String.Equals(Me._INVESTIGATE_TYPE, value) = false) Then
				Me.OnINVESTIGATE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_TYPE = value
				Me.SendPropertyChanged("INVESTIGATE_TYPE")
				Me.OnINVESTIGATE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_INSPECT_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property LEAD_INSPECT_IDA() As String
		Get
			Return Me._LEAD_INSPECT_IDA
		End Get
		Set
			If (String.Equals(Me._LEAD_INSPECT_IDA, value) = false) Then
				Me.OnLEAD_INSPECT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LEAD_INSPECT_IDA = value
				Me.SendPropertyChanged("LEAD_INSPECT_IDA")
				Me.OnLEAD_INSPECT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_TYPECD", DbType:="Int")>  _
	Public Property INVESTIGATE_TYPECD() As System.Nullable(Of Integer)
		Get
			Return Me._INVESTIGATE_TYPECD
		End Get
		Set
			If (Me._INVESTIGATE_TYPECD.Equals(value) = false) Then
				Me.OnINVESTIGATE_TYPECDChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_TYPECD = value
				Me.SendPropertyChanged("INVESTIGATE_TYPECD")
				Me.OnINVESTIGATE_TYPECDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_INVESTIGATE_DATE", DbType:="DateTime")>  _
	Public Property LAST_INVESTIGATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAST_INVESTIGATE_DATE
		End Get
		Set
			If (Me._LAST_INVESTIGATE_DATE.Equals(value) = false) Then
				Me.OnLAST_INVESTIGATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_INVESTIGATE_DATE = value
				Me.SendPropertyChanged("LAST_INVESTIGATE_DATE")
				Me.OnLAST_INVESTIGATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_DATE_START", DbType:="DateTime")>  _
	Public Property INVESTIGATE_DATE_START() As System.Nullable(Of Date)
		Get
			Return Me._INVESTIGATE_DATE_START
		End Get
		Set
			If (Me._INVESTIGATE_DATE_START.Equals(value) = false) Then
				Me.OnINVESTIGATE_DATE_STARTChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_DATE_START = value
				Me.SendPropertyChanged("INVESTIGATE_DATE_START")
				Me.OnINVESTIGATE_DATE_STARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_DATE_END", DbType:="DateTime")>  _
	Public Property INVESTIGATE_DATE_END() As System.Nullable(Of Date)
		Get
			Return Me._INVESTIGATE_DATE_END
		End Get
		Set
			If (Me._INVESTIGATE_DATE_END.Equals(value) = false) Then
				Me.OnINVESTIGATE_DATE_ENDChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_DATE_END = value
				Me.SendPropertyChanged("INVESTIGATE_DATE_END")
				Me.OnINVESTIGATE_DATE_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_EXPIRE_DATE", DbType:="DateTime")>  _
	Public Property CER_EXPIRE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_EXPIRE_DATE
		End Get
		Set
			If (Me._CER_EXPIRE_DATE.Equals(value) = false) Then
				Me.OnCER_EXPIRE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_EXPIRE_DATE = value
				Me.SendPropertyChanged("CER_EXPIRE_DATE")
				Me.OnCER_EXPIRE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMPORT", DbType:="NVarChar(MAX)")>  _
	Public Property IMPORT() As String
		Get
			Return Me._IMPORT
		End Get
		Set
			If (String.Equals(Me._IMPORT, value) = false) Then
				Me.OnIMPORTChanging(value)
				Me.SendPropertyChanging
				Me._IMPORT = value
				Me.SendPropertyChanged("IMPORT")
				Me.OnIMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE", DbType:="NVarChar(MAX)")>  _
	Public Property POSTPONE() As String
		Get
			Return Me._POSTPONE
		End Get
		Set
			If (String.Equals(Me._POSTPONE, value) = false) Then
				Me.OnPOSTPONEChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE = value
				Me.SendPropertyChanged("POSTPONE")
				Me.OnPOSTPONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_COLOR", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_COLOR() As String
		Get
			Return Me._PLAN_COLOR
		End Get
		Set
			If (String.Equals(Me._PLAN_COLOR, value) = false) Then
				Me.OnPLAN_COLORChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_COLOR = value
				Me.SendPropertyChanged("PLAN_COLOR")
				Me.OnPLAN_COLORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Int")>  _
	Public Property ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CAPA_ID", DbType:="Int")>  _
	Public Property REF_CAPA_ID() As System.Nullable(Of Integer)
		Get
			Return Me._REF_CAPA_ID
		End Get
		Set
			If (Me._REF_CAPA_ID.Equals(value) = false) Then
				Me.OnREF_CAPA_IDChanging(value)
				Me.SendPropertyChanging
				Me._REF_CAPA_ID = value
				Me.SendPropertyChanged("REF_CAPA_ID")
				Me.OnREF_CAPA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VERSION", DbType:="Int")>  _
	Public Property VERSION() As System.Nullable(Of Integer)
		Get
			Return Me._VERSION
		End Get
		Set
			If (Me._VERSION.Equals(value) = false) Then
				Me.OnVERSIONChanging(value)
				Me.SendPropertyChanging
				Me._VERSION = value
				Me.SendPropertyChanged("VERSION")
				Me.OnVERSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_EDIT", DbType:="Int")>  _
	Public Property REQUEST_EDIT() As System.Nullable(Of Integer)
		Get
			Return Me._REQUEST_EDIT
		End Get
		Set
			If (Me._REQUEST_EDIT.Equals(value) = false) Then
				Me.OnREQUEST_EDITChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_EDIT = value
				Me.SendPropertyChanged("REQUEST_EDIT")
				Me.OnREQUEST_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_EDIT_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_EDIT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_EDIT_DATE
		End Get
		Set
			If (Me._REQUEST_EDIT_DATE.Equals(value) = false) Then
				Me.OnREQUEST_EDIT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_EDIT_DATE = value
				Me.SendPropertyChanged("REQUEST_EDIT_DATE")
				Me.OnREQUEST_EDIT_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SEIZE")>  _
Partial Public Class SEIZE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Druglist As String
	
	Private _number As String
	
	Private _motive As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_PLAN_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDruglistChanging(value As String)
    End Sub
    Partial Private Sub OnDruglistChanged()
    End Sub
    Partial Private Sub OnnumberChanging(value As String)
    End Sub
    Partial Private Sub OnnumberChanged()
    End Sub
    Partial Private Sub OnmotiveChanging(value As String)
    End Sub
    Partial Private Sub OnmotiveChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_PLAN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Druglist", DbType:="NVarChar(MAX)")>  _
	Public Property Druglist() As String
		Get
			Return Me._Druglist
		End Get
		Set
			If (String.Equals(Me._Druglist, value) = false) Then
				Me.OnDruglistChanging(value)
				Me.SendPropertyChanging
				Me._Druglist = value
				Me.SendPropertyChanged("Druglist")
				Me.OnDruglistChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_number", DbType:="NVarChar(MAX)")>  _
	Public Property number() As String
		Get
			Return Me._number
		End Get
		Set
			If (String.Equals(Me._number, value) = false) Then
				Me.OnnumberChanging(value)
				Me.SendPropertyChanging
				Me._number = value
				Me.SendPropertyChanged("number")
				Me.OnnumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_motive", DbType:="NVarChar(MAX)")>  _
	Public Property motive() As String
		Get
			Return Me._motive
		End Get
		Set
			If (String.Equals(Me._motive, value) = false) Then
				Me.OnmotiveChanging(value)
				Me.SendPropertyChanging
				Me._motive = value
				Me.SendPropertyChanged("motive")
				Me.OnmotiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PLAN_ID", DbType:="Int")>  _
	Public Property FK_PLAN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PLAN_ID
		End Get
		Set
			If (Me._FK_PLAN_ID.Equals(value) = false) Then
				Me.OnFK_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_PLAN_ID = value
				Me.SendPropertyChanged("FK_PLAN_ID")
				Me.OnFK_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SUR_AND_SAMP_TEMP")>  _
Partial Public Class SUR_AND_SAMP_TEMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_XML As System.Nullable(Of Integer)
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _PLACE_NM As String
	
	Private _AMPHUR_NM As String
	
	Private _AMPHUR_CD As System.Nullable(Of Integer)
	
	Private _CHNGWT_NM As String
	
	Private _CHNGWT_CD As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _LEAD_INSPECT As String
	
	Private _LEAD_INSPECT_IDA As System.Nullable(Of Integer)
	
	Private _INVESTIGATE_TYPE As String
	
	Private _INVESTIGATE_TYPECD As System.Nullable(Of Integer)
	
	Private _LAST_INVESTIGATE_DATE As System.Nullable(Of Date)
	
	Private _INVESTIGATE_DATE_START As System.Nullable(Of Date)
	
	Private _INVESTIGATE_DATE_END As System.Nullable(Of Date)
	
	Private _CER_EXPIRE_DATE As System.Nullable(Of Date)
	
	Private _REMARK As String
	
	Private _POSTPONE As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _PLAN_COLOR As String
	
	Private _ACTIVE As System.Nullable(Of Integer)
	
	Private _ISLOCK As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
	Private _REF_CODE As String
	
	Private _Long_address As String
	
	Private _Permit_Number As String
	
	Private _Dummy_INVESTIGATE_TYPE As String
	
	Private _Operation_Number As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _VERSION As System.Nullable(Of Integer)
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _REQUEST_EDIT As System.Nullable(Of Integer)
	
	Private _REQUEST_EDIT_DATE As System.Nullable(Of Date)
	
	Private _REF_CAPA_ID As System.Nullable(Of Integer)
	
	Private _ADD_IN_XML As System.Nullable(Of Integer)
	
	Private _lcnno As String
	
	Private _lcntpcd As String
	
	Private _Identify As String
	
	Private _xml_name As String
	
	Private _pvncd As String
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_XMLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_XMLChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnPLACE_NMChanging(value As String)
    End Sub
    Partial Private Sub OnPLACE_NMChanged()
    End Sub
    Partial Private Sub OnAMPHUR_NMChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHUR_NMChanged()
    End Sub
    Partial Private Sub OnAMPHUR_CDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAMPHUR_CDChanged()
    End Sub
    Partial Private Sub OnCHNGWT_NMChanging(value As String)
    End Sub
    Partial Private Sub OnCHNGWT_NMChanged()
    End Sub
    Partial Private Sub OnCHNGWT_CDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHNGWT_CDChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnLEAD_INSPECTChanging(value As String)
    End Sub
    Partial Private Sub OnLEAD_INSPECTChanged()
    End Sub
    Partial Private Sub OnLEAD_INSPECT_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLEAD_INSPECT_IDAChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPEChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPECDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPECDChanged()
    End Sub
    Partial Private Sub OnLAST_INVESTIGATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAST_INVESTIGATE_DATEChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_STARTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_STARTChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_ENDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_ENDChanged()
    End Sub
    Partial Private Sub OnCER_EXPIRE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_EXPIRE_DATEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnPOSTPONEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSTPONEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnPLAN_COLORChanging(value As String)
    End Sub
    Partial Private Sub OnPLAN_COLORChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    Partial Private Sub OnISLOCKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnISLOCKChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnLong_addressChanging(value As String)
    End Sub
    Partial Private Sub OnLong_addressChanged()
    End Sub
    Partial Private Sub OnPermit_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnPermit_NumberChanged()
    End Sub
    Partial Private Sub OnDummy_INVESTIGATE_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnDummy_INVESTIGATE_TYPEChanged()
    End Sub
    Partial Private Sub OnOperation_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnOperation_NumberChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnVERSIONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVERSIONChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnREQUEST_EDITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREQUEST_EDITChanged()
    End Sub
    Partial Private Sub OnREQUEST_EDIT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_EDIT_DATEChanged()
    End Sub
    Partial Private Sub OnREF_CAPA_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREF_CAPA_IDChanged()
    End Sub
    Partial Private Sub OnADD_IN_XMLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnADD_IN_XMLChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnIdentifyChanging(value As String)
    End Sub
    Partial Private Sub OnIdentifyChanged()
    End Sub
    Partial Private Sub Onxml_nameChanging(value As String)
    End Sub
    Partial Private Sub Onxml_nameChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_XML", DbType:="Int")>  _
	Public Property FK_XML() As System.Nullable(Of Integer)
		Get
			Return Me._FK_XML
		End Get
		Set
			If (Me._FK_XML.Equals(value) = false) Then
				Me.OnFK_XMLChanging(value)
				Me.SendPropertyChanging
				Me._FK_XML = value
				Me.SendPropertyChanged("FK_XML")
				Me.OnFK_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACE_NM", DbType:="NVarChar(MAX)")>  _
	Public Property PLACE_NM() As String
		Get
			Return Me._PLACE_NM
		End Get
		Set
			If (String.Equals(Me._PLACE_NM, value) = false) Then
				Me.OnPLACE_NMChanging(value)
				Me.SendPropertyChanging
				Me._PLACE_NM = value
				Me.SendPropertyChanged("PLACE_NM")
				Me.OnPLACE_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_NM", DbType:="NVarChar(MAX)")>  _
	Public Property AMPHUR_NM() As String
		Get
			Return Me._AMPHUR_NM
		End Get
		Set
			If (String.Equals(Me._AMPHUR_NM, value) = false) Then
				Me.OnAMPHUR_NMChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_NM = value
				Me.SendPropertyChanged("AMPHUR_NM")
				Me.OnAMPHUR_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_CD", DbType:="Int")>  _
	Public Property AMPHUR_CD() As System.Nullable(Of Integer)
		Get
			Return Me._AMPHUR_CD
		End Get
		Set
			If (Me._AMPHUR_CD.Equals(value) = false) Then
				Me.OnAMPHUR_CDChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_CD = value
				Me.SendPropertyChanged("AMPHUR_CD")
				Me.OnAMPHUR_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWT_NM", DbType:="NVarChar(MAX)")>  _
	Public Property CHNGWT_NM() As String
		Get
			Return Me._CHNGWT_NM
		End Get
		Set
			If (String.Equals(Me._CHNGWT_NM, value) = false) Then
				Me.OnCHNGWT_NMChanging(value)
				Me.SendPropertyChanging
				Me._CHNGWT_NM = value
				Me.SendPropertyChanged("CHNGWT_NM")
				Me.OnCHNGWT_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWT_CD", DbType:="Int")>  _
	Public Property CHNGWT_CD() As System.Nullable(Of Integer)
		Get
			Return Me._CHNGWT_CD
		End Get
		Set
			If (Me._CHNGWT_CD.Equals(value) = false) Then
				Me.OnCHNGWT_CDChanging(value)
				Me.SendPropertyChanging
				Me._CHNGWT_CD = value
				Me.SendPropertyChanged("CHNGWT_CD")
				Me.OnCHNGWT_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_INSPECT", DbType:="NVarChar(MAX)")>  _
	Public Property LEAD_INSPECT() As String
		Get
			Return Me._LEAD_INSPECT
		End Get
		Set
			If (String.Equals(Me._LEAD_INSPECT, value) = false) Then
				Me.OnLEAD_INSPECTChanging(value)
				Me.SendPropertyChanging
				Me._LEAD_INSPECT = value
				Me.SendPropertyChanged("LEAD_INSPECT")
				Me.OnLEAD_INSPECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_INSPECT_IDA", DbType:="Int")>  _
	Public Property LEAD_INSPECT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LEAD_INSPECT_IDA
		End Get
		Set
			If (Me._LEAD_INSPECT_IDA.Equals(value) = false) Then
				Me.OnLEAD_INSPECT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LEAD_INSPECT_IDA = value
				Me.SendPropertyChanged("LEAD_INSPECT_IDA")
				Me.OnLEAD_INSPECT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property INVESTIGATE_TYPE() As String
		Get
			Return Me._INVESTIGATE_TYPE
		End Get
		Set
			If (String.Equals(Me._INVESTIGATE_TYPE, value) = false) Then
				Me.OnINVESTIGATE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_TYPE = value
				Me.SendPropertyChanged("INVESTIGATE_TYPE")
				Me.OnINVESTIGATE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_TYPECD", DbType:="Int")>  _
	Public Property INVESTIGATE_TYPECD() As System.Nullable(Of Integer)
		Get
			Return Me._INVESTIGATE_TYPECD
		End Get
		Set
			If (Me._INVESTIGATE_TYPECD.Equals(value) = false) Then
				Me.OnINVESTIGATE_TYPECDChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_TYPECD = value
				Me.SendPropertyChanged("INVESTIGATE_TYPECD")
				Me.OnINVESTIGATE_TYPECDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_INVESTIGATE_DATE", DbType:="DateTime")>  _
	Public Property LAST_INVESTIGATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAST_INVESTIGATE_DATE
		End Get
		Set
			If (Me._LAST_INVESTIGATE_DATE.Equals(value) = false) Then
				Me.OnLAST_INVESTIGATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_INVESTIGATE_DATE = value
				Me.SendPropertyChanged("LAST_INVESTIGATE_DATE")
				Me.OnLAST_INVESTIGATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_DATE_START", DbType:="DateTime")>  _
	Public Property INVESTIGATE_DATE_START() As System.Nullable(Of Date)
		Get
			Return Me._INVESTIGATE_DATE_START
		End Get
		Set
			If (Me._INVESTIGATE_DATE_START.Equals(value) = false) Then
				Me.OnINVESTIGATE_DATE_STARTChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_DATE_START = value
				Me.SendPropertyChanged("INVESTIGATE_DATE_START")
				Me.OnINVESTIGATE_DATE_STARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_DATE_END", DbType:="DateTime")>  _
	Public Property INVESTIGATE_DATE_END() As System.Nullable(Of Date)
		Get
			Return Me._INVESTIGATE_DATE_END
		End Get
		Set
			If (Me._INVESTIGATE_DATE_END.Equals(value) = false) Then
				Me.OnINVESTIGATE_DATE_ENDChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_DATE_END = value
				Me.SendPropertyChanged("INVESTIGATE_DATE_END")
				Me.OnINVESTIGATE_DATE_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_EXPIRE_DATE", DbType:="DateTime")>  _
	Public Property CER_EXPIRE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_EXPIRE_DATE
		End Get
		Set
			If (Me._CER_EXPIRE_DATE.Equals(value) = false) Then
				Me.OnCER_EXPIRE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_EXPIRE_DATE = value
				Me.SendPropertyChanged("CER_EXPIRE_DATE")
				Me.OnCER_EXPIRE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE", DbType:="NVarChar(MAX)")>  _
	Public Property POSTPONE() As String
		Get
			Return Me._POSTPONE
		End Get
		Set
			If (String.Equals(Me._POSTPONE, value) = false) Then
				Me.OnPOSTPONEChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE = value
				Me.SendPropertyChanged("POSTPONE")
				Me.OnPOSTPONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_COLOR", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_COLOR() As String
		Get
			Return Me._PLAN_COLOR
		End Get
		Set
			If (String.Equals(Me._PLAN_COLOR, value) = false) Then
				Me.OnPLAN_COLORChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_COLOR = value
				Me.SendPropertyChanged("PLAN_COLOR")
				Me.OnPLAN_COLORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Int")>  _
	Public Property ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISLOCK", DbType:="Int")>  _
	Public Property ISLOCK() As System.Nullable(Of Integer)
		Get
			Return Me._ISLOCK
		End Get
		Set
			If (Me._ISLOCK.Equals(value) = false) Then
				Me.OnISLOCKChanging(value)
				Me.SendPropertyChanging
				Me._ISLOCK = value
				Me.SendPropertyChanged("ISLOCK")
				Me.OnISLOCKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(MAX)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Long_address", DbType:="NVarChar(MAX)")>  _
	Public Property Long_address() As String
		Get
			Return Me._Long_address
		End Get
		Set
			If (String.Equals(Me._Long_address, value) = false) Then
				Me.OnLong_addressChanging(value)
				Me.SendPropertyChanging
				Me._Long_address = value
				Me.SendPropertyChanged("Long_address")
				Me.OnLong_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Permit_Number", DbType:="NVarChar(MAX)")>  _
	Public Property Permit_Number() As String
		Get
			Return Me._Permit_Number
		End Get
		Set
			If (String.Equals(Me._Permit_Number, value) = false) Then
				Me.OnPermit_NumberChanging(value)
				Me.SendPropertyChanging
				Me._Permit_Number = value
				Me.SendPropertyChanged("Permit_Number")
				Me.OnPermit_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dummy_INVESTIGATE_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property Dummy_INVESTIGATE_TYPE() As String
		Get
			Return Me._Dummy_INVESTIGATE_TYPE
		End Get
		Set
			If (String.Equals(Me._Dummy_INVESTIGATE_TYPE, value) = false) Then
				Me.OnDummy_INVESTIGATE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._Dummy_INVESTIGATE_TYPE = value
				Me.SendPropertyChanged("Dummy_INVESTIGATE_TYPE")
				Me.OnDummy_INVESTIGATE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Operation_Number", DbType:="NVarChar(50)")>  _
	Public Property Operation_Number() As String
		Get
			Return Me._Operation_Number
		End Get
		Set
			If (String.Equals(Me._Operation_Number, value) = false) Then
				Me.OnOperation_NumberChanging(value)
				Me.SendPropertyChanging
				Me._Operation_Number = value
				Me.SendPropertyChanged("Operation_Number")
				Me.OnOperation_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VERSION", DbType:="Int")>  _
	Public Property VERSION() As System.Nullable(Of Integer)
		Get
			Return Me._VERSION
		End Get
		Set
			If (Me._VERSION.Equals(value) = false) Then
				Me.OnVERSIONChanging(value)
				Me.SendPropertyChanging
				Me._VERSION = value
				Me.SendPropertyChanged("VERSION")
				Me.OnVERSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_EDIT", DbType:="Int")>  _
	Public Property REQUEST_EDIT() As System.Nullable(Of Integer)
		Get
			Return Me._REQUEST_EDIT
		End Get
		Set
			If (Me._REQUEST_EDIT.Equals(value) = false) Then
				Me.OnREQUEST_EDITChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_EDIT = value
				Me.SendPropertyChanged("REQUEST_EDIT")
				Me.OnREQUEST_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_EDIT_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_EDIT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_EDIT_DATE
		End Get
		Set
			If (Me._REQUEST_EDIT_DATE.Equals(value) = false) Then
				Me.OnREQUEST_EDIT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_EDIT_DATE = value
				Me.SendPropertyChanged("REQUEST_EDIT_DATE")
				Me.OnREQUEST_EDIT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CAPA_ID", DbType:="Int")>  _
	Public Property REF_CAPA_ID() As System.Nullable(Of Integer)
		Get
			Return Me._REF_CAPA_ID
		End Get
		Set
			If (Me._REF_CAPA_ID.Equals(value) = false) Then
				Me.OnREF_CAPA_IDChanging(value)
				Me.SendPropertyChanging
				Me._REF_CAPA_ID = value
				Me.SendPropertyChanged("REF_CAPA_ID")
				Me.OnREF_CAPA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADD_IN_XML", DbType:="Int")>  _
	Public Property ADD_IN_XML() As System.Nullable(Of Integer)
		Get
			Return Me._ADD_IN_XML
		End Get
		Set
			If (Me._ADD_IN_XML.Equals(value) = false) Then
				Me.OnADD_IN_XMLChanging(value)
				Me.SendPropertyChanging
				Me._ADD_IN_XML = value
				Me.SendPropertyChanged("ADD_IN_XML")
				Me.OnADD_IN_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identify", DbType:="NVarChar(MAX)")>  _
	Public Property Identify() As String
		Get
			Return Me._Identify
		End Get
		Set
			If (String.Equals(Me._Identify, value) = false) Then
				Me.OnIdentifyChanging(value)
				Me.SendPropertyChanging
				Me._Identify = value
				Me.SendPropertyChanged("Identify")
				Me.OnIdentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xml_name", DbType:="NVarChar(MAX)")>  _
	Public Property xml_name() As String
		Get
			Return Me._xml_name
		End Get
		Set
			If (String.Equals(Me._xml_name, value) = false) Then
				Me.Onxml_nameChanging(value)
				Me.SendPropertyChanging
				Me._xml_name = value
				Me.SendPropertyChanged("xml_name")
				Me.Onxml_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SURVELANCE_SPECIALCASE")>  _
Partial Public Class SURVELANCE_SPECIALCASE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LCN As String
	
	Private _PLACE_NM As String
	
	Private _AMPHUR_NM As String
	
	Private _AMPHUR_CD As String
	
	Private _CHNGWT As String
	
	Private _CHNGWT_CD As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _LEAD_INSPECT As String
	
	Private _INVESTIGATE_TYPE As String
	
	Private _LEAD_INSPECT_IDA As String
	
	Private _INVESTIGATE_TYPECD As System.Nullable(Of Integer)
	
	Private _LAST_INVESTIGATE_DATE As System.Nullable(Of Date)
	
	Private _INVESTIGATE_DATE_START As System.Nullable(Of Date)
	
	Private _INVESTIGATE_DATE_END As System.Nullable(Of Date)
	
	Private _CER_EXPIRE_DATE As System.Nullable(Of Date)
	
	Private _IMPORT As String
	
	Private _REMARK As String
	
	Private _POSTPONE As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _PLAN_COLOR As String
	
	Private _ACTIVE As System.Nullable(Of Integer)
	
	Private _REF_CAPA_ID As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _VERSION As System.Nullable(Of Integer)
	
	Private _PLAN_TYPE As System.Nullable(Of Integer)
	
	Private _REQUEST_EDIT As System.Nullable(Of Integer)
	
	Private _REQUEST_EDIT_DATE As System.Nullable(Of Date)
	
	Private _lcnno As String
	
	Private _lcntpcd As String
	
	Private _Identify As String
	
	Private _xml_name As String
	
	Private _pvncd As String
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLCNChanging(value As String)
    End Sub
    Partial Private Sub OnLCNChanged()
    End Sub
    Partial Private Sub OnPLACE_NMChanging(value As String)
    End Sub
    Partial Private Sub OnPLACE_NMChanged()
    End Sub
    Partial Private Sub OnAMPHUR_NMChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHUR_NMChanged()
    End Sub
    Partial Private Sub OnAMPHUR_CDChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHUR_CDChanged()
    End Sub
    Partial Private Sub OnCHNGWTChanging(value As String)
    End Sub
    Partial Private Sub OnCHNGWTChanged()
    End Sub
    Partial Private Sub OnCHNGWT_CDChanging(value As String)
    End Sub
    Partial Private Sub OnCHNGWT_CDChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnLEAD_INSPECTChanging(value As String)
    End Sub
    Partial Private Sub OnLEAD_INSPECTChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPEChanged()
    End Sub
    Partial Private Sub OnLEAD_INSPECT_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnLEAD_INSPECT_IDAChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPECDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINVESTIGATE_TYPECDChanged()
    End Sub
    Partial Private Sub OnLAST_INVESTIGATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAST_INVESTIGATE_DATEChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_STARTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_STARTChanged()
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_ENDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINVESTIGATE_DATE_ENDChanged()
    End Sub
    Partial Private Sub OnCER_EXPIRE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_EXPIRE_DATEChanged()
    End Sub
    Partial Private Sub OnIMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnIMPORTChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnPOSTPONEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSTPONEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnPLAN_COLORChanging(value As String)
    End Sub
    Partial Private Sub OnPLAN_COLORChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    Partial Private Sub OnREF_CAPA_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREF_CAPA_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnVERSIONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVERSIONChanged()
    End Sub
    Partial Private Sub OnPLAN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLAN_TYPEChanged()
    End Sub
    Partial Private Sub OnREQUEST_EDITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREQUEST_EDITChanged()
    End Sub
    Partial Private Sub OnREQUEST_EDIT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_EDIT_DATEChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnIdentifyChanging(value As String)
    End Sub
    Partial Private Sub OnIdentifyChanged()
    End Sub
    Partial Private Sub Onxml_nameChanging(value As String)
    End Sub
    Partial Private Sub Onxml_nameChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN", DbType:="NVarChar(MAX)")>  _
	Public Property LCN() As String
		Get
			Return Me._LCN
		End Get
		Set
			If (String.Equals(Me._LCN, value) = false) Then
				Me.OnLCNChanging(value)
				Me.SendPropertyChanging
				Me._LCN = value
				Me.SendPropertyChanged("LCN")
				Me.OnLCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACE_NM", DbType:="NVarChar(MAX)")>  _
	Public Property PLACE_NM() As String
		Get
			Return Me._PLACE_NM
		End Get
		Set
			If (String.Equals(Me._PLACE_NM, value) = false) Then
				Me.OnPLACE_NMChanging(value)
				Me.SendPropertyChanging
				Me._PLACE_NM = value
				Me.SendPropertyChanged("PLACE_NM")
				Me.OnPLACE_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_NM", DbType:="NVarChar(MAX)")>  _
	Public Property AMPHUR_NM() As String
		Get
			Return Me._AMPHUR_NM
		End Get
		Set
			If (String.Equals(Me._AMPHUR_NM, value) = false) Then
				Me.OnAMPHUR_NMChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_NM = value
				Me.SendPropertyChanged("AMPHUR_NM")
				Me.OnAMPHUR_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_CD", DbType:="NVarChar(MAX)")>  _
	Public Property AMPHUR_CD() As String
		Get
			Return Me._AMPHUR_CD
		End Get
		Set
			If (String.Equals(Me._AMPHUR_CD, value) = false) Then
				Me.OnAMPHUR_CDChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_CD = value
				Me.SendPropertyChanged("AMPHUR_CD")
				Me.OnAMPHUR_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWT", DbType:="NVarChar(MAX)")>  _
	Public Property CHNGWT() As String
		Get
			Return Me._CHNGWT
		End Get
		Set
			If (String.Equals(Me._CHNGWT, value) = false) Then
				Me.OnCHNGWTChanging(value)
				Me.SendPropertyChanging
				Me._CHNGWT = value
				Me.SendPropertyChanged("CHNGWT")
				Me.OnCHNGWTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHNGWT_CD", DbType:="NVarChar(MAX)")>  _
	Public Property CHNGWT_CD() As String
		Get
			Return Me._CHNGWT_CD
		End Get
		Set
			If (String.Equals(Me._CHNGWT_CD, value) = false) Then
				Me.OnCHNGWT_CDChanging(value)
				Me.SendPropertyChanging
				Me._CHNGWT_CD = value
				Me.SendPropertyChanged("CHNGWT_CD")
				Me.OnCHNGWT_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_INSPECT", DbType:="NVarChar(MAX)")>  _
	Public Property LEAD_INSPECT() As String
		Get
			Return Me._LEAD_INSPECT
		End Get
		Set
			If (String.Equals(Me._LEAD_INSPECT, value) = false) Then
				Me.OnLEAD_INSPECTChanging(value)
				Me.SendPropertyChanging
				Me._LEAD_INSPECT = value
				Me.SendPropertyChanged("LEAD_INSPECT")
				Me.OnLEAD_INSPECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property INVESTIGATE_TYPE() As String
		Get
			Return Me._INVESTIGATE_TYPE
		End Get
		Set
			If (String.Equals(Me._INVESTIGATE_TYPE, value) = false) Then
				Me.OnINVESTIGATE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_TYPE = value
				Me.SendPropertyChanged("INVESTIGATE_TYPE")
				Me.OnINVESTIGATE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEAD_INSPECT_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property LEAD_INSPECT_IDA() As String
		Get
			Return Me._LEAD_INSPECT_IDA
		End Get
		Set
			If (String.Equals(Me._LEAD_INSPECT_IDA, value) = false) Then
				Me.OnLEAD_INSPECT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LEAD_INSPECT_IDA = value
				Me.SendPropertyChanged("LEAD_INSPECT_IDA")
				Me.OnLEAD_INSPECT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_TYPECD", DbType:="Int")>  _
	Public Property INVESTIGATE_TYPECD() As System.Nullable(Of Integer)
		Get
			Return Me._INVESTIGATE_TYPECD
		End Get
		Set
			If (Me._INVESTIGATE_TYPECD.Equals(value) = false) Then
				Me.OnINVESTIGATE_TYPECDChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_TYPECD = value
				Me.SendPropertyChanged("INVESTIGATE_TYPECD")
				Me.OnINVESTIGATE_TYPECDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_INVESTIGATE_DATE", DbType:="DateTime")>  _
	Public Property LAST_INVESTIGATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAST_INVESTIGATE_DATE
		End Get
		Set
			If (Me._LAST_INVESTIGATE_DATE.Equals(value) = false) Then
				Me.OnLAST_INVESTIGATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_INVESTIGATE_DATE = value
				Me.SendPropertyChanged("LAST_INVESTIGATE_DATE")
				Me.OnLAST_INVESTIGATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_DATE_START", DbType:="DateTime")>  _
	Public Property INVESTIGATE_DATE_START() As System.Nullable(Of Date)
		Get
			Return Me._INVESTIGATE_DATE_START
		End Get
		Set
			If (Me._INVESTIGATE_DATE_START.Equals(value) = false) Then
				Me.OnINVESTIGATE_DATE_STARTChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_DATE_START = value
				Me.SendPropertyChanged("INVESTIGATE_DATE_START")
				Me.OnINVESTIGATE_DATE_STARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTIGATE_DATE_END", DbType:="DateTime")>  _
	Public Property INVESTIGATE_DATE_END() As System.Nullable(Of Date)
		Get
			Return Me._INVESTIGATE_DATE_END
		End Get
		Set
			If (Me._INVESTIGATE_DATE_END.Equals(value) = false) Then
				Me.OnINVESTIGATE_DATE_ENDChanging(value)
				Me.SendPropertyChanging
				Me._INVESTIGATE_DATE_END = value
				Me.SendPropertyChanged("INVESTIGATE_DATE_END")
				Me.OnINVESTIGATE_DATE_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_EXPIRE_DATE", DbType:="DateTime")>  _
	Public Property CER_EXPIRE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_EXPIRE_DATE
		End Get
		Set
			If (Me._CER_EXPIRE_DATE.Equals(value) = false) Then
				Me.OnCER_EXPIRE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_EXPIRE_DATE = value
				Me.SendPropertyChanged("CER_EXPIRE_DATE")
				Me.OnCER_EXPIRE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMPORT", DbType:="NVarChar(MAX)")>  _
	Public Property IMPORT() As String
		Get
			Return Me._IMPORT
		End Get
		Set
			If (String.Equals(Me._IMPORT, value) = false) Then
				Me.OnIMPORTChanging(value)
				Me.SendPropertyChanging
				Me._IMPORT = value
				Me.SendPropertyChanged("IMPORT")
				Me.OnIMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE", DbType:="NVarChar(MAX)")>  _
	Public Property POSTPONE() As String
		Get
			Return Me._POSTPONE
		End Get
		Set
			If (String.Equals(Me._POSTPONE, value) = false) Then
				Me.OnPOSTPONEChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE = value
				Me.SendPropertyChanged("POSTPONE")
				Me.OnPOSTPONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_COLOR", DbType:="NVarChar(MAX)")>  _
	Public Property PLAN_COLOR() As String
		Get
			Return Me._PLAN_COLOR
		End Get
		Set
			If (String.Equals(Me._PLAN_COLOR, value) = false) Then
				Me.OnPLAN_COLORChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_COLOR = value
				Me.SendPropertyChanged("PLAN_COLOR")
				Me.OnPLAN_COLORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Int")>  _
	Public Property ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CAPA_ID", DbType:="Int")>  _
	Public Property REF_CAPA_ID() As System.Nullable(Of Integer)
		Get
			Return Me._REF_CAPA_ID
		End Get
		Set
			If (Me._REF_CAPA_ID.Equals(value) = false) Then
				Me.OnREF_CAPA_IDChanging(value)
				Me.SendPropertyChanging
				Me._REF_CAPA_ID = value
				Me.SendPropertyChanged("REF_CAPA_ID")
				Me.OnREF_CAPA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VERSION", DbType:="Int")>  _
	Public Property VERSION() As System.Nullable(Of Integer)
		Get
			Return Me._VERSION
		End Get
		Set
			If (Me._VERSION.Equals(value) = false) Then
				Me.OnVERSIONChanging(value)
				Me.SendPropertyChanging
				Me._VERSION = value
				Me.SendPropertyChanged("VERSION")
				Me.OnVERSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLAN_TYPE", DbType:="Int")>  _
	Public Property PLAN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PLAN_TYPE
		End Get
		Set
			If (Me._PLAN_TYPE.Equals(value) = false) Then
				Me.OnPLAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PLAN_TYPE = value
				Me.SendPropertyChanged("PLAN_TYPE")
				Me.OnPLAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_EDIT", DbType:="Int")>  _
	Public Property REQUEST_EDIT() As System.Nullable(Of Integer)
		Get
			Return Me._REQUEST_EDIT
		End Get
		Set
			If (Me._REQUEST_EDIT.Equals(value) = false) Then
				Me.OnREQUEST_EDITChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_EDIT = value
				Me.SendPropertyChanged("REQUEST_EDIT")
				Me.OnREQUEST_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_EDIT_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_EDIT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_EDIT_DATE
		End Get
		Set
			If (Me._REQUEST_EDIT_DATE.Equals(value) = false) Then
				Me.OnREQUEST_EDIT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_EDIT_DATE = value
				Me.SendPropertyChanged("REQUEST_EDIT_DATE")
				Me.OnREQUEST_EDIT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identify", DbType:="NVarChar(MAX)")>  _
	Public Property Identify() As String
		Get
			Return Me._Identify
		End Get
		Set
			If (String.Equals(Me._Identify, value) = false) Then
				Me.OnIdentifyChanging(value)
				Me.SendPropertyChanging
				Me._Identify = value
				Me.SendPropertyChanged("Identify")
				Me.OnIdentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xml_name", DbType:="NVarChar(MAX)")>  _
	Public Property xml_name() As String
		Get
			Return Me._xml_name
		End Get
		Set
			If (String.Equals(Me._xml_name, value) = false) Then
				Me.Onxml_nameChanging(value)
				Me.SendPropertyChanging
				Me._xml_name = value
				Me.SendPropertyChanged("xml_name")
				Me.Onxml_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SURVILLANCE")>  _
Partial Public Class SURVILLANCE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Check_pattern As String
	
	Private _Check_scope As String
	
	Private _Check_Data As String
	
	Private _check_simple As String
	
	Private _drug_lable As String
	
	Private _Sample_Analysis As String
	
	Private _Sample_consultation As String
	
	Private _drughold As String
	
	Private _drugFreeze As String
	
	Private _drugrevoke As String
	
	Private _Destroy_drugs As String
	
	Private _Advertising As String
	
	Private _Audit As String
	
	Private _FK_PLAN_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _REF_CODE As String
	
	Private _TR_ID As String
	
	Private _lcnno As String
	
	Private _lcntpcd As String
	
	Private _Identify As String
	
	Private _xml_name As String
	
	Private _pvncd As String
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCheck_patternChanging(value As String)
    End Sub
    Partial Private Sub OnCheck_patternChanged()
    End Sub
    Partial Private Sub OnCheck_scopeChanging(value As String)
    End Sub
    Partial Private Sub OnCheck_scopeChanged()
    End Sub
    Partial Private Sub OnCheck_DataChanging(value As String)
    End Sub
    Partial Private Sub OnCheck_DataChanged()
    End Sub
    Partial Private Sub Oncheck_simpleChanging(value As String)
    End Sub
    Partial Private Sub Oncheck_simpleChanged()
    End Sub
    Partial Private Sub Ondrug_lableChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_lableChanged()
    End Sub
    Partial Private Sub OnSample_AnalysisChanging(value As String)
    End Sub
    Partial Private Sub OnSample_AnalysisChanged()
    End Sub
    Partial Private Sub OnSample_consultationChanging(value As String)
    End Sub
    Partial Private Sub OnSample_consultationChanged()
    End Sub
    Partial Private Sub OndrugholdChanging(value As String)
    End Sub
    Partial Private Sub OndrugholdChanged()
    End Sub
    Partial Private Sub OndrugFreezeChanging(value As String)
    End Sub
    Partial Private Sub OndrugFreezeChanged()
    End Sub
    Partial Private Sub OndrugrevokeChanging(value As String)
    End Sub
    Partial Private Sub OndrugrevokeChanged()
    End Sub
    Partial Private Sub OnDestroy_drugsChanging(value As String)
    End Sub
    Partial Private Sub OnDestroy_drugsChanged()
    End Sub
    Partial Private Sub OnAdvertisingChanging(value As String)
    End Sub
    Partial Private Sub OnAdvertisingChanged()
    End Sub
    Partial Private Sub OnAuditChanging(value As String)
    End Sub
    Partial Private Sub OnAuditChanged()
    End Sub
    Partial Private Sub OnFK_PLAN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnIdentifyChanging(value As String)
    End Sub
    Partial Private Sub OnIdentifyChanged()
    End Sub
    Partial Private Sub Onxml_nameChanging(value As String)
    End Sub
    Partial Private Sub Onxml_nameChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Check_pattern", DbType:="NVarChar(MAX)")>  _
	Public Property Check_pattern() As String
		Get
			Return Me._Check_pattern
		End Get
		Set
			If (String.Equals(Me._Check_pattern, value) = false) Then
				Me.OnCheck_patternChanging(value)
				Me.SendPropertyChanging
				Me._Check_pattern = value
				Me.SendPropertyChanged("Check_pattern")
				Me.OnCheck_patternChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Check_scope", DbType:="NVarChar(MAX)")>  _
	Public Property Check_scope() As String
		Get
			Return Me._Check_scope
		End Get
		Set
			If (String.Equals(Me._Check_scope, value) = false) Then
				Me.OnCheck_scopeChanging(value)
				Me.SendPropertyChanging
				Me._Check_scope = value
				Me.SendPropertyChanged("Check_scope")
				Me.OnCheck_scopeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Check_Data", DbType:="NVarChar(MAX)")>  _
	Public Property Check_Data() As String
		Get
			Return Me._Check_Data
		End Get
		Set
			If (String.Equals(Me._Check_Data, value) = false) Then
				Me.OnCheck_DataChanging(value)
				Me.SendPropertyChanging
				Me._Check_Data = value
				Me.SendPropertyChanged("Check_Data")
				Me.OnCheck_DataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_check_simple", DbType:="NVarChar(MAX)")>  _
	Public Property check_simple() As String
		Get
			Return Me._check_simple
		End Get
		Set
			If (String.Equals(Me._check_simple, value) = false) Then
				Me.Oncheck_simpleChanging(value)
				Me.SendPropertyChanging
				Me._check_simple = value
				Me.SendPropertyChanged("check_simple")
				Me.Oncheck_simpleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_lable", DbType:="NVarChar(MAX)")>  _
	Public Property drug_lable() As String
		Get
			Return Me._drug_lable
		End Get
		Set
			If (String.Equals(Me._drug_lable, value) = false) Then
				Me.Ondrug_lableChanging(value)
				Me.SendPropertyChanging
				Me._drug_lable = value
				Me.SendPropertyChanged("drug_lable")
				Me.Ondrug_lableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sample_Analysis", DbType:="NVarChar(MAX)")>  _
	Public Property Sample_Analysis() As String
		Get
			Return Me._Sample_Analysis
		End Get
		Set
			If (String.Equals(Me._Sample_Analysis, value) = false) Then
				Me.OnSample_AnalysisChanging(value)
				Me.SendPropertyChanging
				Me._Sample_Analysis = value
				Me.SendPropertyChanged("Sample_Analysis")
				Me.OnSample_AnalysisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sample_consultation", DbType:="NVarChar(MAX)")>  _
	Public Property Sample_consultation() As String
		Get
			Return Me._Sample_consultation
		End Get
		Set
			If (String.Equals(Me._Sample_consultation, value) = false) Then
				Me.OnSample_consultationChanging(value)
				Me.SendPropertyChanging
				Me._Sample_consultation = value
				Me.SendPropertyChanged("Sample_consultation")
				Me.OnSample_consultationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drughold", DbType:="NVarChar(MAX)")>  _
	Public Property drughold() As String
		Get
			Return Me._drughold
		End Get
		Set
			If (String.Equals(Me._drughold, value) = false) Then
				Me.OndrugholdChanging(value)
				Me.SendPropertyChanging
				Me._drughold = value
				Me.SendPropertyChanged("drughold")
				Me.OndrugholdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drugFreeze", DbType:="NVarChar(MAX)")>  _
	Public Property drugFreeze() As String
		Get
			Return Me._drugFreeze
		End Get
		Set
			If (String.Equals(Me._drugFreeze, value) = false) Then
				Me.OndrugFreezeChanging(value)
				Me.SendPropertyChanging
				Me._drugFreeze = value
				Me.SendPropertyChanged("drugFreeze")
				Me.OndrugFreezeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drugrevoke", DbType:="NVarChar(MAX)")>  _
	Public Property drugrevoke() As String
		Get
			Return Me._drugrevoke
		End Get
		Set
			If (String.Equals(Me._drugrevoke, value) = false) Then
				Me.OndrugrevokeChanging(value)
				Me.SendPropertyChanging
				Me._drugrevoke = value
				Me.SendPropertyChanged("drugrevoke")
				Me.OndrugrevokeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destroy_drugs", DbType:="NVarChar(MAX)")>  _
	Public Property Destroy_drugs() As String
		Get
			Return Me._Destroy_drugs
		End Get
		Set
			If (String.Equals(Me._Destroy_drugs, value) = false) Then
				Me.OnDestroy_drugsChanging(value)
				Me.SendPropertyChanging
				Me._Destroy_drugs = value
				Me.SendPropertyChanged("Destroy_drugs")
				Me.OnDestroy_drugsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Advertising", DbType:="NVarChar(MAX)")>  _
	Public Property Advertising() As String
		Get
			Return Me._Advertising
		End Get
		Set
			If (String.Equals(Me._Advertising, value) = false) Then
				Me.OnAdvertisingChanging(value)
				Me.SendPropertyChanging
				Me._Advertising = value
				Me.SendPropertyChanged("Advertising")
				Me.OnAdvertisingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Audit", DbType:="NVarChar(MAX)")>  _
	Public Property Audit() As String
		Get
			Return Me._Audit
		End Get
		Set
			If (String.Equals(Me._Audit, value) = false) Then
				Me.OnAuditChanging(value)
				Me.SendPropertyChanging
				Me._Audit = value
				Me.SendPropertyChanged("Audit")
				Me.OnAuditChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PLAN_ID", DbType:="Int")>  _
	Public Property FK_PLAN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PLAN_ID
		End Get
		Set
			If (Me._FK_PLAN_ID.Equals(value) = false) Then
				Me.OnFK_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_PLAN_ID = value
				Me.SendPropertyChanged("FK_PLAN_ID")
				Me.OnFK_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identify", DbType:="NVarChar(MAX)")>  _
	Public Property Identify() As String
		Get
			Return Me._Identify
		End Get
		Set
			If (String.Equals(Me._Identify, value) = false) Then
				Me.OnIdentifyChanging(value)
				Me.SendPropertyChanging
				Me._Identify = value
				Me.SendPropertyChanged("Identify")
				Me.OnIdentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xml_name", DbType:="NVarChar(MAX)")>  _
	Public Property xml_name() As String
		Get
			Return Me._xml_name
		End Get
		Set
			If (String.Equals(Me._xml_name, value) = false) Then
				Me.Onxml_nameChanging(value)
				Me.SendPropertyChanging
				Me._xml_name = value
				Me.SendPropertyChanged("xml_name")
				Me.Onxml_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sysprefix")>  _
Partial Public Class sysprefix
	
	Private _prefixcd As Short
	
	Private _thanm As String
	
	Private _engnm As String
	
	Private _thaabbr As String
	
	Private _engabbr As String
	
	Private _prefixst As Short
	
	Private _cscprfxcd As System.Nullable(Of Short)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcd", DbType:="SmallInt NOT NULL")>  _
	Public Property prefixcd() As Short
		Get
			Return Me._prefixcd
		End Get
		Set
			If ((Me._prefixcd = value)  _
						= false) Then
				Me._prefixcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me._thanm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnm", DbType:="VarChar(50)")>  _
	Public Property engnm() As String
		Get
			Return Me._engnm
		End Get
		Set
			If (String.Equals(Me._engnm, value) = false) Then
				Me._engnm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaabbr", DbType:="VarChar(35)")>  _
	Public Property thaabbr() As String
		Get
			Return Me._thaabbr
		End Get
		Set
			If (String.Equals(Me._thaabbr, value) = false) Then
				Me._thaabbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engabbr", DbType:="VarChar(35)")>  _
	Public Property engabbr() As String
		Get
			Return Me._engabbr
		End Get
		Set
			If (String.Equals(Me._engabbr, value) = false) Then
				Me._engabbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixst", DbType:="SmallInt NOT NULL")>  _
	Public Property prefixst() As Short
		Get
			Return Me._prefixst
		End Get
		Set
			If ((Me._prefixst = value)  _
						= false) Then
				Me._prefixst = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cscprfxcd", DbType:="SmallInt")>  _
	Public Property cscprfxcd() As System.Nullable(Of Short)
		Get
			Return Me._cscprfxcd
		End Get
		Set
			If (Me._cscprfxcd.Equals(value) = false) Then
				Me._cscprfxcd = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TABEAN")>  _
Partial Public Class TABEAN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TABEAN_NO As String
	
	Private _TABEAN_TYPE As String
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _drgtpcd As String
	
	Private _dgttpcd As String
	
	Private _rgtno As String
	
	Private _tradename_eng As String
	
	Private _tradename_th As String
	
	Private _authorize_name As String
	
	Private _country_alpha3 As String
	
	Private _country As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTABEAN_NOChanging(value As String)
    End Sub
    Partial Private Sub OnTABEAN_NOChanged()
    End Sub
    Partial Private Sub OnTABEAN_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTABEAN_TYPEChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OndgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OndgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub Ontradename_engChanging(value As String)
    End Sub
    Partial Private Sub Ontradename_engChanged()
    End Sub
    Partial Private Sub Ontradename_thChanging(value As String)
    End Sub
    Partial Private Sub Ontradename_thChanged()
    End Sub
    Partial Private Sub Onauthorize_nameChanging(value As String)
    End Sub
    Partial Private Sub Onauthorize_nameChanged()
    End Sub
    Partial Private Sub Oncountry_alpha3Changing(value As String)
    End Sub
    Partial Private Sub Oncountry_alpha3Changed()
    End Sub
    Partial Private Sub OncountryChanging(value As String)
    End Sub
    Partial Private Sub OncountryChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABEAN_NO", DbType:="NVarChar(MAX)")>  _
	Public Property TABEAN_NO() As String
		Get
			Return Me._TABEAN_NO
		End Get
		Set
			If (String.Equals(Me._TABEAN_NO, value) = false) Then
				Me.OnTABEAN_NOChanging(value)
				Me.SendPropertyChanging
				Me._TABEAN_NO = value
				Me.SendPropertyChanged("TABEAN_NO")
				Me.OnTABEAN_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABEAN_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property TABEAN_TYPE() As String
		Get
			Return Me._TABEAN_TYPE
		End Get
		Set
			If (String.Equals(Me._TABEAN_TYPE, value) = false) Then
				Me.OnTABEAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._TABEAN_TYPE = value
				Me.SendPropertyChanged("TABEAN_TYPE")
				Me.OnTABEAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(5)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property dgttpcd() As String
		Get
			Return Me._dgttpcd
		End Get
		Set
			If (String.Equals(Me._dgttpcd, value) = false) Then
				Me.OndgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._dgttpcd = value
				Me.SendPropertyChanged("dgttpcd")
				Me.OndgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(MAX)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tradename_eng", DbType:="NVarChar(MAX)")>  _
	Public Property tradename_eng() As String
		Get
			Return Me._tradename_eng
		End Get
		Set
			If (String.Equals(Me._tradename_eng, value) = false) Then
				Me.Ontradename_engChanging(value)
				Me.SendPropertyChanging
				Me._tradename_eng = value
				Me.SendPropertyChanged("tradename_eng")
				Me.Ontradename_engChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tradename_th", DbType:="NVarChar(MAX)")>  _
	Public Property tradename_th() As String
		Get
			Return Me._tradename_th
		End Get
		Set
			If (String.Equals(Me._tradename_th, value) = false) Then
				Me.Ontradename_thChanging(value)
				Me.SendPropertyChanging
				Me._tradename_th = value
				Me.SendPropertyChanged("tradename_th")
				Me.Ontradename_thChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_authorize_name", DbType:="NVarChar(MAX)")>  _
	Public Property authorize_name() As String
		Get
			Return Me._authorize_name
		End Get
		Set
			If (String.Equals(Me._authorize_name, value) = false) Then
				Me.Onauthorize_nameChanging(value)
				Me.SendPropertyChanging
				Me._authorize_name = value
				Me.SendPropertyChanged("authorize_name")
				Me.Onauthorize_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_country_alpha3", DbType:="NVarChar(5)")>  _
	Public Property country_alpha3() As String
		Get
			Return Me._country_alpha3
		End Get
		Set
			If (String.Equals(Me._country_alpha3, value) = false) Then
				Me.Oncountry_alpha3Changing(value)
				Me.SendPropertyChanging
				Me._country_alpha3 = value
				Me.SendPropertyChanged("country_alpha3")
				Me.Oncountry_alpha3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_country", DbType:="NVarChar(MAX)")>  _
	Public Property country() As String
		Get
			Return Me._country
		End Get
		Set
			If (String.Equals(Me._country, value) = false) Then
				Me.OncountryChanging(value)
				Me.SendPropertyChanging
				Me._country = value
				Me.SendPropertyChanged("country")
				Me.OncountryChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TB_GENKEY")>  _
Partial Public Class TB_GENKEY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _KEY_NAME As String
	
	Private _KEY_VAL As Integer
	
	Private _CREATED_DATETIME As Date
	
	Private _UPDATED_DATETIME As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnKEY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnKEY_NAMEChanged()
    End Sub
    Partial Private Sub OnKEY_VALChanging(value As Integer)
    End Sub
    Partial Private Sub OnKEY_VALChanged()
    End Sub
    Partial Private Sub OnCREATED_DATETIMEChanging(value As Date)
    End Sub
    Partial Private Sub OnCREATED_DATETIMEChanged()
    End Sub
    Partial Private Sub OnUPDATED_DATETIMEChanging(value As Date)
    End Sub
    Partial Private Sub OnUPDATED_DATETIMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEY_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property KEY_NAME() As String
		Get
			Return Me._KEY_NAME
		End Get
		Set
			If (String.Equals(Me._KEY_NAME, value) = false) Then
				Me.OnKEY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._KEY_NAME = value
				Me.SendPropertyChanged("KEY_NAME")
				Me.OnKEY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEY_VAL", DbType:="Int NOT NULL")>  _
	Public Property KEY_VAL() As Integer
		Get
			Return Me._KEY_VAL
		End Get
		Set
			If ((Me._KEY_VAL = value)  _
						= false) Then
				Me.OnKEY_VALChanging(value)
				Me.SendPropertyChanging
				Me._KEY_VAL = value
				Me.SendPropertyChanged("KEY_VAL")
				Me.OnKEY_VALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATED_DATETIME", DbType:="DateTime NOT NULL")>  _
	Public Property CREATED_DATETIME() As Date
		Get
			Return Me._CREATED_DATETIME
		End Get
		Set
			If ((Me._CREATED_DATETIME = value)  _
						= false) Then
				Me.OnCREATED_DATETIMEChanging(value)
				Me.SendPropertyChanging
				Me._CREATED_DATETIME = value
				Me.SendPropertyChanged("CREATED_DATETIME")
				Me.OnCREATED_DATETIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATED_DATETIME", DbType:="DateTime NOT NULL")>  _
	Public Property UPDATED_DATETIME() As Date
		Get
			Return Me._UPDATED_DATETIME
		End Get
		Set
			If ((Me._UPDATED_DATETIME = value)  _
						= false) Then
				Me.OnUPDATED_DATETIMEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATED_DATETIME = value
				Me.SendPropertyChanged("UPDATED_DATETIME")
				Me.OnUPDATED_DATETIMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TBL_TEST")>  _
Partial Public Class TBL_TEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _COL1 As String
	
	Private _COL2 As String
	
	Private _COL3 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCOL1Changing(value As String)
    End Sub
    Partial Private Sub OnCOL1Changed()
    End Sub
    Partial Private Sub OnCOL2Changing(value As String)
    End Sub
    Partial Private Sub OnCOL2Changed()
    End Sub
    Partial Private Sub OnCOL3Changing(value As String)
    End Sub
    Partial Private Sub OnCOL3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL1", DbType:="NVarChar(50)")>  _
	Public Property COL1() As String
		Get
			Return Me._COL1
		End Get
		Set
			If (String.Equals(Me._COL1, value) = false) Then
				Me.OnCOL1Changing(value)
				Me.SendPropertyChanging
				Me._COL1 = value
				Me.SendPropertyChanged("COL1")
				Me.OnCOL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL2", DbType:="NVarChar(50)")>  _
	Public Property COL2() As String
		Get
			Return Me._COL2
		End Get
		Set
			If (String.Equals(Me._COL2, value) = false) Then
				Me.OnCOL2Changing(value)
				Me.SendPropertyChanging
				Me._COL2 = value
				Me.SendPropertyChanged("COL2")
				Me.OnCOL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL3", DbType:="NVarChar(50)")>  _
	Public Property COL3() As String
		Get
			Return Me._COL3
		End Get
		Set
			If (String.Equals(Me._COL3, value) = false) Then
				Me.OnCOL3Changing(value)
				Me.SendPropertyChanging
				Me._COL3 = value
				Me.SendPropertyChanged("COL3")
				Me.OnCOL3Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TEMPLATE_ATTACH")>  _
Partial Public Class TEMPLATE_ATTACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LCNTPCD As String
	
	Private _ATTACH_NAME As String
	
	Private _ATTACH_PIORITY As System.Nullable(Of Integer)
	
	Private _ATTACH_FILE_EXTENSION As String
	
	Private _TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLCNTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTPCDChanged()
    End Sub
    Partial Private Sub OnATTACH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnATTACH_NAMEChanged()
    End Sub
    Partial Private Sub OnATTACH_PIORITYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_PIORITYChanged()
    End Sub
    Partial Private Sub OnATTACH_FILE_EXTENSIONChanging(value As String)
    End Sub
    Partial Private Sub OnATTACH_FILE_EXTENSIONChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTPCD", DbType:="NVarChar(MAX)")>  _
	Public Property LCNTPCD() As String
		Get
			Return Me._LCNTPCD
		End Get
		Set
			If (String.Equals(Me._LCNTPCD, value) = false) Then
				Me.OnLCNTPCDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTPCD = value
				Me.SendPropertyChanged("LCNTPCD")
				Me.OnLCNTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ATTACH_NAME() As String
		Get
			Return Me._ATTACH_NAME
		End Get
		Set
			If (String.Equals(Me._ATTACH_NAME, value) = false) Then
				Me.OnATTACH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_NAME = value
				Me.SendPropertyChanged("ATTACH_NAME")
				Me.OnATTACH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_PIORITY", DbType:="Int")>  _
	Public Property ATTACH_PIORITY() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_PIORITY
		End Get
		Set
			If (Me._ATTACH_PIORITY.Equals(value) = false) Then
				Me.OnATTACH_PIORITYChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_PIORITY = value
				Me.SendPropertyChanged("ATTACH_PIORITY")
				Me.OnATTACH_PIORITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_FILE_EXTENSION", DbType:="NVarChar(MAX)")>  _
	Public Property ATTACH_FILE_EXTENSION() As String
		Get
			Return Me._ATTACH_FILE_EXTENSION
		End Get
		Set
			If (String.Equals(Me._ATTACH_FILE_EXTENSION, value) = false) Then
				Me.OnATTACH_FILE_EXTENSIONChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_FILE_EXTENSION = value
				Me.SendPropertyChanged("ATTACH_FILE_EXTENSION")
				Me.OnATTACH_FILE_EXTENSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="Int")>  _
	Public Property TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE
		End Get
		Set
			If (Me._TYPE.Equals(value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Test_Entrepreneur")>  _
Partial Public Class Test_Entrepreneur
	
	Private _ID As Integer
	
	Private _AgcName As String
	
	Private _AgcFullAddr As String
	
	Private _AgcProvince As String
	
	Private _AgcLicenNo As String
	
	Private _AgcNumBook As String
	
	Private _StatusNum As String
	
	Private _StatusID As System.Nullable(Of Integer)
	
	Private _DrugID As String
	
	Private _DrugNameTH As String
	
	Private _DrugNameEng As String
	
	Private _DrugType As String
	
	Private _DrugIngreedient As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _UpdataDate As System.Nullable(Of Date)
	
	Private _ExpData As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgcName", DbType:="NVarChar(500)")>  _
	Public Property AgcName() As String
		Get
			Return Me._AgcName
		End Get
		Set
			If (String.Equals(Me._AgcName, value) = false) Then
				Me._AgcName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgcFullAddr", DbType:="NVarChar(MAX)")>  _
	Public Property AgcFullAddr() As String
		Get
			Return Me._AgcFullAddr
		End Get
		Set
			If (String.Equals(Me._AgcFullAddr, value) = false) Then
				Me._AgcFullAddr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgcProvince", DbType:="NVarChar(500)")>  _
	Public Property AgcProvince() As String
		Get
			Return Me._AgcProvince
		End Get
		Set
			If (String.Equals(Me._AgcProvince, value) = false) Then
				Me._AgcProvince = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgcLicenNo", DbType:="NVarChar(50)")>  _
	Public Property AgcLicenNo() As String
		Get
			Return Me._AgcLicenNo
		End Get
		Set
			If (String.Equals(Me._AgcLicenNo, value) = false) Then
				Me._AgcLicenNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgcNumBook", DbType:="NVarChar(700)")>  _
	Public Property AgcNumBook() As String
		Get
			Return Me._AgcNumBook
		End Get
		Set
			If (String.Equals(Me._AgcNumBook, value) = false) Then
				Me._AgcNumBook = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusNum", DbType:="NVarChar(50)")>  _
	Public Property StatusNum() As String
		Get
			Return Me._StatusNum
		End Get
		Set
			If (String.Equals(Me._StatusNum, value) = false) Then
				Me._StatusNum = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusID", DbType:="Int")>  _
	Public Property StatusID() As System.Nullable(Of Integer)
		Get
			Return Me._StatusID
		End Get
		Set
			If (Me._StatusID.Equals(value) = false) Then
				Me._StatusID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DrugID", DbType:="NVarChar(50)")>  _
	Public Property DrugID() As String
		Get
			Return Me._DrugID
		End Get
		Set
			If (String.Equals(Me._DrugID, value) = false) Then
				Me._DrugID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DrugNameTH", DbType:="NVarChar(500)")>  _
	Public Property DrugNameTH() As String
		Get
			Return Me._DrugNameTH
		End Get
		Set
			If (String.Equals(Me._DrugNameTH, value) = false) Then
				Me._DrugNameTH = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DrugNameEng", DbType:="NVarChar(500)")>  _
	Public Property DrugNameEng() As String
		Get
			Return Me._DrugNameEng
		End Get
		Set
			If (String.Equals(Me._DrugNameEng, value) = false) Then
				Me._DrugNameEng = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DrugType", DbType:="NVarChar(500)")>  _
	Public Property DrugType() As String
		Get
			Return Me._DrugType
		End Get
		Set
			If (String.Equals(Me._DrugType, value) = false) Then
				Me._DrugType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DrugIngreedient", DbType:="NVarChar(700)")>  _
	Public Property DrugIngreedient() As String
		Get
			Return Me._DrugIngreedient
		End Get
		Set
			If (String.Equals(Me._DrugIngreedient, value) = false) Then
				Me._DrugIngreedient = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdataDate", DbType:="DateTime")>  _
	Public Property UpdataDate() As System.Nullable(Of Date)
		Get
			Return Me._UpdataDate
		End Get
		Set
			If (Me._UpdataDate.Equals(value) = false) Then
				Me._UpdataDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpData", DbType:="DateTime")>  _
	Public Property ExpData() As System.Nullable(Of Date)
		Get
			Return Me._ExpData
		End Get
		Set
			If (Me._ExpData.Equals(value) = false) Then
				Me._ExpData = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSACTION_DOWNLOAD")>  _
Partial Public Class TRANSACTION_DOWNLOAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _DOWNLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _DOC_NM As String
	
	Private _DOC_TYPE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOWNLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnDOC_NMChanging(value As String)
    End Sub
    Partial Private Sub OnDOC_NMChanged()
    End Sub
    Partial Private Sub OnDOC_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnDOC_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_DATE", DbType:="DateTime")>  _
	Public Property DOWNLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOWNLOAD_DATE
		End Get
		Set
			If (Me._DOWNLOAD_DATE.Equals(value) = false) Then
				Me.OnDOWNLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_DATE = value
				Me.SendPropertyChanged("DOWNLOAD_DATE")
				Me.OnDOWNLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_NM", DbType:="NVarChar(MAX)")>  _
	Public Property DOC_NM() As String
		Get
			Return Me._DOC_NM
		End Get
		Set
			If (String.Equals(Me._DOC_NM, value) = false) Then
				Me.OnDOC_NMChanging(value)
				Me.SendPropertyChanging
				Me._DOC_NM = value
				Me.SendPropertyChanged("DOC_NM")
				Me.OnDOC_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property DOC_TYPE() As String
		Get
			Return Me._DOC_TYPE
		End Get
		Set
			If (String.Equals(Me._DOC_TYPE, value) = false) Then
				Me.OnDOC_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DOC_TYPE = value
				Me.SendPropertyChanged("DOC_TYPE")
				Me.OnDOC_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSACTION_UPLOAD")>  _
Partial Public Class TRANSACTION_UPLOAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _TRANSACTION_ID As String
	
	Private _FILE_NAME As String
	
	Private _EMAIL As String
	
	Private _UPLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _REF_NO As String
	
	Private _DOWNLOAD_ID As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
	Private _TYPE As String
	
	Private _NAME_FACK As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanged()
    End Sub
    Partial Private Sub OnFILE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFILE_NAMEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnNAME_FACKChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_FACKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSACTION_ID", DbType:="NVarChar(50)")>  _
	Public Property TRANSACTION_ID() As String
		Get
			Return Me._TRANSACTION_ID
		End Get
		Set
			If (String.Equals(Me._TRANSACTION_ID, value) = false) Then
				Me.OnTRANSACTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSACTION_ID = value
				Me.SendPropertyChanged("TRANSACTION_ID")
				Me.OnTRANSACTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FILE_NAME() As String
		Get
			Return Me._FILE_NAME
		End Get
		Set
			If (String.Equals(Me._FILE_NAME, value) = false) Then
				Me.OnFILE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FILE_NAME = value
				Me.SendPropertyChanged("FILE_NAME")
				Me.OnFILE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(50)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPLOAD_DATE", DbType:="DateTime")>  _
	Public Property UPLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPLOAD_DATE
		End Get
		Set
			If (Me._UPLOAD_DATE.Equals(value) = false) Then
				Me.OnUPLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPLOAD_DATE = value
				Me.SendPropertyChanged("UPLOAD_DATE")
				Me.OnUPLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_ID", DbType:="Int")>  _
	Public Property DOWNLOAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWNLOAD_ID
		End Get
		Set
			If (Me._DOWNLOAD_ID.Equals(value) = false) Then
				Me.OnDOWNLOAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_ID = value
				Me.SendPropertyChanged("DOWNLOAD_ID")
				Me.OnDOWNLOAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(10)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_FACK", DbType:="NVarChar(50)")>  _
	Public Property NAME_FACK() As String
		Get
			Return Me._NAME_FACK
		End Get
		Set
			If (String.Equals(Me._NAME_FACK, value) = false) Then
				Me.OnNAME_FACKChanging(value)
				Me.SendPropertyChanging
				Me._NAME_FACK = value
				Me.SendPropertyChanged("NAME_FACK")
				Me.OnNAME_FACKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
